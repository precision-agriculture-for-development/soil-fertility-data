
  ___  ____  ____  ____  ____ (R)
 /__    /   ____/   /   ____/
___/   /   /___/   /   /___/   16.1   Copyright 1985-2019 StataCorp LLC
  Statistics/Data Analysis            StataCorp
                                      4905 Lakeway Drive
     MP - Parallel Edition            College Station, Texas 77845 USA
                                      800-STATA-PC        http://www.stata.com
                                      979-696-4600        stata@stata.com
                                      979-696-4601 (fax)

Unlimited-user 4-core Stata network license expires 17 Nov 2020:
       Serial number:  501609257375
         Licensed to:  hbsuser
                       Harvard Business School

Notes:
      1.  Stata is running in batch mode.
      2.  Unicode is supported; see help unicode_advice.
      3.  More than 2 billion observations are allowed; see help obs_advice.
      4.  Maximum number of variables is set to 5000; see help set_maxvar.

. do "main.do" 

. drop _all

. set more off

. capture log close

. set logtype text

. 
. /****************************************************************************
> PROJECT: ATAI YEAR 2
> DESCRIPTION: ANALYSIS FOR PAPER
> ORGANIZATION: PAD
> AUTHOR: GRADY KILLEEN
> CREATED: 03/20/2020
> ****************************************************************************/
. 
. //Set directory: insert the path to the repository root folder 
. 
. if c(hostname) == "grady-XPS-13-7390" {
.         global user "/home/grady/Documents/research/atai-paper"
.         set python_exec /home/grady/miniconda3/envs/stata/bin/python
. }

. 
. else if c(username) == "grady" {
.   global user "/mass_storage/research/atai-paper"
.   set python_exec /home/grady/miniconda3/envs/stata/bin/python
. }

. 
. cd "$user"
/home/grady/Documents/research/atai-paper

. 
. global merged_data "data/ATAI_Endline_2019_Clean_Merged.dta"

. global rainfall_data "data/rainfall.dta"

. global final_data "`c(tmpdir)'/final_data.dta"

. global final_data_with_attriters "`c(tmpdir)'/final_data_with_attriters.dta" 
>  //Keeps observations of farmers that didn't grow cotton for power calculatio
> ns 

. 
. //The randomization inference in Table B3 is very computationally intensive. 
> Set this toggle to true to skip this table if it already exists.
. global skip_ri = "True"

. 
. //Program for creating graphs in batch or interactive mode, requires Stata 16
> , a Python installation, and the Python package cairosvg (pip install cairosv
> g)
. capture program drop gexport

. program define gexport
  1.  syntax, file(string) 
  2.  if "`c(mode)'" == "batch" {
  3. graph export "`c(tmpdir)'/graph.svg", replace width(1000)
  4. local tmp_path "`c(tmpdir)'/graph.svg"
  5. python: from sfi import Macro
  6. python: import cairosvg
  7. python: cairosvg.svg2png(url=Macro.getLocal("tmp_path"), write_to=Macro.ge
> tLocal("file"))
  8.  } 
  9.  else {
 10.         graph export "`file'", width(1000) replace
 11.  }
 12. end

. 
. **********************************************************
. * Prepare the data for analysis (remove attriters, generate common variables,
>  convert units, etc.)
. **********************************************************
. 
. do do/data_preparation.do

. use "$merged_data", clear 

. 
. *****************************************************************************
> *****************************
. * Create a merged cotton area variable (in hectares) that uses farmer-reporte
> d data if GPS data is not available
. *****************************************************************************
> *****************************
. generate merged_cotton_area = calc_cotton_area 
(197 missing values generated)

. replace merged_cotton_area = reported_cotton_area if missing(calc_cotton_area
> ) //Endline farmer-reported cotton area 
(72 real changes made)

. replace merged_cotton_area = Cotton_area if missing(merged_cotton_area) //Mid
> line farmer-reported cotton area 
(102 real changes made)

. 
. replace merged_cotton_area = merged_cotton_area/6.177625  // Conversion from 
> bigha to hectares 
(1,563 real changes made)

. 
. *****************************************************************************
> *****************************
. * Create indicator variables defining the sample based on survey data and sat
> ellite data 
. *****************************************************************************
> *****************************
. // Generate an indicator for whether the respondent answered the basal AND fu
> ll season fertilizer questions 
. generate missing_basal = cond(missing(SII_5), 1, 0)

. generate missing_midline = cond(missing(used_inorganic_fertilizers), 1, 0)

. egen missing_fertilizer_data = rowmax(missing_basal missing_midline)

. generate complete_fertilizer_data = 1 - missing_fertilizer_data

. label var complete_fertilizer_data "Respondent provided basal and full season
>  fertilizer data"

. label define complete_fertilizer_data 0 "Missing basal or full season fertili
> zer data" 1 "Complete fertilizer data"

. label val complete_fertilizer_data complete_fertilizer_data

. drop missing_basal missing_midline missing_fertilizer_data

. 
. // Generate an indicator capturing whether we have endline satellite data 
. generate satellite_data = 0 

. foreach x of varlist c_re705_2018*median {
  2.         replace satellite_data = 1 if !missing(`x')
  3. }
(1,382 real changes made)
(0 real changes made)
(0 real changes made)
(7 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. label var satellite_data "Satellite data available"

. label define satellite_data 0 "No satellite data" 1 "2018 satellite data"

. label val satellite_data satellite_data

. 
. *****************************************************************************
> *****************************
. * Calculate basal fertilizer application information, in per hectare values 
. *****************************************************************************
> *****************************
. 
. //Basal fertilizer area 
. //If applied fertilizer to full plot, recode area applied with cotton area (c
> alculated) 
. //If did not apply fertilizer, recode area applied to 0 
. 
. //Calculate this as calculated area of plot times fraction of plot fertilizer
>  was applied to 
. 
. destring SII_4_1 SII_5, force replace 
SII_4_1: all characters numeric; replaced as byte
(264 missing values generated)
SII_5: all characters numeric; replaced as byte
(269 missing values generated)

. 
. foreach x in "UREA" "DAP" "MOP" "ZINC" {
  2. 
. replace SII_6_1_`x' = 0 if SII_5 == 0
  3. 
. }
(224 real changes made)
(224 real changes made)
(224 real changes made)
(224 real changes made)

. 
. foreach x in "UREA" "DAP" "MOP" "ZINC" {
  2.   replace `x'_area = 0 if SII_6_1_`x' == 0  // Did not apply any of specif
> ic fertilizer 
  3.   replace `x'_area = 0 if SII_5 == 0 //Indicates no fertilizer was applied
>  
  4.   rename `x'_area `x'_fraction_basal
  5.   generate `x'_area_basal = merged_cotton_area*`x'_fraction_basal
  6. }
(1,136 real changes made)
(0 real changes made)
(269 missing values generated)
(379 real changes made)
(0 real changes made)
(269 missing values generated)
(1,211 real changes made)
(0 real changes made)
(269 missing values generated)
(1,287 real changes made)
(0 real changes made)
(269 missing values generated)

. 
. replace area_units = "hectare" if area_units == "hectare"
(0 real changes made)

. 
. *First we need to convert all recommendations to per hectare values 
. *The original conversions were to bigha, but we want per hectare for the pape
> r, so just convert the final value
. foreach x of varlist zinc_rec_ir *bd_rec* *total_rec* {
  2.         replace `x' = `x' / 2.5 if area_units =="acre"
  3.         replace `x' = `x' / 6.177625 if area_units =="hectare"
  4.         replace `x' = `x' / 6.177625 if area_units =="guntha"
  5.         replace `x' = 6.177625 * `x' //From per bigha to per hectare value
> s
  6. }
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)
(247 real changes made)
(1 real change made)
(1 real change made)
(1,585 real changes made)

. 
. *Next calculate application in kg/hectare using self-reported fertilizer appl
> ication and true plot size 
. foreach x in "UREA" "DAP" "MOP" "ZINC" {
  2.         replace `x'_Kg = 0 if SII_6_1_`x' == 0 //Indicates that they did n
> ot apply the fertilizer type
  3.         replace `x'_Kg = 0 if SII_5 == 0 //Indicates no basal fertilizer w
> as applied 
  4.         generate `x'_kg_hectare_bd = `x'_Kg/`x'_area_basal
  5.         local proper = proper("`x'")
  6.         replace `x'_kg_hectare_bd = 0 if `x'_area_basal == 0 //This replac
> es erroneously missing values created by trying to divide by 0
  7. }
(224 real changes made)
(0 real changes made)
(1,405 missing values generated)
(1,136 real changes made)
(224 real changes made)
(0 real changes made)
(648 missing values generated)
(379 real changes made)
(224 real changes made)
(0 real changes made)
(1,480 missing values generated)
(1,211 real changes made)
(224 real changes made)
(0 real changes made)
(1,556 missing values generated)
(1,287 real changes made)

. 
. *Next generate the basal fertilizer gap variable 
. foreach x in "UREA" "DAP" "MOP" "ZINC"{
  2.         local lower = lower("`x'")
  3.         if "`x'" == "UREA" {
  4.         generate distance_`x' = abs(`lower'_bd_rec_ur - `x'_kg_hectare_bd)
  5.         replace distance_`x' = abs(`lower'_bd_rec_ir - `x'_kg_hectare_bd) 
> if SII_4_1 == 1
  6.         }
  7.         else{
  8.         if "`x'" == "ZINC" {
  9.         generate distance_`x' = abs(`x'_kg_hectare_bd - zinc_rec_ir) if SI
> I_4_1 == 1
 10.         replace distance_`x' = abs(`x'_kg_hectare_bd) if SII_4_1 == 0
 11.         }
 12.         else{
 13.         generate distance_`x' = abs(`lower'_bd_rec_ir - `x'_kg_hectare_bd)
>  if SII_4_1 == 1
 14.         replace distance_`x' = abs(`x'_kg_hectare_bd) if SII_4_1 == 0 
 15.         }
 16.         }
 17. 
.         winsor2 distance_`x', replace cuts(0 99)
 18. 
.         label var distance_`x' "Basal: distance between recommended and appli
> ed, `x'"
 19. }
(269 missing values generated)
(1,194 real changes made)
(392 missing values generated)
(123 real changes made)
(392 missing values generated)
(123 real changes made)
(392 missing values generated)
(123 real changes made)

. 
. foreach x in "UREA" "DAP" "MOP" "ZINC"{
  2. 
. local lower = lower("`x'")
  3. if "`x'" == "UREA" {
  4. generate difference_`x' = `x'_kg_hectare_bd - `lower'_bd_rec_ur 
  5. replace difference_`x' = `x'_kg_hectare_bd - `lower'_bd_rec_ir if SII_4_1 
> == 1
  6. }
  7. else{
  8. if "`x'" == "ZINC" {
  9. generate difference_`x' = `x'_kg_hectare_bd - zinc_rec_ir if SII_4_1 == 1
 10. replace difference_`x' = `x'_kg_hectare_bd if SII_4_1 == 0
 11. }
 12. else{
 13. generate difference_`x' = `x'_kg_hectare_bd - `lower'_bd_rec_ir if SII_4_1
>  == 1
 14. replace difference_`x' = `x'_kg_hectare_bd if SII_4_1 == 0 
 15. }
 16. }
 17. 
. winsor2 difference_`x', replace cuts(0 99)
 18. 
. label var difference_`x' "Basal: difference between recommended and applied, 
> `x'"
 19. }
(269 missing values generated)
(1,194 real changes made)
(392 missing values generated)
(123 real changes made)
(392 missing values generated)
(123 real changes made)
(392 missing values generated)
(123 real changes made)

. 
. *****************************************************************************
> *****************************
. * Calculate midline fertilizer application information, in per hectare values
>  
. *****************************************************************************
> *****************************
. 
. * Generate fertilizer application average area and average dose, full season 
. 
. foreach x in "urea" "dap" "mop" "zinc" {
  2.   egen `x'_fraction_average = rowmean(`x'_d?_area)
  3.   generate `x'_area_average = `x'_fraction_average*merged_cotton_area
  4.   generate `x'_kg_hectare_ml = `x'_total_kg/`x'_area_average 
  5.   replace `x'_area_average = 0 if used_`x' == 0 & !missing(merged_cotton_a
> rea)
  6.   replace `x'_kg_hectare_ml = 0 if used_`x' == 0 & !missing(merged_cotton_
> area)
  7. }
(132 missing values generated)
(146 missing values generated)
(378 missing values generated)
(0 real changes made)
(232 real changes made)
(132 missing values generated)
(146 missing values generated)
(420 missing values generated)
(0 real changes made)
(274 real changes made)
(132 missing values generated)
(146 missing values generated)
(1,376 missing values generated)
(1 real change made)
(1,228 real changes made)
(132 missing values generated)
(146 missing values generated)
(1,491 missing values generated)
(1 real change made)
(1,339 real changes made)

. 
. generate compost_total_rec = 6.177625*1500  //Rec per bigha was 1500 per acco
> rding to Victor's midline do file

. generate compost_kg_hectare = (compost_kg/merged_cotton_area)
(339 missing values generated)

. generate distance_compost = abs(compost_total_rec - compost_kg_hectare)
(339 missing values generated)

. label var distance_compost "Compost"

. 
. generate distance_urea = abs(urea_total_rec_ur - urea_kg_hectare_ml) 
(146 missing values generated)

. replace distance_urea = abs(urea_total_rec_ir - urea_kg_hectare_ml) if irriga
> tion_ml == 1 
(1,020 real changes made)

. label var distance_urea "UREA"

. 
. generate distance_dap = dap_kg_hectare_ml /*Recommendation for unirrigated co
> tton was zero*/
(146 missing values generated)

. replace distance_dap = abs(dap_total_rec_ir - dap_kg_hectare_ml) if irrigatio
> n_ml == 1 /*Irrigated*/
(1,020 real changes made)

. label var distance_dap "DAP"

. 
. generate distance_mop = mop_kg_hectare_ml /*Recommendation for unirrigated co
> tton was zero*/
(148 missing values generated)

. replace distance_mop = abs(mop_total_rec_ir - mop_kg_hectare_ml) if irrigatio
> n_ml == 1 /*Irrigated*/
(1,016 real changes made)

. label var distance_mop "MOP"

. 
. generate distance_zinc = abs(zinc_kg_hectare_ml) /*Recommendation for unirrig
> ated cotton was zero*/
(152 missing values generated)

. replace distance_zinc = abs(zinc_sulphate_total_rec_ir - zinc_kg_hectare_ml) 
> if irrigation_ml == 1 /*Irrigated*/
(1,014 real changes made)

. label var distance_zinc "Zinc"

. 
. generate difference_urea = urea_kg_hectare_ml - urea_total_rec_ur 
(146 missing values generated)

. replace difference_urea = urea_kg_hectare_ml - urea_total_rec_ir if irrigatio
> n_ml == 1 
(1,020 real changes made)

. label var difference_urea "UREA"

. 
. generate difference_dap = dap_kg_hectare_ml /*Recommendation for unirrigated 
> cotton was zero*/
(146 missing values generated)

. replace difference_dap = dap_kg_hectare_ml - dap_total_rec_ir if irrigation_m
> l == 1 /*Irrigated*/
(1,020 real changes made)

. label var difference_dap "DAP"

. 
. generate difference_mop = mop_kg_hectare_ml /*Recommendation for unirrigated 
> cotton was zero*/
(148 missing values generated)

. replace difference_mop = mop_kg_hectare_ml - mop_total_rec_ir if irrigation_m
> l == 1 /*Irrigated*/
(1,017 real changes made)

. label var difference_mop "MOP"

. 
. generate difference_zinc = zinc_kg_hectare_ml /*Recommendation for unirrigate
> d cotton was zero*/
(152 missing values generated)

. replace difference_zinc = zinc_kg_hectare_ml - zinc_sulphate_total_rec_ir if 
> irrigation_ml == 1 /*Irrigated*/
(1,014 real changes made)

. label var difference_zinc "Zinc"

. 
. foreach x in "urea" "dap" "mop" "zinc" {
  2.         winsor2 distance_`x', cuts(0 99) replace
  3.         winsor2 difference_`x', cuts(0 99) replace
  4. }

. 
. *****************************************************************************
> *****************************
. * Farmer-reported yield/productivity  
. *****************************************************************************
> *****************************
. 
. //////////////////////////////////////////////////////
> //Self-reported harvest and plot size 
. //////////////////////////////////////////////////////
> 
. generate yield_hectare_2018_alt = 6.177625*(yield_kg/reported_cotton_area) 
(322 missing values generated)

. replace yield_hectare_2018_alt = 0 if harvested_cotton == 0 & !missing(report
> ed_cotton_area)
(78 real changes made)

. label var yield_hectare_2018_alt "Self-reported yield and area (kg/hectare)"

. 
. // Store raw variable in a tempvar 
. tempvar unwinsorized_yield

. generate `unwinsorized_yield' = yield_hectare_2018_alt
(244 missing values generated)

. 
. // We will winsorize POSITIVE yield values at the 2nd and 98th percentile. We
>  expect that values reported at 0 are actually accurate, but there can be sma
> ll 
. //outliers for very small positive values 
. tempvar positive_alt_18

. generate `positive_alt_18' = yield_hectare_2018_alt if yield_hectare_2018_alt
>  > 0
(322 missing values generated)

. winsor2 `positive_alt_18', replace cuts(2 98)

. replace yield_hectare_2018_alt = `positive_alt_18' if yield_hectare_2018 > 0
(50 real changes made)

. 
. generate yield_hectare_2017_alt = 6.177625*(sampled_plot_quantity_harvested/s
> ampled_plot_cotton_area) 
(6 missing values generated)

. tempvar positive_alt_17

. generate `positive_alt_17' = yield_hectare_2017_alt if yield_hectare_2017_alt
>  > 0
(39 missing values generated)

. winsor2 `positive_alt_17', replace cuts(2 98)

. replace yield_hectare_2017_alt = `positive_alt_17' if yield_hectare_2017_alt 
> > 0 
(57 real changes made)

. 
. //////////////////////////////////////////////////////
> //Self-reported harvest and measured plot size
. //////////////////////////////////////////////////////
> generate yield_hectare_2018 = 6.177625*(yield_kg/calc_cotton_area) 
(364 missing values generated)

. replace yield_hectare_2018 = 0 if harvested_cotton == 0 & !missing(calc_cotto
> n_area)
(80 real changes made)

. label var yield_hectare_2018 "Self-reported yield (kg/hectare)"

. 
. // We will winsorize POSITIVE yield values at the 2nd and 98th percentile. We
>  expect that values reported at 0 are actually accurate, but there can be sma
> ll 
. //outliers for very small positive values 
. tempvar positive_yield_18 

. generate `positive_yield_18' = yield_hectare_2018 if yield_hectare_2018 > 0
(364 missing values generated)

. winsor2 `positive_yield_18', replace cuts(2 98)

. replace yield_hectare_2018 = `positive_yield_18' if yield_hectare_2018 > 0
(48 real changes made)

. 
. generate yield_hectare_2017 = 6.177625*(sampled_plot_quantity_harvested/calc_
> cotton_area) 
(201 missing values generated)

. tempvar positive_yield_17 

. generate `positive_yield_17' = yield_hectare_2017 if yield_hectare_2017 > 0
(229 missing values generated)

. winsor2 `positive_yield_17', replace cuts(2 98)

. replace yield_hectare_2017 = `positive_yield_17' if yield_hectare_2017 > 0
(54 real changes made)

. 
. //////////////////////////////////////////////////////
> //Self-reported harvest and combined plot size
. //////////////////////////////////////////////////////
> generate yield_hectare_2018_merged = yield_kg/merged_cotton_area
(298 missing values generated)

. replace yield_hectare_2018_merged = 0 if harvested_cotton == 0 & !missing(mer
> ged_cotton_area)
(89 real changes made)

. label var yield_hectare_2018_merged "Self-reported yield (kg/hectare)"

. 
. // We will winsorize POSITIVE yield values at the 2nd and 98th percentile. We
>  expect that values reported at 0 are actually accurate, but there can be sma
> ll 
. //outliers for very small positive values 
. tempvar positive_yield_18_merged 

. generate `positive_yield_18_merged' = yield_hectare_2018_merged if yield_hect
> are_2018_merged > 0
(298 missing values generated)

. winsor2 `positive_yield_18_merged', replace cuts(2 98)

. replace yield_hectare_2018_merged = `positive_yield_18_merged' if yield_hecta
> re_2018_merged > 0
(50 real changes made)

. 
. generate yield_hectare_2017_merged = sampled_plot_quantity_harvested/merged_c
> otton_area 
(27 missing values generated)

. tempvar positive_yield_17_merged

. generate `positive_yield_17_merged' = yield_hectare_2017_merged if yield_hect
> are_2017_merged > 0
(60 missing values generated)

. winsor2 `positive_yield_17_merged', replace cuts(2 98)

. replace yield_hectare_2017_merged = `positive_yield_17_merged' if yield_hecta
> re_2017_merged > 0
(60 real changes made)

. 
. *****************************************************************************
> *****************************
. * Indicator variable identifying whether 2018 farmer-reported harvest and plo
> t size is non-missing
. *****************************************************************************
> *****************************
. 
. generate farmer_reported_yield = cond(missing(yield_hectare_2018_alt), 0, 1)

. label var farmer_reported_yield "Respondent provided yield data"

. label define farmer_reported_yield 0 "No farmer-reported yield" 1 "Farmer-rep
> orted yield"

. label val farmer_reported_yield farmer_reported_yield

. 
. *****************************************************************************
> *****************************
. * Fix instances when farmers said they did not sow cotton but reported cotton
>  yields
. *****************************************************************************
> *****************************
. replace sowed_cotton = 1 if !missing(yield_kg) & yield_kg > 0 
(14 real changes made)

. foreach x of varlist yield*2018* {
  2.         replace `x' = . if !missing(`x') & sowed_cotton == 0  // Handles a
>  case where the farmer said they did not sow cotton or harvest it, but yield 
> was coded to 0
  3. }
(1 real change made, 1 to missing)
(11 real changes made, 11 to missing)
(11 real changes made, 11 to missing)

. 
. *****************************************************************************
> *****************************
. * Calculate the peak value of each Sentinel-2 VI in each year 
. *****************************************************************************
> *****************************
. 
. //Drop the mean VI readings, which we decided not to use 
. drop c*mean 

. 
. //Drop the full plot zonal stats, which we do not use 
. drop p_*

. 
. //Drop satellite images before October 15th of each year 
. //We originally downloaded these, but were concerned that they're too early i
> n the growing season if farmers sowed late
. //Including them also decreased the R^2 between farmer-reported and satellite
>  yields 
. drop c*20180928_median c*20181003_median  c*20171008_median

. 
. foreach x in ndvi re705 gcvi mtci lai {
  2.         egen max_`x'_2018 = rowmax(c_`x'_2018*)
  3.         egen placebo_`x'_2018 = rowmax(c_placebo_`x'_2018*)
  4.         egen max_`x'_2017 = rowmax(c_`x'_2017*)
  5.         egen placebo_`x'_2017 = rowmax(c_placebo_`x'_2017*)
  6.         rename c_`x'_20161028_median max_`x'_2016  // There is only a sing
> le 2016 image
  7.         rename c_placebo_`x'_20161028_median placebo_`x'_2016
  8.         // Drop the individual passes which we no longer need 
.         drop c_`x'_2018*
  9.         drop c_`x'_2017*
 10.         drop c_placebo_`x'_2018*
 11.         drop c_placebo_`x'_2017*
 12. }
(197 missing values generated)
(197 missing values generated)
(200 missing values generated)
(200 missing values generated)
(197 missing values generated)
(197 missing values generated)
(200 missing values generated)
(200 missing values generated)
(197 missing values generated)
(197 missing values generated)
(200 missing values generated)
(200 missing values generated)
(197 missing values generated)
(197 missing values generated)
(200 missing values generated)
(200 missing values generated)
(197 missing values generated)
(197 missing values generated)
(200 missing values generated)
(200 missing values generated)

. 
. *****************************************************************************
> *****************************
. * Export a CSV for predicting the gap between satellite-estimated and farmer-
> reported yield in Python
. *****************************************************************************
> *****************************
. preserve 

. 
. //Generate satellite yield prediction for 2018
. regress yield_hectare_2018 max_re705_2018

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(1, 1289)      =    520.16
       Model |   287348822         1   287348822   Prob > F        =    0.0000
    Residual |   712068216     1,289  552419.097   R-squared       =    0.2875
-------------+----------------------------------   Adj R-squared   =    0.2870
       Total |   999417038     1,290   774741.89   Root MSE        =    743.25

------------------------------------------------------------------------------
yield_h~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2018 |   4011.132   175.8719    22.81   0.000     3666.105    4356.158
       _cons |  -277.7106   58.34909    -4.76   0.000    -392.1802    -163.241
------------------------------------------------------------------------------

. predict satellite_yield_2018, xb
(197 missing values generated)

. 
. //Generate variables for the difference between farmer-reported yield and sat
> ellite estimated yield and the absolute value of this difference 
. //Use raw data 
. generate difference_fr_sat = `unwinsorized_yield' - satellite_yield_2018
(316 missing values generated)

. generate distance_fr_sat = abs(difference_fr_sat)
(316 missing values generated)

. 
. //Only keep variables we plan to use, and observations for which the variable
> s we aim to predict are non-missing 
. drop if missing(difference_fr_sat)
(316 observations deleted)

. 
. replace b5 = . if b5 == 999  // Data cleaning issue 
(1 real change made, 1 to missing)

. replace willingness_to_experiment = . if willingness_to_experiment == 999  //
>  Data cleaning issue 
(4 real changes made, 4 to missing)

. 
. generate sow_time = Sow_date - date("2018-06-01", "YMD")  // Sowing date in d
> ays after June 1st
(158 missing values generated)

. 
. generate total_cotton_land_ha = total_cotton_land/6.177625  // Conversion fro
> m bigha to hectares 

. generate sampled_plot_size_ha = sampled_plot_size/6.177625
(1 missing value generated)

. 
. egen numerical_literacy = rowmin(b7 b8)

. egen literacy = rowmin(b5 b6)

. 
. keep uid difference_fr_sat distance_fr_sat age_bl total_cotton_land_ha sample
> d_plot_size_ha ///
> physical_irrigation_bl pucca_house plough_own crop_insurance children educate
> d soil_test_before ///
> tractor_own k?_correct literacy numerical_literacy risk_attitude_agriculture_
> bl savings financial_resilience sow_time

. 
. //Replace all extended missing values with normal missing values, so they cel
> ls are left blank in the CSV 
. ds, has(type numeric)
age_bl        tractor_own   k3_correct    crop_insur~e  sow_time
children      plough_own    k4_correct    financial_~e  total_cott~a
pucca_house   savings       k5_correct    physical_i~l  sampled_pl~a
soil_test_~e  k1_correct    k6_correct    difference~t  numerical_~y
risk_attit~l  k2_correct    educated      distance_f~t  literacy

. foreach x of varlist `r(varlist)' {
  2.   replace `x' = .  if missing(`x')
  3. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(16 real changes made, 16 to missing)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. export delimited using "data/nosync/fr_sat_gap_analysis.csv", replace nolabel
>  
(note: file data/nosync/fr_sat_gap_analysis.csv not found)
file data/nosync/fr_sat_gap_analysis.csv saved

. 
. restore 

. 
. *****************************************************************************
> *****************************
. * Export a CSV to examine whether we can predict 2018 yields in the treatment
>  group
. *****************************************************************************
> *****************************
. preserve 

. 
. //Generate satellite yield predictions
. regress yield_hectare_2018 max_re705_2018

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(1, 1289)      =    520.16
       Model |   287348822         1   287348822   Prob > F        =    0.0000
    Residual |   712068216     1,289  552419.097   R-squared       =    0.2875
-------------+----------------------------------   Adj R-squared   =    0.2870
       Total |   999417038     1,290   774741.89   Root MSE        =    743.25

------------------------------------------------------------------------------
yield_h~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2018 |   4011.132   175.8719    22.81   0.000     3666.105    4356.158
       _cons |  -277.7106   58.34909    -4.76   0.000    -392.1802    -163.241
------------------------------------------------------------------------------

. predict satellite_yield_2018, xb
(197 missing values generated)

. 
. regress yield_hectare_2017 max_re705_2017

      Source |       SS           df       MS      Number of obs   =     1,382
-------------+----------------------------------   F(1, 1380)      =    197.97
       Model |   229318009         1   229318009   Prob > F        =    0.0000
    Residual |  1.5986e+09     1,380  1158375.06   R-squared       =    0.1255
-------------+----------------------------------   Adj R-squared   =    0.1248
       Total |  1.8279e+09     1,381   1323588.4   Root MSE        =    1076.3

------------------------------------------------------------------------------
yield_h~2017 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   3396.876   241.4267    14.07   0.000     2923.273    3870.479
       _cons |   577.0087   97.17301     5.94   0.000      386.386    767.6315
------------------------------------------------------------------------------

. predict satellite_yield_2017, xb
(200 missing values generated)

. 
. //Add rainfall data 
. merge 1:1 uid using "$rainfall_data", keep(1 3) nogenerate

    Result                           # of obs.
    -----------------------------------------
    not matched                           197
        from master                       197  
        from using                          0  

    matched                             1,389  
    -----------------------------------------

. egen rain_june_2017 = rowmean(rain_daily_201706*)
(198 missing values generated)

. egen rain_july_2017 = rowmean(rain_daily_201707*)
(198 missing values generated)

. egen rain_august_2017 = rowmean(rain_daily_201708*)
(198 missing values generated)

. egen rain_september_2017 = rowmean(rain_daily_201709*)
(198 missing values generated)

. egen rain_october_2017 = rowmean(rain_daily_201710*)
(198 missing values generated)

. 
. egen rain_june_2018 = rowmean(rain_daily_201806*)
(198 missing values generated)

. egen rain_july_2018 = rowmean(rain_daily_201807*)
(198 missing values generated)

. egen rain_august_2018 = rowmean(rain_daily_201808*)
(198 missing values generated)

. egen rain_september_2018 = rowmean(rain_daily_201809*)
(198 missing values generated)

. egen rain_october_2018 = rowmean(rain_daily_201810*)
(198 missing values generated)

. 
. drop rain_daily* 

. 
. rename physical_irrigation_bl irrigation_2017 

. egen irrigation_2018 = rowmin(irrigation_el irrigation_ml)  // Conservative i
> rrigation variable using midline and endline data 
(85 missing values generated)

. egen knowledge_2017 = std(bl_fert_qs_correct)  // Standardized knowledge scor
> e

. egen correct_questions_2018 = rowtotal(e*_correct), missing // Fertilizer que
> stions correct at midline 
(36 missing values generated)

. egen knowledge_2018 = std(correct_questions_2018)
(36 missing values generated)

. 
. generate sow_time = Sow_date - date("2018-06-01", "YMD")  // Sowing date in d
> ays after June 1st
(264 missing values generated)

. 
. rename fertilizer_plot_kg_bigha_1 urea_2017 

. replace urea_2017 = urea_2017*6.177625  // Per bigha to per hectare 
(1,559 real changes made, 2 to missing)

. rename urea_kg_hectare_ml urea_2018

. 
. rename fertilizer_plot_kg_bigha_3 dap_2017 

. replace dap_2017 = dap_2017*6.177625
(1,431 real changes made, 1 to missing)

. rename dap_kg_hectare_ml dap_2018 

. 
. rename fertilizer_plot_kg_bigha_5 mop_2017

. replace mop_2017 = mop_2017*6.177625
(116 real changes made, 1 to missing)

. rename mop_kg_hectare_ml mop_2018

. 
. rename fertilizer_plot_kg_bigha_12 zinc_2017 

. replace zinc_2017 = zinc_2017*6.177625
(101 real changes made)

. rename zinc_kg_hectare_ml zinc_2018

. 
. generate lag_re705_2018 = max_re705_2017
(200 missing values generated)

. generate lag_re705_2017 = max_re705_2016
(200 missing values generated)

. drop max_re705_2016

. 
. drop yield*alt yield*merged 

. 
. drop if missing(rain_june_2017, rain_june_2018)
(198 observations deleted)

. 
. keep uid yield_hectare* max_re705* irrigation_201? knowledge_201? urea_201? d
> ap_201? mop_201? zinc_201? rain_* ///
>  tractor_own plough_own willingness_to_experiment crop_insurance sow_time sat
> ellite_yield* treatment ///
>  ph_value ec_value nitrogen_value phosphorous_value potash_value zinc_value i
> ron_value sulphur_value lag_re705_*

. 
. rename zinc_value soil_test_zinc_value //Otherwise we end up with value as a 
> j value in reshape and this gets combined with zinc fertilizer application 

. 
. reshape long yield_hectare_ satellite_yield_ max_re705_ irrigation_ knowledge
> _ urea_ dap_ mop_ zinc_ ///
> rain_june_ rain_july_ rain_august_ rain_september_ rain_october_ lag_re705_, 
> i(uid) j(date) string 
(note: j = 2017 2018)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                     1388   ->    2776
Number of variables                  45   ->      31
j variable (2 values)                     ->   date
xij variables:
  yield_hectare_2017 yield_hectare_2018   ->   yield_hectare_
satellite_yield_2017 satellite_yield_2018 ->   satellite_yield_
          max_re705_2017 max_re705_2018   ->   max_re705_
        irrigation_2017 irrigation_2018   ->   irrigation_
          knowledge_2017 knowledge_2018   ->   knowledge_
                    urea_2017 urea_2018   ->   urea_
                      dap_2017 dap_2018   ->   dap_
                      mop_2017 mop_2018   ->   mop_
                    zinc_2017 zinc_2018   ->   zinc_
          rain_june_2017 rain_june_2018   ->   rain_june_
          rain_july_2017 rain_july_2018   ->   rain_july_
      rain_august_2017 rain_august_2018   ->   rain_august_
rain_september_2017 rain_september_2018   ->   rain_september_
    rain_october_2017 rain_october_2018   ->   rain_october_
          lag_re705_2017 lag_re705_2018   ->   lag_re705_
-----------------------------------------------------------------------------

. 
. egen id = concat(uid date)

. drop uid

. 
. generate year_2018 = cond(date == "2018", 1, 0)  // Indicator for year 

. drop date 

. 
. //Replace all extended missing values with normal missing values, so they cel
> ls are left blank in the CSV 
. ds, has(type numeric)
willingnes~t  ec_value      sulphur_va~e  max_re705_    rain_octob~_
tractor_own   nitrogen_v~e  urea_         satellite_~_  irrigation_
plough_own    phosphorou~e  dap_          rain_june_    knowledge_
treatment     potash_value  mop_          rain_july_    sow_time
crop_insur~e  soil_test_~e  zinc_         rain_august_  lag_re705_
ph_value      iron_value    yield_hect~_  rain_septe~_  year_2018

. foreach x of varlist `r(varlist)' {
  2.   replace `x' = .  if missing(`x')
  3. }
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)
(0 real changes made)

. 
. export delimited using "data/nosync/yield_prediction.csv", replace nolabel 
(note: file data/nosync/yield_prediction.csv not found)
file data/nosync/yield_prediction.csv saved

. 
. restore 

. 
. *****************************************************************************
> *****************************
. * Drop tempvars (a bug is causing them to save)
. *****************************************************************************
> *****************************
. drop __0*

. 
. *****************************************************************************
> *****************************
. * Generate indicators for the 3 sub-samples that we analyze 
. *****************************************************************************
> *****************************
. 
. generate fr_yield_sample = cond(!missing(yield_hectare_2018_alt), 1, 0)

. label var fr_yield_sample "Farmers that provided yield data"

. 
. generate satellite_yield_sample = cond(!missing(max_re705_2018), 1, 0)

. label var satellite_yield_sample "Observations with satellite data"

. 
. egen intersecting_sample = rowmin(fr_yield_sample satellite_yield_sample)

. label var intersecting_sample "Observations with farmer-reported and satellit
> e yields"

. 
. *****************************************************************************
> *****************************
. * Save data with farmers that didn't grow cotton for power calculations 
. *****************************************************************************
> *****************************
. drop if missing(treatment)  // Not part of the sample, product of a failed me
> rge somewhere 
(1 observation deleted)

. save "$final_data_with_attriters", replace 
file /tmp/final_data_with_attriters.dta saved

. 
. *****************************************************************************
> *****************************
. * Remove attriters (make sure to use "$merged_data" in attrition analysis and
>  not the output of this file)
. *****************************************************************************
> *****************************
. 
. drop if sowed_cotton == 0  // Attrition condition 
(69 observations deleted)

. 
end of do-file

. save "$final_data", replace 
file /tmp/final_data.dta saved

. 
. 
. **********************************************************
. * Main tables 
. **********************************************************
. 
. //Table 1 - Summary Statistics, Baseline 
. do do/table1.do 

. use "$final_data", clear 

. 
. // Create a t1 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t1/"

. if _rc mkdir "tables/t1/"

. 
. label var physical_irrigation_bl "Irrigation = well, dam, or canal"

. label define physical_irrigation_bl 0 "No irrigation or rain dependent" 1 "Ir
> rigation based on a well, dam, or canal"

. 
. //Generate indicators for attrition from each survey 
. generate basal_att = cond(consent_basal == 1 & sowed_cotton == 1, 0, 1)

. generate midline_att = cond(consent_ml == 1 & sowed_cotton == 1, 0, 1)

. generate endline_att = cond(consent_el == 1 & sowed_cotton == 1, 0, 1)

. 
. //Indicator for all satellite data 
. generate sat_data_2016 = cond(missing(max_re705_2016), 0, 1)

. generate sat_data_2017 = cond(missing(max_re705_2017), 0, 1)

. generate sat_data_2018 = cond(missing(max_re705_2018), 0, 1)

. generate all_sentinel_data = 1

. foreach x of varlist sat_data_20* {
  2.         replace all_sentinel_data = 0 if `x' != 1 
  3. }
(193 real changes made)
(0 real changes made)
(0 real changes made)

. replace all_sentinel_data = . if map_merge != 3
(190 real changes made, 190 to missing)

. label var all_sentinel_data "Sentinel-2: no missing data"

. label define all_sentinel_data 0 "Missing data" 1 "No missing data"

. label val all_sentinel_data all_sentinel_data

. 
. //Indicator for missing farmer-reported yield data 
. generate missing_yield = cond(missing(yield_hectare_2018_alt), 1, 0)

. assert missing_yield == 1 if sowed_cotton == 0 
(null assertion)

. 
. //Create a program to create the balance table 
. capture program drop table_1_balance

. program define table_1_balance, eclass
  1. syntax varlist(numeric) using/, fmt(string) treatvar(varname)
  2. 
. quietly{
  3. // Initiate the output Latex file 
. cap file close handle
  4. file open handle using "`using'", write replace
  5. 
. foreach x in `varlist' {
  6. 
.         summarize `x', detail 
  7.         replace `x' = r(p50) if missing(`x')
  8. 
.         local varlabel : var label `x'
  9.         summarize `x' if `treatvar' == 0 
 10.         local control_mean: di `fmt' r(mean)
 11.         local control_sd: di `fmt' r(sd)
 12.         local control_sd = subinstr("`control_sd'"," ","",.)
 13. 
.         regress `x' `treatvar'
 14.         local beta_1: di `fmt' _b[`treatvar']
 15.         local beta_1 = subinstr("`beta_1'"," ","",.)
 16.         local se_1: di `fmt' _se[`treatvar']
 17.         local se_1 = subinstr("`se_1'"," ","",.)
 18.         if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .01 {
 19.                 local beta_1 = "`beta_1'\sym{***}"
 20.         }
 21.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .0
> 5 {
 22.                 local beta_1 = "`beta_1'\sym{**}"
 23.         }
 24.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .1
>  {
 25.                 local beta_1 = "`beta_1'\sym{*}"
 26.         }
 27. 
.         regress `x' `treatvar' if basal_att == 0
 28.         local beta_2: di `fmt' _b[`treatvar']
 29.         local beta_2 = subinstr("`beta_2'"," ","",.)
 30.         local se_2: di `fmt' _se[`treatvar']
 31.         local se_2 = subinstr("`se_2'"," ","",.)
 32.         if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .01 {
 33.                 local beta_2 = "`beta_2'\sym{***}"
 34.         }
 35.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .0
> 5 {
 36.                 local beta_2 = "`beta_2'\sym{**}"
 37.         }
 38.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .1
>  {
 39.                 local beta_2 = "`beta_2'\sym{*}"
 40.         }
 41. 
.         regress `x' `treatvar' if midline_att == 0
 42.         local beta_3: di `fmt' _b[`treatvar']
 43.         local beta_3 = subinstr("`beta_3'"," ","",.)
 44.         local se_3: di `fmt' _se[`treatvar']
 45.         local se_3 = subinstr("`se_3'"," ","",.)
 46.         if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .01 {
 47.                 local beta_3 = "`beta_3'\sym{***}"
 48.         }
 49.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .0
> 5 {
 50.                 local beta_3 = "`beta_3'\sym{**}"
 51.         }
 52.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .1
>  {
 53.                 local beta_3 = "`beta_3'\sym{*}"
 54.         }
 55. 
.         regress `x' `treatvar' if endline_att == 0
 56.         local beta_4: di `fmt' _b[`treatvar']
 57.         local beta_4 = subinstr("`beta_4'"," ","",.)
 58.         local se_4: di `fmt' _se[`treatvar']
 59.         local se_4 = subinstr("`se_4'"," ","",.)
 60.         if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .01 {
 61.                 local beta_4 = "`beta_4'\sym{***}"
 62.         }
 63.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .0
> 5 {
 64.                 local beta_4 = "`beta_4'\sym{**}"
 65.         }
 66.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .1
>  {
 67.                 local beta_4 = "`beta_4'\sym{*}"
 68.         }
 69. 
.         regress `x' `treatvar' if missing_yield == 0
 70.         local beta_5: di `fmt' _b[`treatvar']
 71.         local beta_5 = subinstr("`beta_5'"," ","",.)
 72.         local se_5: di `fmt' _se[`treatvar']
 73.         local se_5 = subinstr("`se_5'"," ","",.)
 74.         if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .01 {
 75.                 local beta_5 = "`beta_5'\sym{***}"
 76.         }
 77.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .0
> 5 {
 78.                 local beta_5 = "`beta_5'\sym{**}"
 79.         }
 80.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .1
>  {
 81.                 local beta_5 = "`beta_5'\sym{*}"
 82.         }
 83. 
.         regress `x' `treatvar' if all_sentinel_data == 1
 84.         local beta_6: di `fmt' _b[`treatvar']
 85.         local beta_6 = subinstr("`beta_6'"," ","",.)
 86.         local se_6: di `fmt' _se[`treatvar']
 87.         local se_6 = subinstr("`se_6'"," ","",.)
 88.         if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .01 {
 89.                 local beta_6 = "`beta_6'\sym{***}"
 90.         }
 91.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .0
> 5 {
 92.                 local beta_6 = "`beta_6'\sym{**}"
 93.         }
 94.         else if 2*ttail(e(df_r), abs(_b[`treatvar']/_se[`treatvar'])) < .1
>  {
 95.                 local beta_6 = "`beta_6'\sym{*}"
 96.         }
 97. 
.         file w handle "`varlabel' & `control_mean' & `beta_1' & `beta_2' & `b
> eta_3' & `beta_4' & `beta_5' & `beta_6' \\ " _n
 98.         file w handle " & [`control_sd'] & (`se_1') & (`se_2') & (`se_3') 
> & (`se_4') & (`se_5') & (`se_6') \\ [1em] " _n
 99. }
100. 
. count if treatment == 0 
101. local n_0 = r(N)
102. 
. regress `treatvar' `varlist'
103. local n_1: di %9.0fc e(N)
104. test `varlist'
105. local f_1 : di `fmt' `r(p)'
106. 
. regress `treatvar' `varlist' if basal_att == 0
107. local n_2: di %9.0fc e(N)
108. test `varlist'
109. local f_2 : di `fmt' `r(p)'
110. 
. regress `treatvar' `varlist' if midline_att == 0
111. local n_3: di %9.0fc e(N)
112. test `varlist'
113. local f_3 : di `fmt' `r(p)'
114. 
. regress `treatvar' `varlist' if endline_att == 0
115. local n_4: di %9.0fc e(N)
116. test `varlist'
117. local f_4 : di `fmt' `r(p)'
118. 
. regress `treatvar' `varlist' if missing_yield == 0
119. local n_5: di %9.0fc e(N)
120. test `varlist'
121. local f_5 : di `fmt' `r(p)'
122. 
. regress `treatvar' `varlist' if all_sentinel_data == 1
123. local n_6: di %9.0fc e(N)
124. test `varlist'
125. local f_6 : di `fmt' `r(p)'
126. 
. file w handle "Observations & `n_0' & `n_1' & `n_2' & `n_3' & `n_4' & `n_5' &
>  `n_6' \\ " _n
127. file w handle "p-value of joint orthogonality &  & `f_1' & `f_2' & `f_3' &
>  `f_4' & `f_5' & `f_6' \\ " _n
128. 
. file close handle
129. }
130. end

. 
. label var pucca_house "Strong house"

. label var literate "Literate"

. generate total_cotton_land_ha = total_cotton_land/6.177625  // Conversion fro
> m bigha to hectares 

. label var total_cotton_land_ha "Total cotton land (2017)" 

. generate sampled_plot_size_ha = sampled_plot_size/6.177625
(1 missing value generated)

. label var sampled_plot_size_ha "Sampled plot size (2017)"

. label var physical_irrigation_bl "Irrigation"

. label var plough_own "Own plough"

. label var crop_insurance "Crop insurance"

. label var children "Children"

. label var educated "$>$ median education"

. replace fertilizer_plot_kg_bigha_1 = 6.177625*fertilizer_plot_kg_bigha_1
(1,492 real changes made, 2 to missing)

. label var fertilizer_plot_kg_bigha_1 "UREA last season (kg/ha)"

. replace fertilizer_plot_kg_bigha_3 = 6.177625*fertilizer_plot_kg_bigha_3
(1,371 real changes made, 1 to missing)

. label var fertilizer_plot_kg_bigha_3 "DAP last season (kg/ha)"

. replace fertilizer_plot_kg_bigha_5 = 6.177625*fertilizer_plot_kg_bigha_5
(113 real changes made, 1 to missing)

. label var fertilizer_plot_kg_bigha_5 "MOP last season (kg/ha)"

. replace fertilizer_plot_kg_bigha_12 = 6.177625*fertilizer_plot_kg_bigha_12
(100 real changes made)

. label var fertilizer_plot_kg_bigha_12 "Zinc last season (kg/ha)"

. 
. table_1_balance age_bl literate total_cotton_land_ha sampled_plot_size_ha phy
> sical_irrigation_bl pucca_house plough_own crop_insurance children educated s
> oil_test_before ///
> fertilizer_plot_kg_bigha_1 fertilizer_plot_kg_bigha_3 fertilizer_plot_kg_bigh
> a_5 fertilizer_plot_kg_bigha_12 using "tables/t1/balance.tex", fmt("%9.3fc") 
> treatvar(treatment)

. 
. 
end of do-file

. 
. //Table 2 - Treatment effect on knowledge and KT call engagement
. do do/table2.do 

. use "$final_data", clear 

. 
. // Create a t2 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t2/"

. if _rc mkdir "tables/t2/"

. 
. foreach x of varlist listen_prop* {
  2.         replace `x' = 0 if missing(`x') //This means they weren't in the s
> ystem so definitely didn't hear the call
  3. }
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(1 real change made)
(2 real changes made)
(2 real changes made)
(4 real changes made)
(4 real changes made)
(4 real changes made)
(4 real changes made)
(9 real changes made)
(5 real changes made)
(5 real changes made)
(5 real changes made)
(5 real changes made)
(5 real changes made)
(5 real changes made)

. 
. egen listening_rate = rowmean(listen_prop*)

. label var listening_rate "\makecell[c]{KT call \\ listening rate}"

. 
. foreach x of varlist pickup_rate* {
  2.         dis in red "`x'"
  3.         replace `x' = "1" if `x' == "y"
  4.         replace `x' = "0" if `x' == "n"
  5.         destring `x', replace 
  6.         dis in red "`x'"
  7.         replace `x' = 0 if missing(`x') //This means they weren't in the s
> ystem so definitely didn't hear the call
  8. }
pickup_rate_1
(1,361 real changes made)
(154 real changes made)
pickup_rate_1: all characters numeric; replaced as byte
(1 missing value generated)
pickup_rate_1
(1 real change made)
pickup_rate_2
(1,332 real changes made)
(183 real changes made)
pickup_rate_2: all characters numeric; replaced as byte
(1 missing value generated)
pickup_rate_2
(1 real change made)
pickup_rate_3
(1,327 real changes made)
(188 real changes made)
pickup_rate_3: all characters numeric; replaced as byte
(1 missing value generated)
pickup_rate_3
(1 real change made)
pickup_rate_4
(1,322 real changes made)
(193 real changes made)
pickup_rate_4: all characters numeric; replaced as byte
(1 missing value generated)
pickup_rate_4
(1 real change made)
pickup_rate_5
(1,291 real changes made)
(224 real changes made)
pickup_rate_5: all characters numeric; replaced as byte
(1 missing value generated)
pickup_rate_5
(1 real change made)
pickup_rate_6
(1,293 real changes made)
(222 real changes made)
pickup_rate_6: all characters numeric; replaced as byte
(1 missing value generated)
pickup_rate_6
(1 real change made)
pickup_rate_7
(1,322 real changes made)
(193 real changes made)
pickup_rate_7: all characters numeric; replaced as byte
(1 missing value generated)
pickup_rate_7
(1 real change made)
pickup_rate_8
(1,326 real changes made)
(188 real changes made)
pickup_rate_8: all characters numeric; replaced as byte
(2 missing values generated)
pickup_rate_8
(2 real changes made)
pickup_rate_9
(1,308 real changes made)
(206 real changes made)
pickup_rate_9: all characters numeric; replaced as byte
(2 missing values generated)
pickup_rate_9
(2 real changes made)
pickup_rate_10
(1,329 real changes made)
(183 real changes made)
pickup_rate_10: all characters numeric; replaced as byte
(4 missing values generated)
pickup_rate_10
(4 real changes made)
pickup_rate_11
(1,300 real changes made)
(212 real changes made)
pickup_rate_11: all characters numeric; replaced as byte
(4 missing values generated)
pickup_rate_11
(4 real changes made)
pickup_rate_12
(1,252 real changes made)
(260 real changes made)
pickup_rate_12: all characters numeric; replaced as byte
(4 missing values generated)
pickup_rate_12
(4 real changes made)
pickup_rate_13
(1,293 real changes made)
(219 real changes made)
pickup_rate_13: all characters numeric; replaced as byte
(4 missing values generated)
pickup_rate_13
(4 real changes made)
pickup_rate_14
(985 real changes made)
(522 real changes made)
pickup_rate_14: all characters numeric; replaced as byte
(9 missing values generated)
pickup_rate_14
(9 real changes made)
pickup_rate_15
(1,297 real changes made)
(214 real changes made)
pickup_rate_15: all characters numeric; replaced as byte
(5 missing values generated)
pickup_rate_15
(5 real changes made)
pickup_rate_16
(1,274 real changes made)
(237 real changes made)
pickup_rate_16: all characters numeric; replaced as byte
(5 missing values generated)
pickup_rate_16
(5 real changes made)
pickup_rate_17
(1,278 real changes made)
(233 real changes made)
pickup_rate_17: all characters numeric; replaced as byte
(5 missing values generated)
pickup_rate_17
(5 real changes made)
pickup_rate_18
(1,238 real changes made)
(273 real changes made)
pickup_rate_18: all characters numeric; replaced as byte
(5 missing values generated)
pickup_rate_18
(5 real changes made)
pickup_rate_19
(1,226 real changes made)
(285 real changes made)
pickup_rate_19: all characters numeric; replaced as byte
(5 missing values generated)
pickup_rate_19
(5 real changes made)
pickup_rate_20
(1,263 real changes made)
(248 real changes made)
pickup_rate_20: all characters numeric; replaced as byte
(5 missing values generated)
pickup_rate_20
(5 real changes made)

. 
. egen pickup_rate = rowmean(pickup_rate*) 

. label var pickup_rate "\makecell[c]{KT call \\ pickup rate}"

. 
. label var tot_qs "\makecell[c]{Questions \\ asked}"

. replace tot_qs = 0 if missing(tot_qs)
(926 real changes made)

. 
. label var fert_question "\makecell[c]{Fertilizer \\ questions asked}"

. replace fert_question = 0 if missing(fert_question)
(0 real changes made)

. 
. egen correct_questions = rowtotal(e*_correct), missing 
(32 missing values generated)

. label var correct_questions "\makecell[c]{Number of \\ fertilizer questions \
> \ correct}"

. 
. replace trust_mobile_phone = 6 - trust_mobile_phone  // Originally coded from
>  1 (very high trust) to 5 (very low trust)
(844 real changes made, 12 to missing)

. 
. *****************************************************************************
> ***********************************
. * Panel A: Full sample 
. *****************************************************************************
> ***********************************
. 
. eststo clear 

. 
. eststo: regress pickup_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,516
                                                F(6, 1509)        =       4.11
                                                Prob > F          =     0.0004
                                                R-squared         =     0.0163
                                                Root MSE          =      .2141

------------------------------------------------------------------------------
             |               Robust
 pickup_rate |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0376136       .011    -3.42   0.001    -.0591904   -.0160368
             |
    block_id |
     halvad  |   -.009565   .0188801    -0.51   0.612     -.046599     .027469
     jasdan  |  -.0540837   .0201901    -2.68   0.007    -.0936874   -.0144801
      morbi  |  -.0106381   .0189914    -0.56   0.575    -.0478903    .0266142
       muli  |  -.0033902   .0164069    -0.21   0.836     -.035573    .0287926
  vinchhiya  |  -.0410379   .0183681    -2.23   0.026    -.0770677   -.0050081
             |
       _cons |   .8821329   .0132457    66.60   0.000      .856151    .9081147
------------------------------------------------------------------------------
(est1 stored)

. summarize pickup_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .864

. 
. eststo: regress listening_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,516
                                                F(6, 1509)        =       2.59
                                                Prob > F          =     0.0167
                                                R-squared         =     0.0103
                                                Root MSE          =     .26307

------------------------------------------------------------------------------
             |               Robust
listening_~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0064659   .0135165    -0.48   0.632    -.0329791    .0200473
             |
    block_id |
     halvad  |  -.0700335   .0235355    -2.98   0.003    -.1161993   -.0238678
     jasdan  |   .0062037   .0246154     0.25   0.801    -.0420804    .0544877
      morbi  |   -.020521   .0236657    -0.87   0.386    -.0669421    .0259001
       muli  |    -.05249   .0214707    -2.44   0.015    -.0946056   -.0103744
  vinchhiya  |  -.0352105   .0228069    -1.54   0.123     -.079947     .009526
             |
       _cons |   .5833339    .017272    33.77   0.000     .5494542    .6172136
------------------------------------------------------------------------------
(est2 stored)

. summarize listening_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .554

. 
. eststo: regress rating treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,368
                                                F(6, 1361)        =       8.86
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0315
                                                Root MSE          =     1.2801

------------------------------------------------------------------------------
             |               Robust
      rating |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1479525   .0692557     2.14   0.033      .012093    .2838121
             |
    block_id |
     halvad  |   .2291678   .1171067     1.96   0.051    -.0005614    .4588971
     jasdan  |   .4272165   .1104151     3.87   0.000     .2106142    .6438188
      morbi  |  -.2896354    .125977    -2.30   0.022    -.5367656   -.0425053
       muli  |  -.1265058   .1178239    -1.07   0.283    -.3576419    .1046303
  vinchhiya  |   .1076322   .1178012     0.91   0.361    -.1234595    .3387238
             |
       _cons |   3.717057    .090174    41.22   0.000     3.540161    3.893952
------------------------------------------------------------------------------
(est3 stored)

. summarize rating if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.757

. 
. eststo: regress info_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,402
                                                F(6, 1395)        =       4.50
                                                Prob > F          =     0.0002
                                                R-squared         =     0.0179
                                                Root MSE          =     .26603

------------------------------------------------------------------------------
             |               Robust
info_mobil~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0328789   .0142031     2.31   0.021     .0050171    .0607407
             |
    block_id |
     halvad  |  -.0206003   .0245919    -0.84   0.402    -.0688414    .0276407
     jasdan  |  -.0807837   .0291948    -2.77   0.006    -.1380542   -.0235133
      morbi  |   .0366069   .0190794     1.92   0.055    -.0008205    .0740344
       muli  |  -.0193367   .0218003    -0.89   0.375    -.0621017    .0234283
  vinchhiya  |   -.008809   .0221742    -0.40   0.691    -.0523074    .0346894
             |
       _cons |   .9209839   .0173516    53.08   0.000      .886946    .9550219
------------------------------------------------------------------------------
(est4 stored)

. summarize info_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .906

. 
. eststo: regress trust_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,281
                                                F(6, 1274)        =      10.58
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0494
                                                Root MSE          =     1.1564

------------------------------------------------------------------------------
             |               Robust
trust_mobi~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .2060351   .0645834     3.19   0.001     .0793337    .3327365
             |
    block_id |
     halvad  |  -.6120755   .1176394    -5.20   0.000    -.8428637   -.3812872
     jasdan  |  -.0645244   .1172829    -0.55   0.582    -.2946132    .1655643
      morbi  |  -.2559221   .1145878    -2.23   0.026    -.4807237   -.0311206
       muli  |  -.5024755    .107131    -4.69   0.000    -.7126479    -.292303
  vinchhiya  |   -.026727    .106027    -0.25   0.801    -.2347338    .1812798
             |
       _cons |   3.515542   .0856716    41.04   0.000     3.347469    3.683615
------------------------------------------------------------------------------
(est5 stored)

. summarize trust_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.267

. 
. eststo: regress correct_questions treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,484
                                                F(6, 1477)        =      13.79
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0543
                                                Root MSE          =     1.9754

------------------------------------------------------------------------------
             |               Robust
correct_qu~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .2659503   .1026705     2.59   0.010     .0645548    .4673458
             |
    block_id |
     halvad  |   .7318903    .206041     3.55   0.000     .3277261    1.136055
     jasdan  |  -.4433853   .1616478    -2.74   0.006    -.7604691   -.1263015
      morbi  |   .2755263   .1728521     1.59   0.111    -.0635355    .6145881
       muli  |   .0962316   .1619792     0.59   0.553    -.2215023    .4139654
  vinchhiya  |  -.6999049   .1515967    -4.62   0.000    -.9972727   -.4025371
             |
       _cons |   3.227252   .1180083    27.35   0.000     2.995771    3.458734
------------------------------------------------------------------------------
(est6 stored)

. summarize correct_questions if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.21

. 
. esttab using "tables/t2/kt_panel_a.tex", replace se noobs rename((1) treatmen
> t) frag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> indicate("Block FE = *block*") noconstant b(%9.3fc)
(output written to tables/t2/kt_panel_a.tex)

. 
. 
. *****************************************************************************
> ***********************************
. * Panel B: Farmer-reported yield 
. *****************************************************************************
> ***********************************
. 
. eststo clear 

. 
. preserve 

. 
. keep if fr_yield_sample == 1
(175 observations deleted)

. 
. eststo: regress pickup_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,341
                                                F(6, 1334)        =       4.06
                                                Prob > F          =     0.0005
                                                R-squared         =     0.0185
                                                Root MSE          =     .20854

------------------------------------------------------------------------------
             |               Robust
 pickup_rate |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0353905   .0114088    -3.10   0.002    -.0577716   -.0130094
             |
    block_id |
     halvad  |  -.0116155   .0194639    -0.60   0.551    -.0497986    .0265676
     jasdan  |   -.062268   .0214719    -2.90   0.004    -.1043903   -.0201458
      morbi  |  -.0052843   .0192068    -0.28   0.783    -.0429631    .0323945
       muli  |    -.00737   .0168347    -0.44   0.662    -.0403953    .0256553
  vinchhiya  |  -.0448195   .0191282    -2.34   0.019    -.0823442   -.0072949
             |
       _cons |   .8899936   .0136287    65.30   0.000     .8632575    .9167297
------------------------------------------------------------------------------
(est1 stored)

. summarize pickup_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .87

. 
. eststo: regress listening_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,341
                                                F(6, 1334)        =       2.70
                                                Prob > F          =     0.0131
                                                R-squared         =     0.0121
                                                Root MSE          =     .25864

------------------------------------------------------------------------------
             |               Robust
listening_~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0048957   .0141416    -0.35   0.729    -.0326379    .0228465
             |
    block_id |
     halvad  |  -.0719234    .025078    -2.87   0.004      -.12112   -.0227267
     jasdan  |   .0013909   .0262057     0.05   0.958    -.0500181    .0527998
      morbi  |  -.0242273    .024811    -0.98   0.329    -.0729001    .0244456
       muli  |  -.0651167   .0223852    -2.91   0.004    -.1090307   -.0212026
  vinchhiya  |   -.033238   .0239669    -1.39   0.166     -.080255     .013779
             |
       _cons |   .5992632   .0182314    32.87   0.000     .5634979    .6350285
------------------------------------------------------------------------------
(est2 stored)

. summarize listening_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .565

. 
. eststo: regress rating treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,247
                                                F(6, 1240)        =       6.50
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0264
                                                Root MSE          =     1.2704

------------------------------------------------------------------------------
             |               Robust
      rating |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1250934   .0720056     1.74   0.083    -.0161729    .2663598
             |
    block_id |
     halvad  |   .1991785   .1202407     1.66   0.098    -.0367193    .4350762
     jasdan  |   .3568901    .116033     3.08   0.002     .1292474    .5845327
      morbi  |  -.2625533   .1302023    -2.02   0.044    -.5179944   -.0071122
       muli  |  -.1837142   .1204448    -1.53   0.127    -.4200123     .052584
  vinchhiya  |   .0601078   .1218815     0.49   0.622    -.1790089    .2992246
             |
       _cons |   3.778479   .0924502    40.87   0.000     3.597103    3.959855
------------------------------------------------------------------------------
(est3 stored)

. summarize rating if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.785

. 
. eststo: regress info_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,341
                                                F(6, 1334)        =       4.57
                                                Prob > F          =     0.0001
                                                R-squared         =     0.0153
                                                Root MSE          =     .26375

------------------------------------------------------------------------------
             |               Robust
info_mobil~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0260498   .0143934     1.81   0.071    -.0021864     .054286
             |
    block_id |
     halvad  |  -.0160874   .0251084    -0.64   0.522    -.0653436    .0331688
     jasdan  |  -.0698313   .0300873    -2.32   0.020    -.1288548   -.0108077
      morbi  |   .0437812   .0190398     2.30   0.022       .00643    .0811325
       muli  |  -.0174324   .0226041    -0.77   0.441    -.0617759    .0269111
  vinchhiya  |  -.0082697   .0229065    -0.36   0.718    -.0532064    .0366671
             |
       _cons |   .9218286   .0179475    51.36   0.000     .8866203    .9570369
------------------------------------------------------------------------------
(est4 stored)

. summarize info_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .911

. 
. eststo: regress trust_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,228
                                                F(6, 1221)        =      10.14
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0496
                                                Root MSE          =      1.157

------------------------------------------------------------------------------
             |               Robust
trust_mobi~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .2060723   .0660205     3.12   0.002     .0765461    .3355984
             |
    block_id |
     halvad  |  -.6162156   .1205171    -5.11   0.000     -.852659   -.3797721
     jasdan  |  -.0754812   .1209874    -0.62   0.533    -.3128475     .161885
      morbi  |  -.2714121   .1163267    -2.33   0.020    -.4996344   -.0431899
       muli  |  -.5182151   .1099172    -4.71   0.000    -.7338626   -.3025676
  vinchhiya  |  -.0438835   .1085945    -0.40   0.686     -.256936     .169169
             |
       _cons |   3.542102   .0872512    40.60   0.000     3.370923    3.713281
------------------------------------------------------------------------------
(est5 stored)

. summarize trust_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.282

. 
. eststo: regress correct_questions treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,339
                                                F(6, 1332)        =      12.92
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0535
                                                Root MSE          =     1.9634

------------------------------------------------------------------------------
             |               Robust
correct_qu~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .3093515   .1074366     2.88   0.004     .0985882    .5201148
             |
    block_id |
     halvad  |   .5718506   .2194007     2.61   0.009     .1414421    1.002259
     jasdan  |  -.4747656   .1700802    -2.79   0.005    -.8084199   -.1411113
      morbi  |   .2937678   .1830147     1.61   0.109    -.0652606    .6527962
       muli  |   .0822247   .1694425     0.49   0.628    -.2501784    .4146279
  vinchhiya  |  -.7644012   .1613096    -4.74   0.000     -1.08085   -.4479527
             |
       _cons |   3.279026   .1276074    25.70   0.000     3.028693     3.52936
------------------------------------------------------------------------------
(est6 stored)

. summarize correct_questions if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.222

. 
. esttab using "tables/t2/kt_panel_b.tex", replace se noobs rename((1) treatmen
> t) r2 frag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> indicate("Block FE = *block*") noconstant b(%9.3fc)
(output written to tables/t2/kt_panel_b.tex)

. 
. restore 

. 
. *****************************************************************************
> ***********************************
. * Panel C: Satellite yield sample 
. *****************************************************************************
> ***********************************
. 
. eststo clear 

. 
. preserve 

. 
. keep if satellite_yield_sample == 1
(190 observations deleted)

. 
. eststo: regress pickup_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,326
                                                F(6, 1319)        =       3.70
                                                Prob > F          =     0.0012
                                                R-squared         =     0.0173
                                                Root MSE          =     .21232

------------------------------------------------------------------------------
             |               Robust
 pickup_rate |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0332629   .0116676    -2.85   0.004    -.0561519   -.0103738
             |
    block_id |
     halvad  |  -.0156965   .0206125    -0.76   0.446    -.0561334    .0247405
     jasdan  |  -.0585315   .0214279    -2.73   0.006     -.100568   -.0164949
      morbi  |   .0036046   .0200859     0.18   0.858    -.0357992    .0430084
       muli  |  -.0060243    .017324    -0.35   0.728    -.0400098    .0279612
  vinchhiya  |  -.0429814   .0193769    -2.22   0.027    -.0809944   -.0049684
             |
       _cons |   .8847468    .014223    62.21   0.000     .8568445     .912649
------------------------------------------------------------------------------
(est1 stored)

. summarize pickup_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .865

. 
. eststo: regress listening_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,326
                                                F(6, 1319)        =       3.15
                                                Prob > F          =     0.0046
                                                R-squared         =     0.0142
                                                Root MSE          =     .26099

------------------------------------------------------------------------------
             |               Robust
listening_~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0032334   .0143663    -0.23   0.822    -.0314167    .0249499
             |
    block_id |
     halvad  |  -.0810937   .0257021    -3.16   0.002    -.1315151   -.0306722
     jasdan  |  -.0021848   .0260825    -0.08   0.933    -.0533525    .0489828
      morbi  |  -.0129118   .0259545    -0.50   0.619    -.0638284    .0380049
       muli  |  -.0667123     .02286    -2.92   0.004    -.1115584   -.0218663
  vinchhiya  |  -.0428508   .0242518    -1.77   0.077    -.0904271    .0047256
             |
       _cons |   .6019376   .0187108    32.17   0.000     .5652313    .6386438
------------------------------------------------------------------------------
(est2 stored)

. summarize listening_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .565

. 
. eststo: regress rating treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,216
                                                F(6, 1209)        =       6.98
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0297
                                                Root MSE          =     1.2608

------------------------------------------------------------------------------
             |               Robust
      rating |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1510556   .0723713     2.09   0.037     .0090683    .2930428
             |
    block_id |
     halvad  |    .211991   .1214482     1.75   0.081    -.0262816    .4502637
     jasdan  |   .3141764   .1174727     2.67   0.008     .0837035    .5446493
      morbi  |  -.3034629   .1383464    -2.19   0.028    -.5748886   -.0320371
       muli  |  -.2153715   .1227833    -1.75   0.080    -.4562636    .0255206
  vinchhiya  |   .0034353   .1240283     0.03   0.978    -.2398993      .24677
             |
       _cons |    3.81485   .0964245    39.56   0.000     3.625672    4.004028
------------------------------------------------------------------------------
(est3 stored)

. summarize rating if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.798

. 
. eststo: regress info_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,325
                                                F(6, 1318)        =       4.77
                                                Prob > F          =     0.0001
                                                R-squared         =     0.0203
                                                Root MSE          =     .26454

------------------------------------------------------------------------------
             |               Robust
info_mobil~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0362508   .0145234     2.50   0.013     .0077593    .0647424
             |
    block_id |
     halvad  |   -.025595   .0250285    -1.02   0.307     -.074695    .0235049
     jasdan  |  -.0897516   .0296886    -3.02   0.003    -.1479936   -.0315096
      morbi  |   .0340226   .0194176     1.75   0.080    -.0040701    .0721153
       muli  |  -.0208219   .0218287    -0.95   0.340    -.0636447    .0220009
  vinchhiya  |   -.014873   .0223309    -0.67   0.506    -.0586811    .0289351
             |
       _cons |   .9250376   .0174959    52.87   0.000     .8907148    .9593604
------------------------------------------------------------------------------
(est4 stored)

. summarize info_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .906

. 
. eststo: regress trust_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,211
                                                F(6, 1204)        =      10.51
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0520
                                                Root MSE          =     1.1481

------------------------------------------------------------------------------
             |               Robust
trust_mobi~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .2450632   .0659233     3.72   0.000     .1157258    .3744005
             |
    block_id |
     halvad  |  -.6097424   .1212607    -5.03   0.000    -.8476481   -.3718366
     jasdan  |  -.0438676   .1201359    -0.37   0.715    -.2795665    .1918314
      morbi  |  -.2414328   .1215624    -1.99   0.047    -.4799304   -.0029352
       muli  |  -.4806763   .1103387    -4.36   0.000    -.6971537   -.2641989
  vinchhiya  |  -.0379228   .1094218    -0.35   0.729    -.2526015    .1767558
             |
       _cons |   3.504852   .0893317    39.23   0.000     3.329589    3.680115
------------------------------------------------------------------------------
(est5 stored)

. summarize trust_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.262

. 
. eststo: regress correct_questions treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,314
                                                F(6, 1307)        =      12.13
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0537
                                                Root MSE          =     1.9559

------------------------------------------------------------------------------
             |               Robust
correct_qu~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .3160305   .1083788     2.92   0.004     .1034151    .5286459
             |
    block_id |
     halvad  |   .6445997   .2248211     2.87   0.004     .2035501    1.085649
     jasdan  |  -.4464063   .1718518    -2.60   0.009    -.7835418   -.1092708
      morbi  |   .2433993   .1918818     1.27   0.205    -.1330307    .6198293
       muli  |   .1368833   .1728742     0.79   0.429    -.2022579    .4760244
  vinchhiya  |  -.7032998   .1653479    -4.25   0.000    -1.027676   -.3789235
             |
       _cons |   3.223156   .1322674    24.37   0.000     2.963677    3.482636
------------------------------------------------------------------------------
(est6 stored)

. summarize correct_questions if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.188

. 
. esttab using "tables/t2/kt_panel_c.tex", replace se noobs rename((1) treatmen
> t) r2 frag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> indicate("Block FE = *block*") noconstant b(%9.3fc)
(output written to tables/t2/kt_panel_c.tex)

. 
. restore 

. 
. *****************************************************************************
> ***********************************
. * Panel D: Intersecting sample 
. *****************************************************************************
> ***********************************
. 
. eststo clear 

. 
. preserve 

. 
. keep if intersecting_sample == 1
(247 observations deleted)

. 
. eststo: regress pickup_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,269
                                                F(6, 1262)        =       3.51
                                                Prob > F          =     0.0019
                                                R-squared         =     0.0173
                                                Root MSE          =     .20858

------------------------------------------------------------------------------
             |               Robust
 pickup_rate |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0301029   .0117252    -2.57   0.010     -.053106   -.0070997
             |
    block_id |
     halvad  |  -.0139835   .0200213    -0.70   0.485    -.0532622    .0252953
     jasdan  |   -.063583    .021754    -2.92   0.004     -.106261    -.020905
      morbi  |  -.0037366    .020111    -0.19   0.853    -.0431913     .035718
       muli  |   -.009129   .0172517    -0.53   0.597    -.0429742    .0247161
  vinchhiya  |  -.0463387   .0193517    -2.39   0.017    -.0843037   -.0083737
             |
       _cons |   .8894639   .0141945    62.66   0.000     .8616166    .9173112
------------------------------------------------------------------------------
(est1 stored)

. summarize pickup_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .868

. 
. eststo: regress listening_rate treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,269
                                                F(6, 1262)        =       3.08
                                                Prob > F          =     0.0054
                                                R-squared         =     0.0144
                                                Root MSE          =     .25835

------------------------------------------------------------------------------
             |               Robust
listening_~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.0011983    .014531    -0.08   0.934     -.029706    .0273093
             |
    block_id |
     halvad  |  -.0785202   .0259483    -3.03   0.003    -.1294268   -.0276137
     jasdan  |  -.0076662   .0267222    -0.29   0.774    -.0600911    .0447587
      morbi  |  -.0181327   .0261775    -0.69   0.489    -.0694888    .0332235
       muli  |  -.0746865      .0231    -3.23   0.001     -.120005   -.0293679
  vinchhiya  |  -.0421099      .0244    -1.73   0.085     -.089979    .0057592
             |
       _cons |   .6080955   .0188991    32.18   0.000     .5710184    .6451726
------------------------------------------------------------------------------
(est2 stored)

. summarize listening_rate if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .568

. 
. eststo: regress rating treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,180
                                                F(6, 1173)        =       6.37
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0285
                                                Root MSE          =     1.2622

------------------------------------------------------------------------------
             |               Robust
      rating |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1463571   .0735315     1.99   0.047     .0020891    .2906251
             |
    block_id |
     halvad  |   .2175096   .1214698     1.79   0.074    -.0208128    .4558319
     jasdan  |    .288419    .119708     2.41   0.016     .0535533    .5232846
      morbi  |  -.2902316   .1394726    -2.08   0.038    -.5638753   -.0165879
       muli  |  -.2341414   .1240437    -1.89   0.059    -.4775137    .0092309
  vinchhiya  |   .0074012   .1247555     0.06   0.953    -.2373677    .2521701
             |
       _cons |   3.819974   .0964343    39.61   0.000     3.630771    4.009177
------------------------------------------------------------------------------
(est3 stored)

. summarize rating if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.798

. 
. eststo: regress info_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,269
                                                F(6, 1262)        =       4.94
                                                Prob > F          =     0.0001
                                                R-squared         =     0.0174
                                                Root MSE          =     .26159

------------------------------------------------------------------------------
             |               Robust
info_mobil~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0292297   .0146773     1.99   0.047     .0004352    .0580242
             |
    block_id |
     halvad  |  -.0213089     .02551    -0.84   0.404    -.0713557    .0287378
     jasdan  |  -.0783715   .0304928    -2.57   0.010    -.1381936   -.0185494
      morbi  |   .0414056   .0191162     2.17   0.030     .0039025    .0789086
       muli  |  -.0189058   .0225586    -0.84   0.402    -.0631624    .0253507
  vinchhiya  |  -.0147486   .0230282    -0.64   0.522    -.0599264    .0304293
             |
       _cons |   .9263632    .018074    51.25   0.000     .8909049    .9618215
------------------------------------------------------------------------------
(est4 stored)

. summarize info_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .911

. 
. eststo: regress trust_mobile_phone treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,163
                                                F(6, 1156)        =      10.24
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0529
                                                Root MSE          =     1.1478

------------------------------------------------------------------------------
             |               Robust
trust_mobi~e |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .2442239   .0672883     3.63   0.000      .112203    .3762449
             |
    block_id |
     halvad  |  -.6182893   .1238867    -4.99   0.000    -.8613573   -.3752213
     jasdan  |  -.0600099   .1230651    -0.49   0.626    -.3014658    .1814459
      morbi  |  -.2642168   .1226214    -2.15   0.031    -.5048022   -.0236315
       muli  |  -.5092588    .112922    -4.51   0.000    -.7308139   -.2877037
  vinchhiya  |  -.0614111   .1116597    -0.55   0.582    -.2804895    .1576673
             |
       _cons |   3.537827   .0906263    39.04   0.000     3.360017    3.715638
------------------------------------------------------------------------------
(est5 stored)

. summarize trust_mobile_phone if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.277

. 
. eststo: regress correct_questions treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,267
                                                F(6, 1260)        =      11.88
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0526
                                                Root MSE          =     1.9438

------------------------------------------------------------------------------
             |               Robust
correct_qu~s |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .3167664   .1095847     2.89   0.004     .1017779    .5317549
             |
    block_id |
     halvad  |   .5261567   .2257207     2.33   0.020     .0833269    .9689864
     jasdan  |  -.4785225   .1742305    -2.75   0.006    -.8203363   -.1367086
      morbi  |   .2330876   .1937238     1.20   0.229    -.1469693    .6131444
       muli  |    .129765    .174966     0.74   0.458    -.2134918    .4730218
  vinchhiya  |   -.751346   .1672778    -4.49   0.000     -1.07952   -.4231724
             |
       _cons |   3.260281   .1337689    24.37   0.000     2.997847    3.522716
------------------------------------------------------------------------------
(est6 stored)

. summarize correct_questions if treatment == 0, meanonly 

. local varMean: di %9.3f `r(mean)' 

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  3.192

. 
. esttab using "tables/t2/kt_panel_d.tex", replace se noobs rename((1) treatmen
> t) r2 frag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> indicate("Block FE = *block*") noconstant b(%9.3fc)
(output written to tables/t2/kt_panel_d.tex)

. 
. restore 

. 
end of do-file

. 
. //Table 3 - Fertilizer application 
. do do/table3.do 

. use "$final_data", clear 

. 
. // Create a t3 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t3/"

. if _rc mkdir "tables/t3/"

. 
. ///////////////////////////////
> // Full sample
. //////////////////////////////
> 
. /****************************************************************************
> ******
> Followed recommendations 
> *****************************************************************************
> *****/
. 
. foreach x in "UREA" "DAP" "MOP" "ZINC" {
  2. 
. if "`x'" == "ZINC" {
  3. generate followed_rec_basal_`x' = SII_6_1_`x'
  4. replace followed_rec_basal_`x' = 1 - SII_6_1_`x' if SII_4_1 == 0 //Unirrig
> ated plots should not have had Zinc applied
  5. label var followed_rec_basal_`x' "\makecell[c]{Zinc}"
  6. }
  7. else if "`x'" == "UREA" {
  8. generate followed_rec_basal_`x' = SII_6_1_`x'
  9. label var followed_rec_basal_`x' "\makecell[c]{`x'}"
 10. }
 11. else{
 12. generate followed_rec_basal_`x' = SII_6_1_`x'
 13. replace followed_rec_basal_`x' = 1 - SII_6_1_`x' if SII_4_1 == 0 //Unirrig
> ated plots should not have MOP or DAP applied
 14. label var SII_6_1_`x' "\makecell[c]{`x'}"
 15. }
 16. 
. replace followed_rec_basal_`x' = . if consent_basal != 1
 17. 
. } 
(208 missing values generated)
(0 real changes made)
(208 missing values generated)
(122 real changes made)
(0 real changes made)
(208 missing values generated)
(122 real changes made)
(0 real changes made)
(208 missing values generated)
(122 real changes made)
(0 real changes made)

. 
. 
. eststo clear

. 
. // Joint effects
. 
. **Run regression of interest
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist followed_rec_basal_UREA followed_rec_basal_DAP followed_
> rec_basal_MOP followed_rec_basal_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =     12.37
       Model |  8.33977408         6  1.38996235   Prob > F        =    0.0000
    Residual |  146.164049     1,301  .112347462   R-squared       =    0.0540
-------------+----------------------------------   Adj R-squared   =    0.0496
       Total |  154.503823     1,307  .118212565   Root MSE        =    .33518

------------------------------------------------------------------------------
followed_r~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1171258   .0185488     6.31   0.000      .080737    .1535146
             |
    block_id |
     halvad  |    .069998   .0319143     2.19   0.028     .0073889    .1326072
     jasdan  |   .0896731   .0327717     2.74   0.006     .0253819    .1539643
      morbi  |   .0087366   .0320679     0.27   0.785    -.0541739    .0716471
       muli  |   .1165662   .0290672     4.01   0.000     .0595425      .17359
  vinchhiya  |  -.0269399   .0301312    -0.89   0.371    -.0860509    .0321712
             |
       _cons |   .0350866   .0227617     1.54   0.123    -.0095669    .0797402
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~A |        640    .0765625     .266104          0          1

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =     15.30
       Model |  18.8586524         6  3.14310873   Prob > F        =    0.0000
    Residual |  267.345476     1,301  .205492295   R-squared       =    0.0659
-------------+----------------------------------   Adj R-squared   =    0.0616
       Total |  286.204128     1,307   .21897791   Root MSE        =    .45331

------------------------------------------------------------------------------
followed_~AP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0395262    .025086     1.58   0.115    -.0096872    .0887397
             |
    block_id |
     halvad  |  -.0301407    .043162    -0.70   0.485    -.1148155    .0545341
     jasdan  |  -.3417478   .0443216    -7.71   0.000    -.4286974   -.2547982
      morbi  |  -.0452095   .0433698    -1.04   0.297    -.1302918    .0398729
       muli  |   .0367274   .0393115     0.93   0.350    -.0403934    .1138483
  vinchhiya  |  -.1324878   .0407505    -3.25   0.001    -.2124317    -.052544
             |
       _cons |   .7280422   .0307836    23.65   0.000     .6676512    .7884333
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~AP |        640      .65625    .4753304          0          1

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      6.13
       Model |  5.05064769         6  .841774615   Prob > F        =    0.0000
    Residual |  178.609138     1,301   .13728604   R-squared       =    0.0275
-------------+----------------------------------   Adj R-squared   =    0.0230
       Total |  183.659786     1,307  .140520112   Root MSE        =    .37052

------------------------------------------------------------------------------
followed_~OP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1030192   .0205044     5.02   0.000     .0627939    .1432445
             |
    block_id |
     halvad  |  -.0091718   .0352791    -0.26   0.795    -.0783819    .0600383
     jasdan  |  -.0672505   .0362269    -1.86   0.064    -.1383199     .003819
      morbi  |  -.0266982   .0354489    -0.75   0.451    -.0962414    .0428451
       muli  |   -.060232   .0321318    -1.87   0.061    -.1232678    .0028038
  vinchhiya  |  -.0917595    .033308    -2.75   0.006    -.1571027   -.0264163
             |
       _cons |   .1586939   .0251614     6.31   0.000     .1093325    .2080554
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~OP |        640     .115625    .3200248          0          1

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      2.93
       Model |  1.78819625         6  .298032708   Prob > F        =    0.0077
    Residual |  132.548195     1,301   .10188178   R-squared       =    0.0133
-------------+----------------------------------   Adj R-squared   =    0.0088
       Total |  134.336391     1,307  .102782243   Root MSE        =    .31919

------------------------------------------------------------------------------
followed_r~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0247587   .0176637     1.40   0.161    -.0098938    .0594112
             |
    block_id |
     halvad  |  -.1020132   .0303915    -3.36   0.001     -.161635   -.0423915
     jasdan  |   -.073627    .031208    -2.36   0.018    -.1348505   -.0124035
      morbi  |  -.0305977   .0305378    -1.00   0.317    -.0905064     .029311
       muli  |  -.0208714   .0276802    -0.75   0.451    -.0751742    .0334314
  vinchhiya  |  -.0646473   .0286935    -2.25   0.024    -.1209378   -.0083567
             |
       _cons |   .1478811   .0216756     6.82   0.000     .1053582     .190404
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~C |        640     .103125    .3043599          0          1

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,308

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   .1171258   .0183583     6.38   0.000     .0811443    .1531074
             |
    block_id |
     halvad  |    .069998   .0318495     2.20   0.028     .0075741    .1324219
     jasdan  |   .0896731   .0343711     2.61   0.009     .0223069    .1570393
      morbi  |   .0087366   .0283341     0.31   0.758    -.0467973    .0642705
       muli  |   .1165662   .0306464     3.80   0.000     .0565004    .1766321
  vinchhiya  |  -.0269399   .0240738    -1.12   0.263    -.0741235    .0202438
             |
       _cons |   .0350866   .0188728     1.86   0.063    -.0019034    .0720767
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |  -2.186159   .0560721   -38.99   0.000    -2.296058   -2.076259
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .0395262   .0250334     1.58   0.114    -.0095383    .0885907
             |
    block_id |
     halvad  |  -.0301407   .0422224    -0.71   0.475    -.1128951    .0526137
     jasdan  |  -.3417478   .0457739    -7.47   0.000     -.431463   -.2520326
      morbi  |  -.0452095   .0428861    -1.05   0.292    -.1292646    .0388457
       muli  |   .0367274   .0365741     1.00   0.315    -.0349564    .1084113
  vinchhiya  |  -.1324878   .0416474    -3.18   0.001    -.2141153   -.0508604
             |
       _cons |   .7280422   .0297731    24.45   0.000     .6696881    .7863964
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |  -1.582347   .0252013   -62.79   0.000     -1.63174   -1.532953
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   .1030192   .0203136     5.07   0.000     .0632053     .142833
             |
    block_id |
     halvad  |  -.0091718   .0379784    -0.24   0.809    -.0836081    .0652645
     jasdan  |  -.0672505   .0363164    -1.85   0.064    -.1384292    .0039283
      morbi  |  -.0266982   .0374672    -0.71   0.476    -.1001325    .0467362
       muli  |   -.060232   .0329768    -1.83   0.068    -.1248652    .0044013
  vinchhiya  |  -.0917595   .0324463    -2.83   0.005    -.1553531   -.0281659
             |
       _cons |   .1586939   .0254782     6.23   0.000     .1087575    .2086304
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |  -1.985689   .0481352   -41.25   0.000    -2.080032   -1.891345
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .0247587   .0175798     1.41   0.159     -.009697    .0592144
             |
    block_id |
     halvad  |  -.1020132   .0282572    -3.61   0.000    -.1573962   -.0466302
     jasdan  |   -.073627   .0311398    -2.36   0.018    -.1346599   -.0125941
      morbi  |  -.0305977   .0333847    -0.92   0.359    -.0960305    .0348351
       muli  |  -.0208714   .0309259    -0.67   0.500     -.081485    .0397422
  vinchhiya  |  -.0646473   .0296176    -2.18   0.029    -.1226967   -.0065978
             |
       _cons |   .1478811   .0237956     6.21   0.000     .1012426    .1945196
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |  -2.283942   .0652975   -34.98   0.000    -2.411923   -2.155961
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post 

          v1:  ([var1_eg1_mean]treatment/.2661039764661171 + [var2_eg1_mean]tre
> atment/.4753303768287382 + [var3_eg1_mean]treatment/.3200248180908056 + [var4
> _eg1_mean]treatment/.3043599456660183) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2316407   .0341127     6.79   0.000      .164781    .2985003
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Amount of fertilizer applied (kg/ha) 
> *****************************************************************************
> *****/
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist UREA_kg_hectare_bd DAP_kg_hectare_bd MOP_kg_hectare_bd Z
> INC_kg_hectare_bd {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.26
       Model |  105840.779         6  17640.1298   Prob > F        =    0.0000
    Residual |  2777258.15     1,301  2134.71034   R-squared       =    0.0367
-------------+----------------------------------   Adj R-squared   =    0.0323
       Total |  2883098.93     1,307  2205.89054   Root MSE        =    46.203

------------------------------------------------------------------------------
UREA_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   11.40773   2.556838     4.46   0.000     6.391753    16.42371
             |
    block_id |
     halvad  |   9.567369   4.399199     2.17   0.030     .9370689    18.19767
     jasdan  |   14.86303   4.517384     3.29   0.001     6.000873    23.72518
      morbi  |  -1.686982   4.420372    -0.38   0.703    -10.35882    6.984857
       muli  |   12.01424   4.006739     3.00   0.003     4.153866    19.87462
  vinchhiya  |  -2.676137   4.153405    -0.64   0.519    -10.82424    5.471968
             |
       _cons |   3.161822   3.137558     1.01   0.314    -2.993405     9.31705
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
UREA_kg_he~d |        640    8.141753    35.71925          0   331.9859

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      6.04
       Model |  552317.142         6   92052.857   Prob > F        =    0.0000
    Residual |  19823345.8     1,301  15237.0067   R-squared       =    0.0271
-------------+----------------------------------   Adj R-squared   =    0.0226
       Total |  20375662.9     1,307  15589.6426   Root MSE        =    123.44

------------------------------------------------------------------------------
DAP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -4.730278   6.830988    -0.69   0.489    -18.13124    8.670681
             |
    block_id |
     halvad  |  -2.851122   11.75314    -0.24   0.808     -25.9083    20.20606
     jasdan  |  -54.72246   12.06889    -4.53   0.000    -78.39908   -31.04584
      morbi  |  -45.53539   11.80971    -3.86   0.000    -68.70354   -22.36723
       muli  |  -10.49166   10.70462    -0.98   0.327    -31.49188    10.50856
  vinchhiya  |  -32.71137   11.09646    -2.95   0.003    -54.48029   -10.94245
             |
       _cons |   110.0031   8.382472    13.12   0.000     93.55844    126.4477
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
DAP_kg_hec~d |        640    87.82282    155.0151          0    3208.62

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      7.37
       Model |  63099.9591         6  10516.6599   Prob > F        =    0.0000
    Residual |  1855838.51     1,301   1426.4708   R-squared       =    0.0329
-------------+----------------------------------   Adj R-squared   =    0.0284
       Total |  1918938.47     1,307  1468.20082   Root MSE        =    37.769

------------------------------------------------------------------------------
MOP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   9.628195   2.090091     4.61   0.000     5.527878    13.72851
             |
    block_id |
     halvad  |   11.72006   3.596131     3.26   0.001     4.665204    18.77491
     jasdan  |   2.647994   3.692742     0.72   0.473    -4.596387    9.892375
      morbi  |   -2.15271    3.61344    -0.60   0.551    -9.241517    4.936097
       muli  |  -.7539196   3.275315    -0.23   0.818    -7.179397    5.671557
  vinchhiya  |  -4.574429   3.395207    -1.35   0.178    -11.23511     2.08625
             |
       _cons |   1.501084   2.564801     0.59   0.558    -3.530516    6.532683
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
MOP_kg_hec~d |        640    2.211966    20.40073          0   370.6575

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      4.47
       Model |  549.637887         6  91.6063145   Prob > F        =    0.0002
    Residual |  26691.0413     1,301  20.5157888   R-squared       =    0.0202
-------------+----------------------------------   Adj R-squared   =    0.0157
       Total |  27240.6792     1,307  20.8421417   Root MSE        =    4.5294

------------------------------------------------------------------------------
ZINC_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .8489015   .2506558     3.39   0.001     .3571676    1.340635
             |
    block_id |
     halvad  |   .1420933    .431269     0.33   0.742    -.7039655     .988152
     jasdan  |  -.6561826   .4428551    -1.48   0.139    -1.524971    .2126057
      morbi  |   -.558633   .4333447    -1.29   0.198    -1.408764    .2914979
       muli  |   .6294188   .3927948     1.60   0.109    -.1411617    1.399999
  vinchhiya  |  -.6235786   .4071729    -1.53   0.126    -1.422366    .1752089
             |
       _cons |     .21199   .3075859     0.69   0.491    -.3914287    .8154086
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
ZINC_kg_he~d |        640     .079943    1.164444          0   24.99274

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,308

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   11.40773   2.512306     4.54   0.000     6.483701    16.33176
             |
    block_id |
     halvad  |   9.567369   4.211643     2.27   0.023       1.3127    17.82204
     jasdan  |   14.86303   6.380246     2.33   0.020     2.357974    27.36808
      morbi  |  -1.686982   2.689718    -0.63   0.531    -6.958732    3.584769
       muli  |   12.01424   3.643031     3.30   0.001     4.874035    19.15445
  vinchhiya  |  -2.676137   2.786035    -0.96   0.337    -8.136665    2.784391
             |
       _cons |   3.161822   2.445987     1.29   0.196    -1.632224    7.955869
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   7.666086   .2351147    32.61   0.000      7.20527    8.126903
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -4.730278   6.721036    -0.70   0.482    -17.90327    8.442711
             |
    block_id |
     halvad  |  -2.851122   9.956965    -0.29   0.775    -22.36641    16.66417
     jasdan  |  -54.72246   9.261107    -5.91   0.000    -72.87389   -36.57102
      morbi  |  -45.53539   6.807345    -6.69   0.000    -58.87754   -32.19323
       muli  |  -10.49166   7.548078    -1.39   0.165    -25.28562    4.302301
  vinchhiya  |  -32.71137   14.88818    -2.20   0.028    -61.89166   -3.531081
             |
       _cons |   110.0031    6.45875    17.03   0.000     97.34417     122.662
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.631482   .4948074    19.47   0.000     8.661678    10.60129
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   9.628195   2.024009     4.76   0.000     5.661211    13.59518
             |
    block_id |
     halvad  |   11.72006   4.547855     2.58   0.010     2.806423    20.63369
     jasdan  |   2.647994   5.335438     0.50   0.620    -7.809273    13.10526
      morbi  |   -2.15271   2.459339    -0.88   0.381    -6.972927    2.667506
       muli  |  -.7539196   2.660849    -0.28   0.777    -5.969088    4.461248
  vinchhiya  |  -4.574429   2.272227    -2.01   0.044    -9.027912   -.1209468
             |
       _cons |   1.501084   2.012407     0.75   0.456    -2.443161    5.445329
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   7.262959   .3455531    21.02   0.000     6.585687     7.94023
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .8489015   .2424174     3.50   0.000     .3737722    1.324031
             |
    block_id |
     halvad  |   .1420933   .5357341     0.27   0.791    -.9079263    1.192113
     jasdan  |  -.6561826   .3380792    -1.94   0.052    -1.318806    .0064404
      morbi  |   -.558633   .3399408    -1.64   0.100    -1.224905    .1076387
       muli  |   .6294188   .5380108     1.17   0.242    -.4250629    1.683901
  vinchhiya  |  -.6235786   .3328839    -1.87   0.061    -1.276019    .0288618
             |
       _cons |     .21199    .290292     0.73   0.465    -.3569719    .7809518
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.021195   .3716291     8.13   0.000     2.292815    3.749575
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/35.71925413368085 + [var2_eg1_mean]tre
> atment/155.0151406742205 + [var3_eg1_mean]treatment/20.40073103571355 + [var4
> _eg1_mean]treatment/1.164443977237997) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .3724573   .0668856     5.57   0.000     .2413639    .5035507
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. /****************************************************************************
> ******
> Fertilizer gap
> *****************************************************************************
> *****/
. 
. *This loops over each fertilizer of interest, calculates the distance (absolu
> te difference), then calculates treatment effects with this DV
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_UREA distance_DAP distance_MOP distance_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.53
       Model |  54563.1382         6  9093.85636   Prob > F        =    0.0000
    Residual |  1386821.73     1,301  1065.96597   R-squared       =    0.0379
-------------+----------------------------------   Adj R-squared   =    0.0334
       Total |  1441384.87     1,307  1102.81933   Root MSE        =    32.649

------------------------------------------------------------------------------
distance_U~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -9.228911    1.80678    -5.11   0.000    -12.77343   -5.684389
             |
    block_id |
     halvad  |   .1942688   3.108678     0.06   0.950    -5.904302     6.29284
     jasdan  |  -11.51007   3.192193    -3.61   0.000    -17.77248   -5.247661
      morbi  |   4.035889   3.123641     1.29   0.197    -2.092035    10.16381
       muli  |   .8533134   2.831348     0.30   0.763    -4.701195    6.407822
  vinchhiya  |   1.256867   2.934989     0.43   0.669    -4.500962    7.014696
             |
       _cons |   124.2817   2.217144    56.05   0.000     119.9321    128.6313
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_U~A |        640    123.8221     28.1258   1.977566   154.4406

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.59
       Model |  189866.038         6  31644.3397   Prob > F        =    0.0000
    Residual |  4791093.02     1,301  3682.62339   R-squared       =    0.0381
-------------+----------------------------------   Adj R-squared   =    0.0337
       Total |  4980959.06     1,307  3810.98628   Root MSE        =    60.685

------------------------------------------------------------------------------
distance_DAP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -3.711706   3.358245    -1.11   0.269    -10.29987    2.876463
             |
    block_id |
     halvad  |    .999564   5.778069     0.17   0.863    -10.33579    12.33492
     jasdan  |  -10.56239   5.933298    -1.78   0.075    -22.20227    1.077486
      morbi  |  -33.04912    5.80588    -5.69   0.000    -44.43903   -21.65921
       muli  |  -12.95033   5.262599    -2.46   0.014    -23.27444   -2.626226
  vinchhiya  |  -24.27151   5.455235    -4.45   0.000    -34.97353   -13.56949
             |
       _cons |   78.09244   4.120984    18.95   0.000     70.00794    86.17694
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_DAP |        640    64.98849    64.84751          0   376.8351

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.53
       Model |  204628.863         6  34104.8105   Prob > F        =    0.0000
    Residual |   5203444.2     1,301  3999.57279   R-squared       =    0.0378
-------------+----------------------------------   Adj R-squared   =    0.0334
       Total |  5408073.06     1,307  4137.77587   Root MSE        =    63.242

------------------------------------------------------------------------------
distance_MOP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -4.748512   3.499778    -1.36   0.175    -11.61434    2.117315
             |
    block_id |
     halvad  |   35.59464   6.021586     5.91   0.000     23.78156    47.40772
     jasdan  |   18.81576   6.183357     3.04   0.002     6.685313     30.9462
      morbi  |   8.568783   6.050569     1.42   0.157    -3.301156    20.43872
       muli  |   29.25427   5.484391     5.33   0.000     18.49505    40.01349
  vinchhiya  |   14.84978   5.685146     2.61   0.009     3.696727    26.00284
             |
       _cons |   159.1646   4.294663    37.06   0.000     150.7394    167.5898
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_MOP |        640    176.6273    63.34721          0   308.8813

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      4.73
       Model |  1389.57921         6  231.596534   Prob > F        =    0.0001
    Residual |  63755.7591     1,301  49.0051953   R-squared       =    0.0213
-------------+----------------------------------   Adj R-squared   =    0.0168
       Total |  65145.3383     1,307  49.8434111   Root MSE        =    7.0004

------------------------------------------------------------------------------
distance_Z~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -.197608   .3873957    -0.51   0.610    -.9575966    .5623806
             |
    block_id |
     halvad  |   3.440627   .6665384     5.16   0.000      2.13302    4.748235
     jasdan  |   .8463389   .6844451     1.24   0.216     -.496398    2.189076
      morbi  |   .8611104   .6697465     1.29   0.199    -.4527909    2.175012
       muli  |   1.075498   .6070755     1.77   0.077    -.1154562    2.266452
  vinchhiya  |   1.241138   .6292973     1.97   0.049      .006589    2.475686
             |
       _cons |   17.61754   .4753827    37.06   0.000     16.68494    18.55014
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_Z~C |        640    18.79358    7.015158          0    24.7105

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,308

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -9.228911   1.788602    -5.16   0.000    -12.73451   -5.723315
             |
    block_id |
     halvad  |   .1942688   3.074044     0.06   0.950    -5.830747    6.219284
     jasdan  |  -11.51007   2.966381    -3.88   0.000    -17.32407    -5.69607
      morbi  |   4.035889   2.930487     1.38   0.168     -1.70776    9.779538
       muli  |   .8533134   3.117192     0.27   0.784     -5.25627    6.962897
  vinchhiya  |   1.256867   2.535152     0.50   0.620    -3.711939    6.225673
             |
       _cons |   124.2817   1.918983    64.76   0.000     120.5206    128.0428
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   6.971637   .0556014   125.39   0.000      6.86266    7.080613
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -3.711706   3.350815    -1.11   0.268    -10.27918    2.855771
             |
    block_id |
     halvad  |    .999564   6.439146     0.16   0.877    -11.62093    13.62006
     jasdan  |  -10.56239   6.565723    -1.61   0.108    -23.43097    2.306187
      morbi  |  -33.04912   5.051326    -6.54   0.000    -42.94954   -23.14871
       muli  |  -12.95033   5.286998    -2.45   0.014    -23.31266   -2.588009
  vinchhiya  |  -24.27151   4.796386    -5.06   0.000    -33.67225   -14.87077
             |
       _cons |   78.09244   4.187421    18.65   0.000     69.88525    86.29964
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   8.211381   .0934007    87.92   0.000     8.028319    8.394443
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -4.748512   3.488405    -1.36   0.173    -11.58566    2.088637
             |
    block_id |
     halvad  |   35.59464   6.109661     5.83   0.000     23.61992    47.56935
     jasdan  |   18.81576   6.169497     3.05   0.002     6.723764    30.90775
      morbi  |   8.568783   6.162882     1.39   0.164    -3.510244    20.64781
       muli  |   29.25427   5.725908     5.11   0.000      18.0317    40.47684
  vinchhiya  |   14.84978    5.67326     2.62   0.009     3.730398    25.96917
             |
       _cons |   159.1646   4.444748    35.81   0.000     150.4531    167.8761
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   8.293943   .0593627   139.72   0.000     8.177594    8.410292
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   -.197608   .3864219    -0.51   0.609     -.954981     .559765
             |
    block_id |
     halvad  |   3.440627   .6127938     5.61   0.000     2.239573    4.641681
     jasdan  |   .8463389   .7040535     1.20   0.229    -.5335807    2.226258
      morbi  |   .8611104   .7151028     1.20   0.229    -.5404653    2.262686
       muli  |   1.075498   .6531836     1.65   0.100    -.2047186    2.355714
  vinchhiya  |   1.241138   .6616283     1.88   0.061    -.0556301    2.537905
             |
       _cons |   17.61754   .5177294    34.03   0.000     16.60281    18.63227
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.891926   .0546269    71.25   0.000      3.78486    3.998993
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/28.12580142019583 + [var2_eg1_mean]tre
> atment/64.84751300560661 + [var3_eg1_mean]treatment/63.34720896838108 + [var4
> _eg1_mean]treatment/7.015157789730841) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   -.122124   .0358086    -3.41   0.001    -.1923075   -.0519405
------------------------------------------------------------------------------

. 
. estimates store est3

. estimates restore est3
(results est3 are active now)

. eststo
(est3 stored)

. 
. esttab using "tables/t3/panel_a.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels noconstant b(%9.3fc) scalars("N Observations") sfmt(%9
> .0fc) ///
> mtitles("\makecell[c]{Binary fertilizer \\ use consistent \\ with recommendat
> ion}" "\makecell[c]{Amount of \\ fertilizer \\ applied (kg/ha)}" "\makecell[c
> ]{Distance between \\ suggested \& \\ applied fertilizer}")
(output written to tables/t3/panel_a.tex)

. 
. 
. ////////////////////////////////////////////
> // Farmer-reported yield sample 
. ////////////////////////////////////////////
> 
. preserve 

. 
. keep if fr_yield_sample == 1
(175 observations deleted)

. 
. /****************************************************************************
> ******
> Followed recommendations 
> *****************************************************************************
> *****/
. 
. eststo clear

. 
. // Joint effects
. 
. **Run regression of interest
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist followed_rec_basal_UREA followed_rec_basal_DAP followed_
> rec_basal_MOP followed_rec_basal_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =     10.89
       Model |   7.5207225         6  1.25345375   Prob > F        =    0.0000
    Residual |  134.269559     1,166  .115153996   R-squared       =    0.0530
-------------+----------------------------------   Adj R-squared   =    0.0482
       Total |  141.790281     1,172  .120981469   Root MSE        =    .33934

------------------------------------------------------------------------------
followed_r~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1217479   .0198303     6.14   0.000     .0828409    .1606548
             |
    block_id |
     halvad  |   .0617575    .034565     1.79   0.074    -.0060591     .129574
     jasdan  |   .0739555   .0359084     2.06   0.040     .0035033    .1444077
      morbi  |   .0166929   .0347973     0.48   0.632    -.0515794    .0849651
       muli  |   .1186523   .0311778     3.81   0.000     .0574815    .1798231
  vinchhiya  |  -.0265951   .0325646    -0.82   0.414    -.0904869    .0372967
             |
       _cons |   .0376245   .0251049     1.50   0.134    -.0116313    .0868803
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~A |        580    .0793103    .2704558          0          1

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =     13.09
       Model |  15.8473587         6  2.64122644   Prob > F        =    0.0000
    Residual |  235.197825     1,166    .2017134   R-squared       =    0.0631
-------------+----------------------------------   Adj R-squared   =    0.0583
       Total |  251.045183     1,172  .214202375   Root MSE        =    .44913

------------------------------------------------------------------------------
followed_~AP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0548092   .0262456     2.09   0.037     .0033153     .106303
             |
    block_id |
     halvad  |  -.0270999   .0457472    -0.59   0.554    -.1168559    .0626562
     jasdan  |  -.3226635   .0475251    -6.79   0.000    -.4159079   -.2294191
      morbi  |  -.0280523   .0460546    -0.61   0.543    -.1184115    .0623068
       muli  |    .043084   .0412642     1.04   0.297    -.0378763    .1240443
  vinchhiya  |  -.1233985   .0430997    -2.86   0.004    -.2079601    -.038837
             |
       _cons |   .7238695   .0332266    21.79   0.000     .6586789    .7890602
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~AP |        580     .662069    .4734132          0          1

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      6.32
       Model |  5.28839265         6  .881398774   Prob > F        =    0.0000
    Residual |   162.58032     1,166  .139434237   R-squared       =    0.0315
-------------+----------------------------------   Adj R-squared   =    0.0265
       Total |  167.868713     1,172   .14323269   Root MSE        =    .37341

------------------------------------------------------------------------------
followed_~OP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1057571   .0218209     4.85   0.000     .0629444    .1485698
             |
    block_id |
     halvad  |  -.0116595   .0380349    -0.31   0.759     -.086284    .0629649
     jasdan  |  -.0855033   .0395131    -2.16   0.031     -.163028   -.0079786
      morbi  |  -.0312603   .0382905    -0.82   0.414    -.1063862    .0438656
       muli  |  -.0707273   .0343076    -2.06   0.039    -.1380388   -.0034157
  vinchhiya  |  -.1104632   .0358337    -3.08   0.002    -.1807689   -.0401575
             |
       _cons |   .1717899   .0276251     6.22   0.000     .1175895    .2259903
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~OP |        580    .1189655    .3240274          0          1

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      2.85
       Model |  1.78287863         6  .297146439   Prob > F        =    0.0092
    Residual |  121.507829     1,166  .104209116   R-squared       =    0.0145
-------------+----------------------------------   Adj R-squared   =    0.0094
       Total |  123.290708     1,172  .105196849   Root MSE        =    .32281

------------------------------------------------------------------------------
followed_r~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0296915   .0188643     1.57   0.116    -.0073203    .0667034
             |
    block_id |
     halvad  |  -.1042167   .0328814    -3.17   0.002      -.16873   -.0397033
     jasdan  |  -.0758103   .0341593    -2.22   0.027    -.1428309   -.0087897
      morbi  |  -.0305388   .0331023    -0.92   0.356    -.0954856     .034408
       muli  |  -.0309906   .0296591    -1.04   0.296    -.0891818    .0272006
  vinchhiya  |  -.0793691   .0309784    -2.56   0.011    -.1401488   -.0185894
             |
       _cons |   .1544261   .0238821     6.47   0.000     .1075695    .2012827
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~C |        580    .1034483    .3048064          0          1

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,173

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   .1217479   .0197318     6.17   0.000     .0830743    .1604215
             |
    block_id |
     halvad  |   .0617575   .0340209     1.82   0.069    -.0049223    .1284372
     jasdan  |   .0739555   .0366298     2.02   0.043     .0021623    .1457487
      morbi  |   .0166929   .0315665     0.53   0.597    -.0451763     .078562
       muli  |   .1186523   .0326969     3.63   0.000     .0545675     .182737
  vinchhiya  |  -.0265951   .0267086    -1.00   0.319    -.0789431    .0257529
             |
       _cons |   .0376245   .0214678     1.75   0.080    -.0044516    .0797005
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |  -2.161485   .0580321   -37.25   0.000    -2.275226   -2.047744
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .0548092   .0261822     2.09   0.036      .003493    .1061253
             |
    block_id |
     halvad  |  -.0270999   .0448815    -0.60   0.546     -.115066    .0608663
     jasdan  |  -.3226635   .0494723    -6.52   0.000    -.4196275   -.2256995
      morbi  |  -.0280523   .0451689    -0.62   0.535    -.1165817     .060477
       muli  |    .043084   .0384069     1.12   0.262    -.0321922    .1183602
  vinchhiya  |  -.1233985   .0440954    -2.80   0.005    -.2098239   -.0369731
             |
       _cons |   .7238695   .0323356    22.39   0.000     .6604929    .7872461
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |  -1.600907   .0278436   -57.50   0.000     -1.65548   -1.546335
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   .1057571   .0216805     4.88   0.000     .0632642      .14825
             |
    block_id |
     halvad  |  -.0116595   .0414255    -0.28   0.778     -.092852    .0695329
     jasdan  |  -.0855033    .039665    -2.16   0.031    -.1632453   -.0077613
      morbi  |  -.0312603    .041046    -0.76   0.446    -.1117089    .0491884
       muli  |  -.0707273   .0356488    -1.98   0.047    -.1405976    -.000857
  vinchhiya  |  -.1104632   .0351085    -3.15   0.002    -.1792746   -.0416518
             |
       _cons |   .1717899    .028501     6.03   0.000      .115929    .2276508
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |  -1.970162   .0496799   -39.66   0.000    -2.067533   -1.872791
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .0296915   .0187655     1.58   0.114    -.0070882    .0664712
             |
    block_id |
     halvad  |  -.1042167   .0314038    -3.32   0.001     -.165767   -.0426663
     jasdan  |  -.0758103   .0347198    -2.18   0.029    -.1438599   -.0077606
      morbi  |  -.0305388   .0367305    -0.83   0.406    -.1025293    .0414518
       muli  |  -.0309906   .0331705    -0.93   0.350    -.0960036    .0340224
  vinchhiya  |  -.0793691   .0318553    -2.49   0.013    -.1418043   -.0169339
             |
       _cons |   .1544261   .0263507     5.86   0.000     .1027797    .2060724
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |  -2.261356   .0675528   -33.48   0.000    -2.393757   -2.128955
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post 

          v1:  ([var1_eg1_mean]treatment/.270455778992073 + [var2_eg1_mean]trea
> tment/.4734132067445643 + [var3_eg1_mean]treatment/.324027385648175 + [var4_e
> g1_mean]treatment/.3048063556070287) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2474317   .0359738     6.88   0.000     .1769243    .3179392
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Amount of fertilizer applied (kg/ha) 
> *****************************************************************************
> *****/
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist UREA_kg_hectare_bd DAP_kg_hectare_bd MOP_kg_hectare_bd Z
> INC_kg_hectare_bd {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      6.97
       Model |   94754.301         6  15792.3835   Prob > F        =    0.0000
    Residual |  2642406.36     1,166  2266.21471   R-squared       =    0.0346
-------------+----------------------------------   Adj R-squared   =    0.0297
       Total |  2737160.66     1,172  2335.46131   Root MSE        =    47.605

------------------------------------------------------------------------------
UREA_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   11.69604   2.781886     4.20   0.000     6.237975     17.1541
             |
    block_id |
     halvad  |    8.66864   4.848951     1.79   0.074    -.8450056    18.18228
     jasdan  |   14.82406   5.037402     2.94   0.003     4.940678    24.70745
      morbi  |  -1.101808   4.881534    -0.23   0.821    -10.67938    8.475764
       muli  |   12.50873   4.373771     2.86   0.004     3.927385    21.09007
  vinchhiya  |  -2.540712   4.568324    -0.56   0.578    -11.50377    6.422343
             |
       _cons |   3.358973   3.521838     0.95   0.340    -3.550876    10.26882
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
UREA_kg_he~d |        580     8.58424    37.02349          0   331.9859

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      4.97
       Model |  490712.403         6  81785.4004   Prob > F        =    0.0000
    Residual |    19176441     1,166  16446.3474   R-squared       =    0.0250
-------------+----------------------------------   Adj R-squared   =    0.0199
       Total |  19667153.4     1,172  16780.8476   Root MSE        =    128.24

------------------------------------------------------------------------------
DAP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -5.756058   7.494169    -0.77   0.443    -20.45962    8.947506
             |
    block_id |
     halvad  |  -.8741164   13.06267    -0.07   0.947    -26.50309    24.75485
     jasdan  |  -54.85457   13.57034    -4.04   0.000    -81.47959   -28.22955
      morbi  |  -44.59947   13.15045    -3.39   0.001    -70.40066   -18.79829
       muli  |  -10.43178   11.78258    -0.89   0.376    -33.54921    12.68564
  vinchhiya  |  -31.57052   12.30669    -2.57   0.010    -55.71625   -7.424797
             |
       _cons |   112.1512   9.487539    11.82   0.000     93.53663    130.7657
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
DAP_kg_hec~d |        580    90.60644    161.5612          0    3208.62

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      8.74
       Model |  57020.2514         6  9503.37523   Prob > F        =    0.0000
    Residual |   1268343.3     1,166  1087.77298   R-squared       =    0.0430
-------------+----------------------------------   Adj R-squared   =    0.0381
       Total |  1325363.55     1,172  1130.85627   Root MSE        =    32.981

------------------------------------------------------------------------------
MOP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   9.232426   1.927338     4.79   0.000     5.450987    13.01386
             |
    block_id |
     halvad  |   11.93838   3.359436     3.55   0.000     5.347168     18.5296
     jasdan  |  -2.114131   3.489998    -0.61   0.545     -8.96151    4.733247
      morbi  |  -2.748507    3.38201    -0.81   0.417    -9.384013    3.886999
       muli  |  -1.171364   3.030224    -0.39   0.699    -7.116664    4.773937
  vinchhiya  |   -5.24839   3.165013    -1.66   0.098    -11.45815    .9613679
             |
       _cons |   2.457082    2.43999     1.01   0.314    -2.330179    7.244344
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
MOP_kg_hec~d |        580    2.355581    21.32955          0   370.6575

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      3.96
       Model |  517.203253         6  86.2005421   Prob > F        =    0.0006
    Residual |  25409.5924     1,166  21.7921032   R-squared       =    0.0199
-------------+----------------------------------   Adj R-squared   =    0.0149
       Total |  25926.7956     1,172  22.1218393   Root MSE        =    4.6682

------------------------------------------------------------------------------
ZINC_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .9015136   .2727962     3.30   0.001     .3662872     1.43674
             |
    block_id |
     halvad  |   .1215491    .475496     0.26   0.798    -.8113744    1.054472
     jasdan  |  -.7751371   .4939758    -1.57   0.117    -1.744318    .1940436
      morbi  |  -.6653099   .4786911    -1.39   0.165    -1.604502    .2738823
       muli  |   .4292052   .4288991     1.00   0.317     -.412295    1.270706
  vinchhiya  |  -.7515062   .4479773    -1.68   0.094    -1.630438    .1274255
             |
       _cons |   .3092543   .3453571     0.90   0.371    -.3683366    .9868452
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
ZINC_kg_he~d |        580     .088213    1.222992          0   24.99274

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,173

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   11.69604   2.760996     4.24   0.000     6.284583    17.10749
             |
    block_id |
     halvad  |    8.66864   4.545348     1.91   0.057    -.2400786    17.57736
     jasdan  |   14.82406   7.212426     2.06   0.040     .6879677    28.96016
      morbi  |  -1.101808   3.024451    -0.36   0.716    -7.029623    4.826007
       muli  |   12.50873   3.907836     3.20   0.001     4.849508    20.16795
  vinchhiya  |  -2.540712   3.103688    -0.82   0.413     -8.62383    3.542405
             |
       _cons |   3.358973   2.804748     1.20   0.231    -2.138233    8.856179
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   7.725866   .2461988    31.38   0.000     7.243325    8.208407
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -5.756058   7.429912    -0.77   0.439    -20.31842    8.806302
             |
    block_id |
     halvad  |  -.8741164   11.03542    -0.08   0.937    -22.50314    20.75491
     jasdan  |  -54.85457   10.09768    -5.43   0.000    -74.64565   -35.06348
      morbi  |  -44.59947   7.628684    -5.85   0.000    -59.55142   -29.64753
       muli  |  -10.43178   8.191327    -1.27   0.203    -26.48649    5.622921
  vinchhiya  |  -31.57052   16.26475    -1.94   0.052    -63.44884    .3077925
             |
       _cons |   112.1512   7.355383    15.25   0.000      97.7349    126.5675
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.707859   .5099306    19.04   0.000     8.708413     10.7073
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   9.232426   1.885925     4.90   0.000      5.53608    12.92877
             |
    block_id |
     halvad  |   11.93838   5.040976     2.37   0.018     2.058253    21.81851
     jasdan  |  -2.114131   3.619359    -0.58   0.559    -9.207945    4.979682
      morbi  |  -2.748507   2.836974    -0.97   0.333    -8.308874    2.811861
       muli  |  -1.171364   3.021556    -0.39   0.698    -7.093505    4.750778
  vinchhiya  |   -5.24839   2.662752    -1.97   0.049    -10.46729    -.029493
             |
       _cons |   2.457082   2.286281     1.07   0.283    -2.023945     6.93811
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   6.991888   .2643766    26.45   0.000     6.473719    7.510056
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .9015136   .2669839     3.38   0.001     .3782348    1.424792
             |
    block_id |
     halvad  |   .1215491   .6114024     0.20   0.842    -1.076778    1.319876
     jasdan  |  -.7751371   .4021575    -1.93   0.054    -1.563351    .0130771
      morbi  |  -.6653099   .4036281    -1.65   0.099    -1.456407    .1257867
       muli  |   .4292052   .5795369     0.74   0.459    -.7066663    1.565077
  vinchhiya  |  -.7515062    .398075    -1.89   0.059    -1.531719    .0287063
             |
       _cons |   .3092543   .3492257     0.89   0.376    -.3752155    .9937241
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.081548   .3867637     7.97   0.000     2.323505    3.839591
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/37.02348551161532 + [var2_eg1_mean]tre
> atment/161.5612308059907 + [var3_eg1_mean]treatment/21.32955366882565 + [var4
> _eg1_mean]treatment/1.222992172938692) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .3625663   .0691889     5.24   0.000     .2269586     .498174
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. 
. /****************************************************************************
> ******
> Fertilizer gap
> *****************************************************************************
> *****/
. 
. *This loops over each fertilizer of interest, calculates the distance (absolu
> te difference), then calculates treatment effects with this DV
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_UREA distance_DAP distance_MOP distance_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      7.07
       Model |  45639.6299         6  7606.60499   Prob > F        =    0.0000
    Residual |  1254442.28     1,166  1075.85101   R-squared       =    0.0351
-------------+----------------------------------   Adj R-squared   =    0.0301
       Total |  1300081.91     1,172   1109.2849   Root MSE        =      32.8

------------------------------------------------------------------------------
distance_U~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -9.281649   1.916747    -4.84   0.000    -13.04231    -5.52099
             |
    block_id |
     halvad  |   1.831621   3.340976     0.55   0.584    -4.723376    8.386618
     jasdan  |  -10.47944    3.47082    -3.02   0.003    -17.28919    -3.66969
      morbi  |   3.313633   3.363426     0.99   0.325     -3.28541    9.912676
       muli  |   .8580149   3.013572     0.28   0.776    -5.054616    6.770646
  vinchhiya  |    1.90809   3.147621     0.61   0.544    -4.267545    8.083725
             |
       _cons |   123.8474   2.426582    51.04   0.000     119.0865    128.6084
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_U~A |        580    123.8429     28.5193   1.977566   154.4406

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      8.17
       Model |  191401.222         6  31900.2037   Prob > F        =    0.0000
    Residual |  4553705.08     1,166  3905.40744   R-squared       =    0.0403
-------------+----------------------------------   Adj R-squared   =    0.0354
       Total |   4745106.3     1,172  4048.72551   Root MSE        =    62.493

------------------------------------------------------------------------------
distance_DAP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -5.08748   3.651926    -1.39   0.164    -12.25256    2.077601
             |
    block_id |
     halvad  |   2.241272    6.36547     0.35   0.725    -10.24778    14.73033
     jasdan  |   -11.8938   6.612859    -1.80   0.072    -24.86823    1.080631
      morbi  |  -34.39954   6.408243    -5.37   0.000    -46.97251   -21.82656
       muli  |  -13.63478   5.741677    -2.37   0.018    -24.89995   -2.369604
  vinchhiya  |  -25.29623   5.997076    -4.22   0.000    -37.06249   -13.52996
             |
       _cons |   80.38302     4.6233    17.39   0.000      71.3121    89.45394
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_DAP |        580    66.58837    67.10382          0   376.8351

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      8.06
       Model |  197075.738         6  32845.9564   Prob > F        =    0.0000
    Residual |  4751162.97     1,166  4074.75384   R-squared       =    0.0398
-------------+----------------------------------   Adj R-squared   =    0.0349
       Total |  4948238.71     1,172  4222.04668   Root MSE        =    63.834

------------------------------------------------------------------------------
distance_MOP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -5.523314   3.730263    -1.48   0.139    -12.84209    1.795464
             |
    block_id |
     halvad  |   36.13212   6.502015     5.56   0.000     23.37516    48.88908
     jasdan  |   18.53494   6.754711     2.74   0.006     5.282196    31.78769
      morbi  |   9.041803   6.545705     1.38   0.167    -3.800875    21.88448
       muli  |   31.40382   5.864841     5.35   0.000       19.897    42.91064
  vinchhiya  |    17.6437   6.125719     2.88   0.004     5.625031    29.66236
             |
       _cons |   157.8887   4.722474    33.43   0.000     148.6233    167.1542
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_MOP |        580    177.0265    63.88972          0   308.8813

      Source |       SS           df       MS      Number of obs   =     1,173
-------------+----------------------------------   F(6, 1166)      =      4.26
       Model |  1270.26333         6  211.710554   Prob > F        =    0.0003
    Residual |  57999.0851     1,166  49.7419254   R-squared       =    0.0214
-------------+----------------------------------   Adj R-squared   =    0.0164
       Total |  59269.3484     1,172  50.5711164   Root MSE        =    7.0528

------------------------------------------------------------------------------
distance_Z~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.1847951    .412145    -0.45   0.654    -.9934239    .6238337
             |
    block_id |
     halvad  |   3.501178   .7183872     4.87   0.000     2.091702    4.910654
     jasdan  |   .9607754   .7463067     1.29   0.198    -.5034789     2.42503
      morbi  |    .901059   .7232144     1.25   0.213    -.5178881    2.320006
       muli  |   1.270856   .6479878     1.96   0.050    -.0004966    2.542208
  vinchhiya  |    1.51604   .6768115     2.24   0.025     .1881357    2.843945
             |
       _cons |   17.41054   .5217713    33.37   0.000     16.38683    18.43426
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_Z~C |        580    18.74387    6.999709          0    24.7105

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,173

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -9.281649   1.902905    -4.88   0.000    -13.01127   -5.552023
             |
    block_id |
     halvad  |   1.831621   3.175825     0.58   0.564    -4.392882    8.056124
     jasdan  |  -10.47944   3.209883    -3.26   0.001     -16.7707   -4.188185
      morbi  |   3.313633   3.175117     1.04   0.297    -2.909481    9.536747
       muli  |   .8580149   3.283387     0.26   0.794    -5.577304    7.293334
  vinchhiya  |    1.90809   2.698522     0.71   0.480    -3.380915    7.197096
             |
       _cons |   123.8474    2.10049    58.96   0.000     119.7305    127.9643
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   6.980867    .058431   119.47   0.000     6.866345     7.09539
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   -5.08748   3.650716    -1.39   0.163    -12.24275    2.067793
             |
    block_id |
     halvad  |   2.241272   7.182628     0.31   0.755    -11.83642    16.31896
     jasdan  |   -11.8938   7.228495    -1.65   0.100    -26.06139    2.273788
      morbi  |  -34.39954   5.713881    -6.02   0.000    -45.59854   -23.20054
       muli  |  -13.63478   5.794379    -2.35   0.019    -24.99155   -2.278003
  vinchhiya  |  -25.29623   5.392066    -4.69   0.000    -35.86448   -14.72797
             |
       _cons |   80.38302   4.797555    16.75   0.000     70.97999    89.78606
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   8.270117    .094712    87.32   0.000     8.084485     8.45575
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -5.523314   3.716267    -1.49   0.137    -12.80706    1.760436
             |
    block_id |
     halvad  |   36.13212   6.639523     5.44   0.000      23.1189    49.14535
     jasdan  |   18.53494   6.823524     2.72   0.007      5.16108     31.9088
      morbi  |   9.041803   6.777612     1.33   0.182    -4.242072    22.32568
       muli  |   31.40382   6.178029     5.08   0.000     19.29511    43.51254
  vinchhiya  |    17.6437   6.109668     2.89   0.004     5.668966    29.61843
             |
       _cons |   157.8887   4.952499    31.88   0.000      148.182    167.5955
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   8.312566   .0618085   134.49   0.000     8.191423    8.433708
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |  -.1847951   .4105109    -0.45   0.653    -.9893818    .6197915
             |
    block_id |
     halvad  |   3.501178   .6743756     5.19   0.000     2.179426    4.822929
     jasdan  |   .9607754   .7755466     1.24   0.215    -.5592681    2.480819
      morbi  |    .901059    .780308     1.15   0.248    -.6283166    2.430435
       muli  |   1.270856   .7002604     1.81   0.070    -.1016293    2.643341
  vinchhiya  |    1.51604     .70646     2.15   0.032      .131404    2.900676
             |
       _cons |   17.41054   .5683872    30.63   0.000     16.29652    18.52456
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.906848   .0568582    68.71   0.000     3.795408    4.018288
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/28.51930454400654 + [var2_eg1_mean]tre
> atment/67.10382474621842 + [var3_eg1_mean]treatment/63.88971679725847 + [var4
> _eg1_mean]treatment/6.999709073658861) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |  -.1285294   .0378446    -3.40   0.001    -.2027035   -.0543553
------------------------------------------------------------------------------

. 
. estimates store est3

. estimates restore est3
(results est3 are active now)

. eststo
(est3 stored)

. 
. esttab using "tables/t3/panel_b.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels noconstant b(%9.3fc) scalars("N Observations") sfmt(%9
> .0fc) ///
> mtitles("\makecell[c]{Binary fertilizer \\ use consistent \\ with recommendat
> ion}" "\makecell[c]{Amount of \\ fertilizer \\ applied (kg/ha)}" "\makecell[c
> ]{Distance between \\ suggested \& \\ applied fertilizer}")
(output written to tables/t3/panel_b.tex)

. 
. restore 

. 
. ////////////////////////////////////////////
> // Satellite yield sample 
. ////////////////////////////////////////////
> 
. preserve 

. 
. keep if satellite_yield_sample == 1
(190 observations deleted)

. 
. /****************************************************************************
> ******
> Followed recommendations 
> *****************************************************************************
> *****/
. 
. eststo clear

. 
. // Joint effects
. 
. **Run regression of interest
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist followed_rec_basal_UREA followed_rec_basal_DAP followed_
> rec_basal_MOP followed_rec_basal_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =     11.07
       Model |  7.60312658         6  1.26718776   Prob > F        =    0.0000
    Residual |  129.999673     1,136  .114436332   R-squared       =    0.0553
-------------+----------------------------------   Adj R-squared   =    0.0503
       Total |    137.6028     1,142  .120492819   Root MSE        =    .33828

------------------------------------------------------------------------------
followed_r~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1238611   .0200412     6.18   0.000     .0845392    .1631831
             |
    block_id |
     halvad  |   .0691917   .0353377     1.96   0.050    -.0001428    .1385263
     jasdan  |   .0944864   .0356357     2.65   0.008     .0245671    .1644057
      morbi  |   .0181227   .0364883     0.50   0.620    -.0534694    .0897148
       muli  |   .1072363   .0317294     3.38   0.001     .0449816    .1694911
  vinchhiya  |  -.0290407    .032955    -0.88   0.378    -.0937002    .0356187
             |
       _cons |   .0342671   .0258192     1.33   0.185    -.0163915    .0849257
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~A |        569    .0773286    .2673472          0          1

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =     13.61
       Model |  16.6414335         6  2.77357225   Prob > F        =    0.0000
    Residual |  231.439056     1,136  .203731564   R-squared       =    0.0671
-------------+----------------------------------   Adj R-squared   =    0.0622
       Total |   248.08049     1,142  .217233354   Root MSE        =    .45137

------------------------------------------------------------------------------
followed_~AP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0490704   .0267406     1.84   0.067    -.0033961     .101537
             |
    block_id |
     halvad  |  -.0247834   .0471504    -0.53   0.599    -.1172952    .0677283
     jasdan  |   -.318811   .0475481    -6.71   0.000     -.412103   -.2255191
      morbi  |  -.0084364   .0486857    -0.17   0.862    -.1039603    .0870876
       muli  |   .0584132   .0423359     1.38   0.168    -.0246521    .1414785
  vinchhiya  |  -.1116412   .0439712    -2.54   0.011     -.197915   -.0253673
             |
       _cons |   .7139621     .03445    20.72   0.000     .6463693    .7815549
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~AP |        569     .659051    .4744454          0          1

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      6.03
       Model |  5.11311032         6  .852185054   Prob > F        =    0.0000
    Residual |  160.540433     1,136  .141320804   R-squared       =    0.0309
-------------+----------------------------------   Adj R-squared   =    0.0257
       Total |  165.653543     1,142  .145055642   Root MSE        =    .37593

------------------------------------------------------------------------------
followed_~OP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1076825   .0222713     4.84   0.000     .0639851      .15138
             |
    block_id |
     halvad  |  -.0234616   .0392699    -0.60   0.550    -.1005113     .053588
     jasdan  |  -.0779275   .0396011    -1.97   0.049    -.1556269    -.000228
      morbi  |  -.0293949   .0405485    -0.72   0.469    -.1089533    .0501635
       muli  |  -.0798264     .03526    -2.26   0.024    -.1490085   -.0106443
  vinchhiya  |  -.1084304    .036622    -2.96   0.003    -.1802847    -.036576
             |
       _cons |    .177594   .0286922     6.19   0.000     .1212984    .2338896
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~OP |        569    .1212654    .3267227          0          1

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      2.61
       Model |  1.65906417         6  .276510694   Prob > F        =    0.0163
    Residual |  120.437174     1,136  .106018639   R-squared       =    0.0136
-------------+----------------------------------   Adj R-squared   =    0.0084
       Total |  122.096238     1,142  .106914394   Root MSE        =    .32561

------------------------------------------------------------------------------
followed_r~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |    .031725     .01929     1.64   0.100    -.0061231    .0695731
             |
    block_id |
     halvad  |  -.0997824   .0340132    -2.93   0.003    -.1665182   -.0330466
     jasdan  |  -.0738068   .0343001    -2.15   0.032    -.1411054   -.0065082
      morbi  |  -.0159864   .0351207    -0.46   0.649    -.0848951    .0529224
       muli  |  -.0275436   .0305401    -0.90   0.367     -.087465    .0323778
  vinchhiya  |  -.0684735   .0317198    -2.16   0.031    -.1307094   -.0062375
             |
       _cons |   .1511865   .0248514     6.08   0.000     .1024267    .1999464
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~C |        569    .1054482    .3074002          0          1

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,143

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   .1238611   .0199726     6.20   0.000     .0847156    .1630066
             |
    block_id |
     halvad  |   .0691917   .0349033     1.98   0.047     .0007826    .1376009
     jasdan  |   .0944864   .0371656     2.54   0.011     .0216433    .1673295
      morbi  |   .0181227   .0325431     0.56   0.578    -.0456606    .0819061
       muli  |   .1072363   .0324995     3.30   0.001     .0435386    .1709341
  vinchhiya  |  -.0290407   .0264378    -1.10   0.272    -.0808579    .0227765
             |
       _cons |   .0342671   .0213228     1.61   0.108    -.0075248     .076059
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |  -2.167737   .0587428   -36.90   0.000     -2.28287   -2.052603
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .0490704   .0266382     1.84   0.065    -.0031395    .1012804
             |
    block_id |
     halvad  |  -.0247834   .0466382    -0.53   0.595    -.1161926    .0666257
     jasdan  |   -.318811   .0494203    -6.45   0.000     -.415673   -.2219491
      morbi  |  -.0084364   .0477222    -0.18   0.860    -.1019702    .0850975
       muli  |   .0584132   .0395575     1.48   0.140    -.0191181    .1359445
  vinchhiya  |  -.1116412   .0450288    -2.48   0.013     -.199896   -.0233864
             |
       _cons |   .7139621   .0336779    21.20   0.000     .6479545    .7799696
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |  -1.590952   .0274564   -57.94   0.000    -1.644765   -1.537139
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   .1076825   .0221357     4.86   0.000     .0642974    .1510676
             |
    block_id |
     halvad  |  -.0234616   .0424668    -0.55   0.581     -.106695    .0597717
     jasdan  |  -.0779275   .0406638    -1.92   0.055     -.157627    .0017721
      morbi  |  -.0293949   .0434777    -0.68   0.499    -.1146096    .0558198
       muli  |  -.0798264   .0365607    -2.18   0.029     -.151484   -.0081687
  vinchhiya  |  -.1084304   .0364599    -2.97   0.003    -.1798905   -.0369702
             |
       _cons |    .177594    .029665     5.99   0.000     .1194517    .2357363
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |  -1.956723   .0496625   -39.40   0.000     -2.05406   -1.859386
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |    .031725    .019207     1.65   0.099    -.0059201    .0693701
             |
    block_id |
     halvad  |  -.0997824   .0323859    -3.08   0.002    -.1632575   -.0363073
     jasdan  |  -.0738068   .0347853    -2.12   0.034    -.1419848   -.0056289
      morbi  |  -.0159864   .0391324    -0.41   0.683    -.0926845    .0607117
       muli  |  -.0275436   .0338202    -0.81   0.415    -.0938299    .0387427
  vinchhiya  |  -.0684735   .0328596    -2.08   0.037    -.1328771   -.0040698
             |
       _cons |   .1511865   .0269276     5.61   0.000     .0984094    .2039637
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   -2.24414   .0675245   -33.23   0.000    -2.376486   -2.111795
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post 

          v1:  ([var1_eg1_mean]treatment/.267347230112911 + [var2_eg1_mean]trea
> tment/.474445353570453 + [var3_eg1_mean]treatment/.3267226526804483 + [var4_e
> g1_mean]treatment/.3074002492523823) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |    .249878   .0368675     6.78   0.000     .1776191    .3221369
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Amount of fertilizer applied (kg/ha) 
> *****************************************************************************
> *****/
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist UREA_kg_hectare_bd DAP_kg_hectare_bd MOP_kg_hectare_bd Z
> INC_kg_hectare_bd {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      7.53
       Model |  100988.336         6  16831.3894   Prob > F        =    0.0000
    Residual |  2538552.38     1,136  2234.64118   R-squared       =    0.0383
-------------+----------------------------------   Adj R-squared   =    0.0332
       Total |  2639540.71     1,142  2311.33162   Root MSE        =    47.272

------------------------------------------------------------------------------
UREA_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   11.86546   2.800566     4.24   0.000       6.3706    17.36033
             |
    block_id |
     halvad  |   8.927421   4.938107     1.81   0.071    -.7614133    18.61626
     jasdan  |   15.79142   4.979752     3.17   0.002      6.02087    25.56196
      morbi  |  -.9636254   5.098894    -0.19   0.850    -10.96793    9.040683
       muli  |   10.93468   4.433876     2.47   0.014     2.235169    19.63418
  vinchhiya  |  -4.314275    4.60514    -0.94   0.349    -13.34981    4.721261
             |
       _cons |    3.59918    3.60798     1.00   0.319    -3.479874    10.67823
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
UREA_kg_he~d |        569       8.407    35.55071          0   331.9859

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      4.27
       Model |  428011.484         6  71335.2473   Prob > F        =    0.0003
    Residual |  18994150.2     1,136  16720.2027   R-squared       =    0.0220
-------------+----------------------------------   Adj R-squared   =    0.0169
       Total |  19422161.7     1,142  17007.1468   Root MSE        =    129.31

------------------------------------------------------------------------------
DAP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -6.992939   7.660599    -0.91   0.362    -22.02345    8.037574
             |
    block_id |
     halvad  |  -1.045558   13.50757    -0.08   0.938    -27.54815    25.45704
     jasdan  |  -51.07899   13.62149    -3.75   0.000     -77.8051   -24.35289
      morbi  |  -41.59956   13.94739    -2.98   0.003     -68.9651   -14.23403
       muli  |  -9.386707   12.12831    -0.77   0.439    -33.18312     14.4097
  vinchhiya  |  -30.49503   12.59679    -2.42   0.016    -55.21061   -5.779451
             |
       _cons |   110.8949   9.869179    11.24   0.000     91.53107    130.2588
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
DAP_kg_hec~d |        569    90.27671    162.1749          0    3208.62

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      6.89
       Model |  61188.7737         6   10198.129   Prob > F        =    0.0000
    Residual |  1681569.67     1,136  1480.25499   R-squared       =    0.0351
-------------+----------------------------------   Adj R-squared   =    0.0300
       Total |  1742758.44     1,142  1526.05818   Root MSE        =    38.474

------------------------------------------------------------------------------
MOP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   11.18444   2.279346     4.91   0.000     6.712238    15.65664
             |
    block_id |
     halvad  |   9.628527   4.019063     2.40   0.017     1.742905    17.51415
     jasdan  |    2.02827   4.052958     0.50   0.617    -5.923855    9.980394
      morbi  |   -2.99687   4.149926    -0.72   0.470    -11.13925    5.145511
       muli  |   -1.53345   3.608676    -0.42   0.671    -8.613869    5.546969
  vinchhiya  |  -5.644723   3.748066    -1.51   0.132    -12.99863    1.709187
             |
       _cons |    1.93086    2.93649     0.66   0.511    -3.830694    7.692413
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
MOP_kg_hec~d |        569    1.746986    14.98287          0   280.2159

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      4.43
       Model |  619.288227         6  103.214705   Prob > F        =    0.0002
    Residual |   26476.824     1,136  23.3070634   R-squared       =    0.0229
-------------+----------------------------------   Adj R-squared   =    0.0177
       Total |  27096.1123     1,142  23.7268934   Root MSE        =    4.8277

------------------------------------------------------------------------------
ZINC_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .9738015    .286013     3.40   0.001     .4126285    1.534975
             |
    block_id |
     halvad  |   .0945497   .5043132     0.19   0.851    -.8949403     1.08404
     jasdan  |  -.8478913   .5085663    -1.67   0.096    -1.845726    .1499435
      morbi  |  -.7403795   .5207339    -1.42   0.155    -1.762088    .2813289
       muli  |   .5326539   .4528177     1.18   0.240    -.3557991    1.421107
  vinchhiya  |  -.8005549   .4703084    -1.70   0.089    -1.723326    .1222158
             |
       _cons |   .3273056   .3684716     0.89   0.375    -.3956558    1.050267
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
ZINC_kg_he~d |        569    .0899183    1.234716          0   24.99274

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,143

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   11.86546   2.753513     4.31   0.000     6.468676    17.26225
             |
    block_id |
     halvad  |   8.927421   4.730686     1.89   0.059    -.3445529     18.1994
     jasdan  |   15.79142    6.96226     2.27   0.023     2.145637    29.43719
      morbi  |  -.9636254   3.193419    -0.30   0.763    -7.222611     5.29536
       muli  |   10.93468   3.959926     2.76   0.006     3.173362    18.69599
  vinchhiya  |  -4.314275   2.875371    -1.50   0.134      -9.9499    1.321349
             |
       _cons |    3.59918     2.9298     1.23   0.219    -2.143122    9.341482
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   7.711836   .2528078    30.50   0.000     7.216342     8.20733
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -6.992939   7.558053    -0.93   0.355    -21.80645    7.820572
             |
    block_id |
     halvad  |  -1.045558   11.17912    -0.09   0.925    -22.95622     20.8651
     jasdan  |  -51.07899   10.21176    -5.00   0.000    -71.09367   -31.06432
      morbi  |  -41.59956   7.898353    -5.27   0.000    -57.08005   -26.11908
       muli  |  -9.386707   8.284308    -1.13   0.257    -25.62365    6.850238
  vinchhiya  |  -30.49503   16.15066    -1.89   0.059    -62.14974    1.159677
             |
       _cons |   110.8949   7.565909    14.66   0.000     96.06603    125.7238
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.724373   .5148619    18.89   0.000     8.715262    10.73348
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   11.18444   2.191151     5.10   0.000     6.889861    15.47902
             |
    block_id |
     halvad  |   9.628527   4.799311     2.01   0.045     .2220495      19.035
     jasdan  |    2.02827   5.932583     0.34   0.732     -9.59938    13.65592
      morbi  |   -2.99687   2.976022    -1.01   0.314    -8.829766    2.836026
       muli  |   -1.53345   3.176442    -0.48   0.629    -7.759162    4.692263
  vinchhiya  |  -5.644723   2.830021    -1.99   0.046    -11.19146   -.0979826
             |
       _cons |    1.93086   2.509815     0.77   0.442    -2.988287    6.850007
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |    7.29997   .3719377    19.63   0.000     6.570985    8.028954
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .9738015   .2804499     3.47   0.001     .4241298    1.523473
             |
    block_id |
     halvad  |   .0945497   .6425593     0.15   0.883    -1.164843    1.353943
     jasdan  |  -.8478913   .4332285    -1.96   0.050    -1.697004     .001221
      morbi  |  -.7403795   .4228149    -1.75   0.080    -1.569082    .0883226
       muli  |   .5326539    .617818     0.86   0.389     -.678247    1.743555
  vinchhiya  |  -.8005549   .4259455    -1.88   0.060    -1.635393    .0342829
             |
       _cons |   .3273056   .3767452     0.87   0.385    -.4111014    1.065713
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.148756   .3722086     8.46   0.000     2.419241    3.878272
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/35.5507127783449 + [var2_eg1_mean]trea
> tment/162.1749258340572 + [var3_eg1_mean]treatment/14.98287267505866 + [var4_
> eg1_mean]treatment/1.23471553607147) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .4564521   .0791367     5.77   0.000      .301347    .6115572
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. 
. /****************************************************************************
> ******
> Fertilizer gap
> *****************************************************************************
> *****/
. 
. *This loops over each fertilizer of interest, calculates the distance (absolu
> te difference), then calculates treatment effects with this DV
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_UREA distance_DAP distance_MOP distance_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      7.51
       Model |   48049.821         6  8008.30349   Prob > F        =    0.0000
    Residual |  1211045.04     1,136  1066.06077   R-squared       =    0.0382
-------------+----------------------------------   Adj R-squared   =    0.0331
       Total |  1259094.86     1,142   1102.5349   Root MSE        =    32.651

------------------------------------------------------------------------------
distance_U~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -8.942754   1.934341    -4.62   0.000    -12.73804   -5.147472
             |
    block_id |
     halvad  |   1.389438   3.410732     0.41   0.684    -5.302604    8.081479
     jasdan  |  -11.35364   3.439496    -3.30   0.001    -18.10212   -4.605161
      morbi  |    2.38696   3.521787     0.68   0.498    -4.522978    9.296898
       muli  |    2.47841   3.062461     0.81   0.419    -3.530306    8.487126
  vinchhiya  |   1.601679   3.180753     0.50   0.615    -4.639132    7.842489
             |
       _cons |   123.3335   2.492018    49.49   0.000      118.444    128.2229
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_U~A |        569    123.2536    28.79355   1.977566   154.4406

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      7.91
       Model |   181997.77         6  30332.9616   Prob > F        =    0.0000
    Residual |  4354663.01     1,136  3833.33011   R-squared       =    0.0401
-------------+----------------------------------   Adj R-squared   =    0.0350
       Total |  4536660.78     1,142   3972.5576   Root MSE        =    61.914

------------------------------------------------------------------------------
distance_DAP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -5.611834   3.668006    -1.53   0.126    -12.80866    1.584994
             |
    block_id |
     halvad  |   1.941784   6.467623     0.30   0.764    -10.74804    14.63161
     jasdan  |  -9.265949   6.522167    -1.42   0.156     -22.0628    3.530899
      morbi  |  -35.09506   6.678212    -5.26   0.000    -48.19807   -21.99204
       muli  |   -13.5275   5.807213    -2.33   0.020    -24.92157   -2.133433
  vinchhiya  |   -24.9311   6.031524    -4.13   0.000    -36.76527   -13.09692
             |
       _cons |   79.63822   4.725507    16.85   0.000     70.36652    88.90992
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_DAP |        569    65.96686    66.30984          0   376.8351

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      7.97
       Model |  198363.873         6  33060.6455   Prob > F        =    0.0000
    Residual |  4713375.71     1,136  4149.09834   R-squared       =    0.0404
-------------+----------------------------------   Adj R-squared   =    0.0353
       Total |  4911739.59     1,142  4300.99789   Root MSE        =    64.413

------------------------------------------------------------------------------
distance_MOP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -6.104397   3.816092    -1.60   0.110    -13.59178    1.382983
             |
    block_id |
     halvad  |   35.75701   6.728736     5.31   0.000     22.55487    48.95916
     jasdan  |   18.50206   6.785482     2.73   0.006     5.188577    31.81555
      morbi  |   5.946916   6.947827     0.86   0.392    -7.685098    19.57893
       muli  |   31.38583   6.041663     5.19   0.000     19.53175     43.2399
  vinchhiya  |   15.49841    6.27503     2.47   0.014     3.186455    27.81036
             |
       _cons |   158.6759   4.916286    32.28   0.000     149.0299     168.322
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_MOP |        569    177.0805    64.53045          0   308.8813

      Source |       SS           df       MS      Number of obs   =     1,143
-------------+----------------------------------   F(6, 1136)      =      3.88
       Model |  1172.94066         6  195.490111   Prob > F        =    0.0008
    Residual |  57219.3376     1,136  50.3691352   R-squared       =    0.0201
-------------+----------------------------------   Adj R-squared   =    0.0149
       Total |  58392.2782     1,142  51.1315922   Root MSE        =    7.0971

------------------------------------------------------------------------------
distance_Z~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -.245461   .4204595    -0.58   0.559    -1.070425    .5795035
             |
    block_id |
     halvad  |   3.339669   .7413765     4.50   0.000     1.885048    4.794291
     jasdan  |   .8253999   .7476289     1.10   0.270    -.6414887    2.292288
      morbi  |   .4492397   .7655161     0.59   0.557    -1.052745    1.951224
       muli  |   1.196276   .6656744     1.80   0.073    -.1098131    2.502366
  vinchhiya  |   1.204903    .691387     1.74   0.082    -.1516362    2.561442
             |
       _cons |   17.55118   .5416797    32.40   0.000     16.48838    18.61399
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_Z~C |        569    18.70669    7.038708          0    24.7105

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,143

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -8.942754   1.920928    -4.66   0.000     -12.7077   -5.177805
             |
    block_id |
     halvad  |   1.389438   3.262307     0.43   0.670    -5.004566    7.783441
     jasdan  |  -11.35364   3.205741    -3.54   0.000    -17.63678   -5.070502
      morbi  |    2.38696   3.313934     0.72   0.471    -4.108231     8.88215
       muli  |    2.47841   3.294515     0.75   0.452    -3.978721    8.935541
  vinchhiya  |   1.601679    2.75537     0.58   0.561    -3.798747    7.002105
             |
       _cons |   123.3335   2.144589    57.51   0.000     119.1301    127.5368
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   6.971726   .0592155   117.73   0.000     6.855665    7.087786
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -5.611834   3.673722    -1.53   0.127     -12.8122    1.588529
             |
    block_id |
     halvad  |   1.941784   7.095313     0.27   0.784    -11.96477    15.84834
     jasdan  |  -9.265949   7.211552    -1.28   0.199    -23.40033    4.868434
      morbi  |  -35.09506   5.894955    -5.95   0.000    -46.64896   -23.54116
       muli  |   -13.5275   5.749855    -2.35   0.019    -24.79701   -2.257991
  vinchhiya  |   -24.9311   5.369916    -4.64   0.000    -35.45594   -14.40625
             |
       _cons |   79.63822   4.874804    16.34   0.000     70.08378    89.19266
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   8.251489   .0978524    84.33   0.000     8.059702    8.443276
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -6.104397    3.79592    -1.61   0.108    -13.54426     1.33547
             |
    block_id |
     halvad  |   35.75701   6.828197     5.24   0.000     22.37399    49.14003
     jasdan  |   18.50206   6.851534     2.70   0.007     5.073302    31.93082
      morbi  |   5.946916   7.268793     0.82   0.413    -8.299656    20.19349
       muli  |   31.38583   6.248176     5.02   0.000     19.13962    43.63203
  vinchhiya  |   15.49841   6.287955     2.46   0.014     3.174241    27.82257
             |
       _cons |   158.6759   5.058977    31.37   0.000     148.7605    168.5914
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   8.330646   .0619521   134.47   0.000     8.209223     8.45207
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   -.245461   .4189253    -0.59   0.558    -1.066539    .5756176
             |
    block_id |
     halvad  |   3.339669   .6929292     4.82   0.000     1.981553    4.697786
     jasdan  |   .8253999   .7738599     1.07   0.286    -.6913376    2.342137
      morbi  |   .4492397   .8353145     0.54   0.591    -1.187947    2.086426
       muli  |   1.196276   .7099692     1.68   0.092    -.1952377     2.58779
  vinchhiya  |   1.204903   .7247881     1.66   0.096    -.2156558    2.625461
             |
       _cons |   17.55118   .5814827    30.18   0.000      16.4115    18.69087
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.919379   .0570277    68.73   0.000     3.807606    4.031151
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/28.79354567106255 + [var2_eg1_mean]tre
> atment/66.30984219808585 + [var3_eg1_mean]treatment/64.53045216641955 + [var4
> _eg1_mean]treatment/7.038708458076878) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |  -.1311706   .0383289    -3.42   0.001    -.2062939   -.0560474
------------------------------------------------------------------------------

. 
. estimates store est3

. estimates restore est3
(results est3 are active now)

. eststo
(est3 stored)

. 
. esttab using "tables/t3/panel_c.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels noconstant b(%9.3fc) scalars("N Observations") sfmt(%9
> .0fc) ///
> mtitles("\makecell[c]{Binary fertilizer \\ use consistent \\ with recommendat
> ion}" "\makecell[c]{Amount of \\ fertilizer \\ applied (kg/ha)}" "\makecell[c
> ]{Distance between \\ suggested \& \\ applied fertilizer}")
(output written to tables/t3/panel_c.tex)

. 
. restore 

. 
. 
. ////////////////////////////////////////////
> // Intersecting sample 
. ////////////////////////////////////////////
> 
. preserve 

. 
. keep if intersecting_sample == 1
(247 observations deleted)

. 
. /****************************************************************************
> ******
> Followed recommendations 
> *****************************************************************************
> *****/
. 
. eststo clear

. 
. // Joint effects
. 
. **Run regression of interest
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist followed_rec_basal_UREA followed_rec_basal_DAP followed_
> rec_basal_MOP followed_rec_basal_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =     10.98
       Model |  7.52521386         6  1.25420231   Prob > F        =    0.0000
    Residual |  125.791573     1,101   .11425211   R-squared       =    0.0564
-------------+----------------------------------   Adj R-squared   =    0.0513
       Total |  133.316787     1,107  .120430702   Root MSE        =    .33801

------------------------------------------------------------------------------
followed_r~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1280554   .0203293     6.30   0.000     .0881668     .167944
             |
    block_id |
     halvad  |   .0691955   .0357625     1.93   0.053    -.0009749    .1393659
     jasdan  |   .0757515   .0367571     2.06   0.040     .0036296    .1478733
      morbi  |   .0158581   .0369321     0.43   0.668    -.0566072    .0883233
       muli  |   .1092479   .0321797     3.39   0.001     .0461074    .1723883
  vinchhiya  |  -.0324384   .0333274    -0.97   0.331    -.0978307     .032954
             |
       _cons |   .0356717   .0262247     1.36   0.174    -.0157843    .0871278
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~A |        553    .0759494    .2651569          0          1

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =     12.97
       Model |  15.6840981         6  2.61401635   Prob > F        =    0.0000
    Residual |  221.892617     1,101  .201537345   R-squared       =    0.0660
-------------+----------------------------------   Adj R-squared   =    0.0609
       Total |  237.576715     1,107  .214613112   Root MSE        =    .44893

------------------------------------------------------------------------------
followed_~AP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0559019   .0270003     2.07   0.039     .0029241    .1088798
             |
    block_id |
     halvad  |  -.0169539   .0474978    -0.36   0.721    -.1101503    .0762426
     jasdan  |  -.3138246   .0488188    -6.43   0.000    -.4096129   -.2180363
      morbi  |  -.0200195   .0490512    -0.41   0.683    -.1162639    .0762249
       muli  |   .0602411   .0427393     1.41   0.159    -.0236186    .1441009
  vinchhiya  |  -.1181929   .0442636    -2.67   0.008    -.2050435   -.0313424
             |
       _cons |   .7162318   .0348302    20.56   0.000     .6478907    .7845729
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~AP |        553    .6618445    .4735101          0          1

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      6.55
       Model |  5.53978333         6  .923297221   Prob > F        =    0.0000
    Residual |  155.141625     1,101  .140909741   R-squared       =    0.0345
-------------+----------------------------------   Adj R-squared   =    0.0292
       Total |  160.681408     1,107  .145150323   Root MSE        =    .37538

------------------------------------------------------------------------------
followed_~OP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1083994   .0225767     4.80   0.000      .064101    .1526977
             |
    block_id |
     halvad  |  -.0275463   .0397161    -0.69   0.488    -.1054741    .0503815
     jasdan  |  -.0981281   .0408206    -2.40   0.016    -.1782231   -.0180331
      morbi  |  -.0345836    .041015    -0.84   0.399    -.1150599    .0458928
       muli  |  -.0839706   .0357372    -2.35   0.019    -.1540913   -.0138499
  vinchhiya  |  -.1252217   .0370117    -3.38   0.001    -.1978431   -.0526002
             |
       _cons |   .1855367   .0291239     6.37   0.000     .1283921    .2426812
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~OP |        553    .1211573    .3266055          0          1

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      2.88
       Model |  1.83096762         6   .30516127   Prob > F        =    0.0087
    Residual |  116.720476     1,101  .106013148   R-squared       =    0.0154
-------------+----------------------------------   Adj R-squared   =    0.0101
       Total |  118.551444     1,107  .107092542   Root MSE        =     .3256

------------------------------------------------------------------------------
followed_r~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |    .032975   .0195826     1.68   0.092    -.0054485    .0713984
             |
    block_id |
     halvad  |  -.1042687   .0344489    -3.03   0.003    -.1718617   -.0366758
     jasdan  |  -.0776861    .035407    -2.19   0.028    -.1471589   -.0082133
      morbi  |  -.0189762   .0355756    -0.53   0.594    -.0887798    .0508274
       muli  |  -.0339215   .0309977    -1.09   0.274    -.0947428    .0268997
  vinchhiya  |  -.0826171   .0321032    -2.57   0.010    -.1456076   -.0196267
             |
       _cons |   .1564115   .0252615     6.19   0.000     .1068454    .2059775
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~C |        553    .1048825    .3066793          0          1

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,108

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   .1280554   .0202648     6.32   0.000     .0883371    .1677737
             |
    block_id |
     halvad  |   .0691955   .0356433     1.94   0.052    -.0006642    .1390552
     jasdan  |   .0757515   .0376298     2.01   0.044     .0019984    .1495045
      morbi  |   .0158581    .033338     0.48   0.634    -.0494833    .0811994
       muli  |   .1092479    .033312     3.28   0.001     .0439575    .1745382
  vinchhiya  |  -.0324384   .0270943    -1.20   0.231    -.0855423    .0206656
             |
       _cons |   .0356717   .0219096     1.63   0.103    -.0072704    .0786138
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |  -2.169348   .0596578   -36.36   0.000    -2.286275   -2.052421
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .0559019   .0268968     2.08   0.038     .0031851    .1086187
             |
    block_id |
     halvad  |  -.0169539   .0466768    -0.36   0.716    -.1084387     .074531
     jasdan  |  -.3138246   .0509515    -6.16   0.000    -.4136877   -.2139614
      morbi  |  -.0200195   .0483578    -0.41   0.679     -.114799      .07476
       muli  |   .0602411     .03977     1.51   0.130    -.0177067     .138189
  vinchhiya  |  -.1181929   .0454134    -2.60   0.009    -.2072016   -.0291843
             |
       _cons |   .7162318    .034037    21.04   0.000     .6495206     .782943
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |  -1.601781   .0285729   -56.06   0.000    -1.657782   -1.545779
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   .1083994   .0224687     4.82   0.000     .0643615    .1524372
             |
    block_id |
     halvad  |  -.0275463   .0433796    -0.64   0.525    -.1125688    .0574762
     jasdan  |  -.0981281   .0414993    -2.36   0.018    -.1794652    -.016791
      morbi  |  -.0345836   .0444869    -0.78   0.437    -.1217763    .0526091
       muli  |  -.0839706   .0375059    -2.24   0.025    -.1574809   -.0104603
  vinchhiya  |  -.1252217   .0367952    -3.40   0.001    -.1973389   -.0531044
             |
       _cons |   .1855367    .030467     6.09   0.000     .1258225    .2452509
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |  -1.959636   .0503393   -38.93   0.000    -2.058299   -1.860973
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |    .032975   .0194989     1.69   0.091    -.0052421     .071192
             |
    block_id |
     halvad  |  -.1042687   .0332344    -3.14   0.002     -.169407   -.0391305
     jasdan  |  -.0776861   .0361714    -2.15   0.032    -.1485807   -.0067915
      morbi  |  -.0189762    .040081    -0.47   0.636    -.0975335    .0595811
       muli  |  -.0339215   .0345759    -0.98   0.327     -.101689    .0338459
  vinchhiya  |  -.0826171   .0331177    -2.49   0.013    -.1475266   -.0177076
             |
       _cons |   .1564115   .0276973     5.65   0.000     .1021258    .2106972
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |  -2.244192   .0684018   -32.81   0.000    -2.378257   -2.110127
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post 

          v1:  ([var1_eg1_mean]treatment/.2651569352859069 + [var2_eg1_mean]tre
> atment/.473510093983739 + [var3_eg1_mean]treatment/.3266054530217599 + [var4_
> eg1_mean]treatment/.3066793200756399) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |    .260105   .0372531     6.98   0.000     .1870903    .3331197
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Amount of fertilizer applied (kg/ha) 
> *****************************************************************************
> *****/
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist UREA_kg_hectare_bd DAP_kg_hectare_bd MOP_kg_hectare_bd Z
> INC_kg_hectare_bd {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      7.25
       Model |  98314.9749         6  16385.8291   Prob > F        =    0.0000
    Residual |  2488822.74     1,101  2260.51112   R-squared       =    0.0380
-------------+----------------------------------   Adj R-squared   =    0.0328
       Total |  2587137.72     1,107  2337.07111   Root MSE        =    47.545

------------------------------------------------------------------------------
UREA_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   12.36481   2.859527     4.32   0.000     6.754073    17.97555
             |
    block_id |
     halvad  |   8.970045   5.030362     1.78   0.075    -.9001345    18.84022
     jasdan  |   14.59629   5.170259     2.82   0.005     4.451621    24.74097
      morbi  |   -1.23422   5.194877    -0.24   0.812     -11.4272    8.958757
       muli  |   11.14454   4.526403     2.46   0.014     2.263194     20.0259
  vinchhiya  |  -4.663734   4.687833    -0.99   0.320    -13.86183    4.534363
             |
       _cons |   3.692347   3.688772     1.00   0.317     -3.54547    10.93016
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
UREA_kg_he~d |        553    8.294794    35.61003          0   331.9859

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      4.41
       Model |   447790.89         6   74631.815   Prob > F        =    0.0002
    Residual |  18634652.5     1,101  16925.2066   R-squared       =    0.0235
-------------+----------------------------------   Adj R-squared   =    0.0181
       Total |  19082443.4     1,107  17237.9796   Root MSE        =     130.1

------------------------------------------------------------------------------
DAP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -7.768557   7.824523    -0.99   0.321    -23.12122    7.584103
             |
    block_id |
     halvad  |   .0559121   13.76458     0.00   0.997    -26.95186    27.06368
     jasdan  |  -53.07506   14.14738    -3.75   0.000    -80.83393    -25.3162
      morbi  |  -42.63416   14.21474    -3.00   0.003     -70.5252   -14.74311
       muli  |  -9.014182    12.3856    -0.73   0.467    -33.31622    15.28786
  vinchhiya  |   -30.9115   12.82732    -2.41   0.016    -56.08025   -5.742755
             |
       _cons |   112.1341   10.09359    11.11   0.000     92.32923    131.9389
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
DAP_kg_hec~d |        553    91.48526    164.1437          0    3208.62

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      8.85
       Model |  54273.7441         6  9045.62401   Prob > F        =    0.0000
    Residual |   1125524.3     1,101  1022.27457   R-squared       =    0.0460
-------------+----------------------------------   Adj R-squared   =    0.0408
       Total |  1179798.04     1,107  1065.76156   Root MSE        =    31.973

------------------------------------------------------------------------------
MOP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   10.22048   1.922979     5.31   0.000     6.447365     13.9936
             |
    block_id |
     halvad  |   9.648087   3.382826     2.85   0.004     3.010572     16.2856
     jasdan  |  -2.839724   3.476904    -0.82   0.414     -9.66183    3.982383
      morbi  |  -3.378337    3.49346    -0.97   0.334    -10.23293    3.476253
       muli  |  -1.672804   3.043923    -0.55   0.583     -7.64535    4.299742
  vinchhiya  |  -6.030168   3.152482    -1.91   0.056    -12.21572    .1553837
             |
       _cons |   2.738626   2.480632     1.10   0.270    -2.128673    7.605926
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
MOP_kg_hec~d |        553    1.797532    15.19547          0   280.2159

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      4.00
       Model |  550.275573         6  91.7125955   Prob > F        =    0.0006
    Residual |  25261.7639     1,101  22.9443814   R-squared       =    0.0213
-------------+----------------------------------   Adj R-squared   =    0.0160
       Total |  25812.0395     1,107  23.3171088   Root MSE        =      4.79

------------------------------------------------------------------------------
ZINC_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .9445951   .2880906     3.28   0.001     .3793265    1.509864
             |
    block_id |
     halvad  |   .0823675   .5067971     0.16   0.871    -.9120297    1.076765
     jasdan  |  -.8654835   .5208913    -1.66   0.097    -1.887535    .1565683
      morbi  |  -.7818669   .5233716    -1.49   0.135    -1.808785    .2450514
       muli  |   .3895969   .4560244     0.85   0.393    -.5051782    1.284372
  vinchhiya  |  -.8393589   .4722881    -1.78   0.076    -1.766045    .0873276
             |
       _cons |   .3737764   .3716351     1.01   0.315    -.3554165    1.102969
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
ZINC_kg_he~d |        553      .09252    1.252386          0   24.99274

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,108

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   12.36481   2.832672     4.37   0.000     6.812876    17.91675
             |
    block_id |
     halvad  |   8.970045   4.832791     1.86   0.063    -.5020521    18.44214
     jasdan  |   14.59629   7.410232     1.97   0.049     .0725058    29.12008
      morbi  |   -1.23422   3.280522    -0.38   0.707    -7.663925    5.195484
       muli  |   11.14454   4.065024     2.74   0.006     3.177244    19.11185
  vinchhiya  |  -4.663734   2.955226    -1.58   0.115    -10.45587    1.128402
             |
       _cons |   3.692347    3.02214     1.22   0.222    -2.230938    9.615632
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   7.723346   .2579206    29.94   0.000     7.217831    8.228861
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -7.768557   7.774728    -1.00   0.318    -23.00674     7.46963
             |
    block_id |
     halvad  |   .0559121   11.33834     0.00   0.996    -22.16683    22.27865
     jasdan  |  -53.07506   10.36703    -5.12   0.000    -73.39407   -32.75606
      morbi  |  -42.63416   8.038332    -5.30   0.000      -58.389   -26.87931
       muli  |  -9.014182   8.432853    -1.07   0.285    -25.54227    7.513906
  vinchhiya  |   -30.9115   16.41543    -1.88   0.060    -63.08515    1.262139
             |
       _cons |   112.1341   7.740741    14.49   0.000     96.96249    127.3056
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.736559   .5242931    18.57   0.000     8.708964    10.76415
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   10.22048   1.886721     5.42   0.000     6.522577    13.91839
             |
    block_id |
     halvad  |   9.648087   4.910278     1.96   0.049     .0241194    19.27205
     jasdan  |  -2.839724   3.849602    -0.74   0.461    -10.38481    4.705358
      morbi  |  -3.378337   3.072934    -1.10   0.272    -9.401178    2.644503
       muli  |  -1.672804   3.273241    -0.51   0.609    -8.088238     4.74263
  vinchhiya  |  -6.030168   2.923443    -2.06   0.039    -11.76001   -.3003253
             |
       _cons |   2.738626   2.507852     1.09   0.275    -2.176674    7.653926
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   6.929785   .2756598    25.14   0.000     6.389502    7.470069
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .9445951   .2835768     3.33   0.001     .3887947    1.500395
             |
    block_id |
     halvad  |   .0823675   .6590368     0.12   0.901    -1.209321    1.374056
     jasdan  |  -.8654835   .4461981    -1.94   0.052    -1.740016    .0090488
      morbi  |  -.7818669   .4386771    -1.78   0.075    -1.641658    .0779244
       muli  |   .3895969   .6195813     0.63   0.529    -.8247601    1.603954
  vinchhiya  |  -.8393589   .4416532    -1.90   0.057    -1.704983    .0262654
             |
       _cons |   .3737764   .3886282     0.96   0.336    -.3879208    1.135474
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.133073   .3879208     8.08   0.000     2.372762    3.893384
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/35.6100309706784 + [var2_eg1_mean]trea
> tment/164.1437114256515 + [var3_eg1_mean]treatment/15.19546990920461 + [var4_
> eg1_mean]treatment/1.252385872738669) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .4316844   .0769682     5.61   0.000     .2808295    .5825393
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. 
. /****************************************************************************
> ******
> Fertilizer gap
> *****************************************************************************
> *****/
. 
. *This loops over each fertilizer of interest, calculates the distance (absolu
> te difference), then calculates treatment effects with this DV
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_UREA distance_DAP distance_MOP distance_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      6.83
       Model |  44008.3812         6   7334.7302   Prob > F        =    0.0000
    Residual |  1182974.51     1,101  1074.45459   R-squared       =    0.0359
-------------+----------------------------------   Adj R-squared   =    0.0306
       Total |  1226982.89     1,107  1108.38563   Root MSE        =    32.779

------------------------------------------------------------------------------
distance_U~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -9.369756   1.971446    -4.75   0.000    -13.23797   -5.501541
             |
    block_id |
     halvad  |   1.665517   3.468087     0.48   0.631    -5.139289    8.470323
     jasdan  |  -10.02874   3.564536    -2.81   0.005    -17.02279   -3.034691
      morbi  |   2.624096   3.581509     0.73   0.464    -4.403257    9.651449
       muli  |   2.405402   3.120642     0.77   0.441    -3.717675    8.528479
  vinchhiya  |   2.408623   3.231937     0.75   0.456    -3.932828    8.750074
             |
       _cons |   123.2544   2.543153    48.47   0.000     118.2644    128.2443
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_U~A |        553    123.6027    28.66569   1.977566   154.4406

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      7.80
       Model |  179478.499         6  29913.0832   Prob > F        =    0.0000
    Residual |  4221421.76     1,101  3834.17053   R-squared       =    0.0408
-------------+----------------------------------   Adj R-squared   =    0.0356
       Total |  4400900.26     1,107  3975.51965   Root MSE        =    61.921

------------------------------------------------------------------------------
distance_DAP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -6.665622   3.724145    -1.79   0.074    -13.97284    .6416008
             |
    block_id |
     halvad  |   1.998666   6.551363     0.31   0.760     -10.8559    14.85323
     jasdan  |  -10.63358   6.733559    -1.58   0.115    -23.84564    2.578479
      morbi  |  -34.90918   6.765621    -5.16   0.000    -48.18415   -21.63421
       muli  |  -13.43689   5.895025    -2.28   0.023    -25.00364   -1.870136
  vinchhiya  |   -24.9141   6.105266    -4.08   0.000    -36.89337   -12.93483
             |
       _cons |   80.51283   4.804124    16.76   0.000     71.08655     89.9391
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_DAP |        553    66.76879    66.92927          0   376.8351

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      8.16
       Model |  204122.211         6  34020.3685   Prob > F        =    0.0000
    Residual |  4588686.73     1,101  4167.74453   R-squared       =    0.0426
-------------+----------------------------------   Adj R-squared   =    0.0374
       Total |  4792808.94     1,107  4329.54737   Root MSE        =    64.558

------------------------------------------------------------------------------
distance_MOP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -6.525917   3.882768    -1.68   0.093    -14.14438    1.092543
             |
    block_id |
     halvad  |   36.88086   6.830406     5.40   0.000     23.47877    50.28294
     jasdan  |   18.87204   7.020362     2.69   0.007     5.097238    32.64684
      morbi  |   6.534866    7.05379     0.93   0.354    -7.305522    20.37525
       muli  |   32.43345   6.146112     5.28   0.000     20.37404    44.49287
  vinchhiya  |   18.12745   6.365308     2.85   0.004     5.637943    30.61695
             |
       _cons |   157.8527   5.008747    31.52   0.000      148.025    167.6805
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_MOP |        553    177.4004    64.50332          0   308.8813

      Source |       SS           df       MS      Number of obs   =     1,108
-------------+----------------------------------   F(6, 1101)      =      4.11
       Model |  1245.59413         6  207.599021   Prob > F        =    0.0004
    Residual |  55568.8435     1,101  50.4712475   R-squared       =    0.0219
-------------+----------------------------------   Adj R-squared   =    0.0166
       Total |  56814.4376     1,107  51.3228885   Root MSE        =    7.1043

------------------------------------------------------------------------------
distance_Z~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -.230108   .4272803    -0.54   0.590    -1.068484    .6082676
             |
    block_id |
     halvad  |   3.483419    .751654     4.63   0.000     2.008583    4.958255
     jasdan  |   .9778612   .7725578     1.27   0.206    -.5379906    2.493713
      morbi  |   .5007365   .7762364     0.65   0.519    -1.022333    2.023806
       muli  |   1.337202   .6763507     1.98   0.048     .0101203    2.664284
  vinchhiya  |   1.534434   .7004721     2.19   0.029     .1600228    2.908845
             |
       _cons |   17.38707    .551189    31.54   0.000     16.30557    18.46857
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_Z~C |        553    18.69384    7.021628          0    24.7105

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,108

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -9.369756   1.958767    -4.78   0.000    -13.20887   -5.530643
             |
    block_id |
     halvad  |   1.665517   3.333555     0.50   0.617    -4.868131    8.199165
     jasdan  |  -10.02874   3.305591    -3.03   0.002    -16.50758   -3.549902
      morbi  |   2.624096   3.386317     0.77   0.438    -4.012963    9.261155
       muli  |   2.405402    3.36742     0.71   0.475    -4.194621    9.005424
  vinchhiya  |   2.408623   2.793941     0.86   0.389    -3.067401    7.884647
             |
       _cons |   123.2544   2.200311    56.02   0.000     118.9418    127.5669
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   6.979568   .0601683   116.00   0.000     6.861641    7.097496
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -6.665622   3.733427    -1.79   0.074    -13.98301     .651761
             |
    block_id |
     halvad  |   1.998666   7.252707     0.28   0.783    -12.21638    16.21371
     jasdan  |  -10.63358   7.378329    -1.44   0.150    -25.09484    3.827681
      morbi  |  -34.90918   6.027387    -5.79   0.000    -46.72264   -23.09572
       muli  |  -13.43689   5.895952    -2.28   0.023    -24.99274   -1.881035
  vinchhiya  |   -24.9141   5.481055    -4.55   0.000    -35.65678   -14.17143
             |
       _cons |   80.51283   5.008053    16.08   0.000     70.69722    90.32843
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   8.251708   .0982596    83.98   0.000     8.059123    8.444294
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -6.525917   3.863234    -1.69   0.091    -14.09772    1.045882
             |
    block_id |
     halvad  |   36.88086   6.995521     5.27   0.000     23.16989    50.59183
     jasdan  |   18.87204    7.09111     2.66   0.008     4.973716    32.77036
      morbi  |   6.534866   7.447284     0.88   0.380    -8.061542    21.13127
       muli  |   32.43345   6.425841     5.05   0.000     19.83903    45.02787
  vinchhiya  |   18.12745   6.333523     2.86   0.004      5.71397    30.54092
             |
       _cons |   157.8527   5.204688    30.33   0.000     147.6517    168.0537
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |    8.33513   .0625923   133.17   0.000     8.212452    8.457809
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   -.230108   .4256156    -0.54   0.589    -1.064299    .6040832
             |
    block_id |
     halvad  |   3.483419   .7090572     4.91   0.000     2.093693    4.873146
     jasdan  |   .9778612    .803021     1.22   0.223    -.5960309    2.551753
      morbi  |   .5007365   .8522447     0.59   0.557    -1.169632    2.171105
       muli  |   1.337202   .7275576     1.84   0.066    -.0887846    2.763189
  vinchhiya  |   1.534434   .7299953     2.10   0.036     .1036693    2.965198
             |
       _cons |   17.38707   .5957909    29.18   0.000     16.21934     18.5548
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.921404   .0577008    67.96   0.000     3.808312    4.034495
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/28.6656933215704 + [var2_eg1_mean]trea
> tment/66.92927195807833 + [var3_eg1_mean]treatment/64.50331918794716 + [var4_
> eg1_mean]treatment/7.021627648021832) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |  -.1400996   .0389404    -3.60   0.000    -.2164213   -.0637778
------------------------------------------------------------------------------

. 
. estimates store est3

. estimates restore est3
(results est3 are active now)

. eststo
(est3 stored)

. 
. esttab using "tables/t3/panel_d.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels noconstant b(%9.3fc) scalars("N Observations") sfmt(%9
> .0fc) ///
> mtitles("\makecell[c]{Binary fertilizer \\ use consistent \\ with recommendat
> ion}" "\makecell[c]{Amount of \\ fertilizer \\ applied (kg/ha)}" "\makecell[c
> ]{Distance between \\ suggested \& \\ applied fertilizer}")
(output written to tables/t3/panel_d.tex)

. 
. restore 

. 
. 
end of do-file

. 
. //Table 4 - Fertilizer gap and yields 
. do do/table4.do 

. use "$final_data", clear 

. 
. // Create a t4 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t4/"

. if _rc mkdir "tables/t4/"

. 
. generate productivity_2017 = . //We will replace this variable in each regres
> sion so all 2017 values of the dependent variable appear in one row 
(1,516 missing values generated)

. label var productivity_2017 "2017 productivity"

. 
. ///////////////////////////////
> // Full sample
. //////////////////////////////
> 
. *****************************************************************************
> ***************************
. * Total amount of fertilizer applied (kg/ha)
. *****************************************************************************
> ***************************
. 
. eststo clear

. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist urea_kg_hectare_ml dap_kg_hectare_ml mop_kg_hectare_ml z
> inc_kg_hectare_ml {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample [Here, intervent
> ion == 3 was control]
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =     43.78
       Model |  7064801.24         6  1177466.87   Prob > F        =    0.0000
    Residual |  38541875.6     1,433  26895.9355   R-squared       =    0.1549
-------------+----------------------------------   Adj R-squared   =    0.1514
       Total |  45606676.8     1,439  31693.3126   Root MSE        =       164

------------------------------------------------------------------------------
urea_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   26.65853   8.645694     3.08   0.002      9.69896    43.61811
             |
    block_id |
     halvad  |   147.0677   14.91803     9.86   0.000     117.8042    176.3312
     jasdan  |   78.14036   15.48613     5.05   0.000     47.76245    108.5183
      morbi  |  -76.25213     15.143    -5.04   0.000     -105.957    -46.5473
       muli  |   36.99495   13.67868     2.70   0.007     10.16256    63.82734
  vinchhiya  |  -29.37522   14.23071    -2.06   0.039    -57.29047   -1.459971
             |
       _cons |   149.8076   10.73929    13.95   0.000     128.7412     170.874
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
urea_kg_he~l |        725    173.4605    160.5139          0   1396.722

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =     16.65
       Model |  942164.745         6  157027.458   Prob > F        =    0.0000
    Residual |  13517308.2     1,433  9432.87382   R-squared       =    0.0652
-------------+----------------------------------   Adj R-squared   =    0.0612
       Total |  14459472.9     1,439  10048.2786   Root MSE        =    97.123

------------------------------------------------------------------------------
dap_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.4165462   5.120101    -0.08   0.935    -10.46024    9.627151
             |
    block_id |
     halvad  |   5.866859   8.834665     0.66   0.507     -11.4634    23.19712
     jasdan  |  -54.01327   9.171102    -5.89   0.000     -72.0035   -36.02305
      morbi  |  -67.61484   8.967897    -7.54   0.000    -85.20645   -50.02323
       muli  |  -14.00695   8.100709    -1.73   0.084    -29.89747    1.883566
  vinchhiya  |  -18.04838   8.427623    -2.14   0.032    -34.58018    -1.51658
             |
       _cons |   138.8806   6.359959    21.84   0.000     126.4048    151.3565
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
dap_kg_hec~l |        725    117.3603    101.4098          0   926.6438

      Source |       SS           df       MS      Number of obs   =     1,438
-------------+----------------------------------   F(6, 1431)      =     29.20
       Model |  354697.026         6   59116.171   Prob > F        =    0.0000
    Residual |  2896853.87     1,431   2024.3563   R-squared       =    0.1091
-------------+----------------------------------   Adj R-squared   =    0.1054
       Total |   3251550.9     1,437  2262.73549   Root MSE        =    44.993

------------------------------------------------------------------------------
mop_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   17.57063   2.373614     7.40   0.000     12.91449    22.22677
             |
    block_id |
     halvad  |   37.79962   4.106741     9.20   0.000     29.74374     45.8555
     jasdan  |   7.802153   4.245042     1.84   0.066    -.5250204    16.12933
      morbi  |  -1.048498   4.157687    -0.25   0.801    -9.204313    7.107317
       muli  |   8.425815   3.756281     2.24   0.025     1.057407    15.79422
  vinchhiya  |  -1.039032   3.907555    -0.27   0.790    -8.704182    6.626118
             |
       _cons |   -2.33818   2.949409    -0.79   0.428    -8.123808    3.447449
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
mop_kg_hec~l |        726    5.743369    24.61608          0   227.8956

      Source |       SS           df       MS      Number of obs   =     1,434
-------------+----------------------------------   F(6, 1427)      =     10.79
       Model |  4920.15856         6  820.026427   Prob > F        =    0.0000
    Residual |   108453.72     1,427  76.0012051   R-squared       =    0.0434
-------------+----------------------------------   Adj R-squared   =    0.0394
       Total |  113373.878     1,433  79.1164538   Root MSE        =    8.7179

------------------------------------------------------------------------------
zinc_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |    .680877   .4605396     1.48   0.140    -.2225302    1.584284
             |
    block_id |
     halvad  |   1.084876   .7980751     1.36   0.174    -.4806504    2.650402
     jasdan  |  -1.184533   .8237552    -1.44   0.151    -2.800434    .4313685
      morbi  |  -1.178571   .8068545    -1.46   0.144    -2.761319    .4041772
       muli  |    3.56838   .7297878     4.89   0.000     2.136808    4.999952
  vinchhiya  |  -1.168667   .7584682    -1.54   0.124    -2.656499    .3191654
             |
       _cons |   .9699475    .573352     1.69   0.091    -.1547558    2.094651
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
zinc_kg_he~l |        722    1.346049      9.5614          0   154.4406

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,441

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   26.65853   8.639932     3.09   0.002     9.724577    43.59249
             |
    block_id |
     halvad  |   147.0677   16.91808     8.69   0.000     113.9089    180.2265
     jasdan  |   78.14036   17.52381     4.46   0.000     43.79432    112.4864
      morbi  |  -76.25213   10.69644    -7.13   0.000    -97.21677   -55.28749
       muli  |   36.99495   12.77671     2.90   0.004     11.95305    62.03685
  vinchhiya  |  -29.37522   11.29833    -2.60   0.009    -51.51954   -7.230897
             |
       _cons |   149.8076   9.198725    16.29   0.000     131.7784    167.8367
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.19973   .0970575   105.09   0.000      10.0095    10.38996
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -.4165462   5.107671    -0.08   0.935     -10.4274    9.594305
             |
    block_id |
     halvad  |   5.866859   10.66821     0.55   0.582    -15.04245    26.77617
     jasdan  |  -54.01327   9.881987    -5.47   0.000    -73.38161   -34.64494
      morbi  |  -67.61484     6.8824    -9.82   0.000     -81.1041   -54.12558
       muli  |  -14.00695   7.735506    -1.81   0.070    -29.16827     1.15436
  vinchhiya  |  -18.04838    8.55607    -2.11   0.035    -34.81797   -1.278793
             |
       _cons |   138.8806   6.821664    20.36   0.000     125.5104    152.2508
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.151956   .0837017   109.34   0.000     8.987904    9.316008
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   17.57063   2.388449     7.36   0.000     12.88936     22.2519
             |
    block_id |
     halvad  |   37.79962   5.916125     6.39   0.000     26.20423    49.39501
     jasdan  |   7.802153   3.582829     2.18   0.029     .7799373    14.82437
      morbi  |  -1.048498   2.464737    -0.43   0.671    -5.879293    3.782297
       muli  |   8.425815   2.831685     2.98   0.003     2.875815    13.97581
  vinchhiya  |  -1.039032   2.376971    -0.44   0.662     -5.69781    3.619747
             |
       _cons |   -2.33818   1.702627    -1.37   0.170    -5.675267    .9989074
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   7.613007   .2325602    32.74   0.000     7.157197    8.068817
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |    .680877   .4599708     1.48   0.139    -.2206492    1.582403
             |
    block_id |
     halvad  |   1.084876   1.021485     1.06   0.288    -.9171981     3.08695
     jasdan  |  -1.184533   .4545094    -2.61   0.009    -2.075355   -.2937105
      morbi  |  -1.178571    .450606    -2.62   0.009    -2.061743   -.2953996
       muli  |    3.56838   .8960135     3.98   0.000     1.812226    5.324534
  vinchhiya  |  -1.168667    .460995    -2.54   0.011    -2.072201   -.2651333
             |
       _cons |   .9699475   .4764216     2.04   0.042     .0361783    1.903717
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.330749   .2774835    15.61   0.000     3.786892    4.874607
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/160.5138909760149 + [var2_eg1_mean]tre
> atment/101.4098287545101 + [var3_eg1_mean]treatment/24.61607544603226 + [var4
> _eg1_mean]treatment/9.5613995003044) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2367432   .0405728     5.84   0.000     .1572219    .3162644
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Fertilizer gap (all doses)
> *****************************************************************************
> *****/
. 
. * Full sample 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_urea distance_dap distance_mop distance_zinc {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample 
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =     24.02
       Model |  3236668.57         6  539444.762   Prob > F        =    0.0000
    Residual |  32185295.7     1,433  22460.0807   R-squared       =    0.0914
-------------+----------------------------------   Adj R-squared   =    0.0876
       Total |  35421964.3     1,439  24615.6805   Root MSE        =    149.87

------------------------------------------------------------------------------
distance_u~a |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -16.6086   7.900638    -2.10   0.036    -32.10666   -1.110547
             |
    block_id |
     halvad  |  -22.25166   13.63244    -1.63   0.103    -48.99335    4.490024
     jasdan  |  -46.91024   14.15159    -3.31   0.001    -74.67029   -19.15019
      morbi  |  -94.59506   13.83803    -6.84   0.000      -121.74   -67.45009
       muli  |   19.43815    12.4999     1.56   0.120    -5.081921    43.95822
  vinchhiya  |   55.08766   13.00435     4.24   0.000     29.57805    80.59727
             |
       _cons |   297.8411   9.813818    30.35   0.000     278.5901    317.0921
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_u~a |        725    289.5079     159.257   1.544316   623.9401

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =      5.79
       Model |  163212.026         6  27202.0043   Prob > F        =    0.0000
    Residual |  6734102.17     1,433  4699.30368   R-squared       =    0.0237
-------------+----------------------------------   Adj R-squared   =    0.0196
       Total |   6897314.2     1,439  4793.13009   Root MSE        =    68.551

------------------------------------------------------------------------------
distance_dap |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -2.33421   3.613876    -0.65   0.518    -9.423264    4.754845
             |
    block_id |
     halvad  |   4.764507   6.235695     0.76   0.445    -7.467562    16.99658
     jasdan  |  -4.721337   6.473159    -0.73   0.466    -17.41922    7.976546
      morbi  |  -24.52583   6.329733    -3.87   0.000    -36.94236   -12.10929
       muli  |  -20.06122   5.717652    -3.51   0.000    -31.27708   -8.845351
  vinchhiya  |  -2.805436   5.948396    -0.47   0.637    -14.47393    8.863061
             |
       _cons |   89.81116   4.488995    20.01   0.000     81.00546    98.61687
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_dap |        725    81.82912    70.80357          0   381.3654

      Source |       SS           df       MS      Number of obs   =     1,438
-------------+----------------------------------   F(6, 1431)      =     52.69
       Model |  2112732.73         6  352122.121   Prob > F        =    0.0000
    Residual |   9562972.5     1,431  6682.72013   R-squared       =    0.1810
-------------+----------------------------------   Adj R-squared   =    0.1775
       Total |  11675705.2     1,437  8125.05583   Root MSE        =    81.748

------------------------------------------------------------------------------
distance_mop |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -12.36728    4.31264    -2.87   0.004    -20.82706    -3.90751
             |
    block_id |
     halvad  |   37.25368   7.461574     4.99   0.000     22.61688    51.89047
     jasdan  |   1.546718   7.712855     0.20   0.841      -13.583    16.67643
      morbi  |  -85.19751   7.554139   -11.28   0.000    -100.0159   -70.37913
       muli  |   21.74626   6.824821     3.19   0.001     8.358534    35.13399
  vinchhiya  |   23.40056   7.099671     3.30   0.001     9.473684    37.32744
             |
       _cons |   134.4615   5.358807    25.09   0.000     123.9496    144.9735
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_mop |        726    137.1758    90.54805          0    247.105

      Source |       SS           df       MS      Number of obs   =     1,434
-------------+----------------------------------   F(6, 1427)      =     56.76
       Model |  26767.6869         6  4461.28115   Prob > F        =    0.0000
    Residual |  112165.897     1,427  78.6025904   R-squared       =    0.1927
-------------+----------------------------------   Adj R-squared   =    0.1893
       Total |  138933.583     1,433  96.9529542   Root MSE        =    8.8658

------------------------------------------------------------------------------
distance_z~c |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.5226051    .468355    -1.12   0.265    -1.441343     .396133
             |
    block_id |
     halvad  |   5.920867   .8116185     7.30   0.000     4.328774     7.51296
     jasdan  |  -.4106954   .8377344    -0.49   0.624    -2.054019    1.232628
      morbi  |  -9.472524   .8205469   -11.54   0.000    -11.08213   -7.862916
       muli  |   .3499559   .7421724     0.47   0.637     -1.10591    1.805822
  vinchhiya  |    1.84012   .7713395     2.39   0.017     .3270393    3.353201
             |
       _cons |   14.14743   .5830819    24.26   0.000     13.00364    15.29122
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_z~c |        722    14.04887    9.778953          0   27.27423

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,441

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   -16.6086   7.891512    -2.10   0.035    -32.07568   -1.141524
             |
    block_id |
     halvad  |  -22.25166   12.96485    -1.72   0.086     -47.6623    3.158977
     jasdan  |  -46.91024    14.1093    -3.32   0.001    -74.56396   -19.25652
      morbi  |  -94.59506   12.83063    -7.37   0.000    -119.7426   -69.44749
       muli  |   19.43815   13.01903     1.49   0.135    -6.078686    44.95499
  vinchhiya  |   55.08766   14.14448     3.89   0.000     27.36498    82.81034
             |
       _cons |   297.8411   10.19132    29.22   0.000     277.8665    317.8158
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.01949   .0311975   321.16   0.000     9.958349    10.08064
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   -2.33421   3.604652    -0.65   0.517    -9.399197    4.730778
             |
    block_id |
     halvad  |   4.764507   7.084782     0.67   0.501    -9.121411    18.65042
     jasdan  |  -4.721337   6.958917    -0.68   0.497    -18.36056     8.91789
      morbi  |  -24.52583   5.519757    -4.44   0.000    -35.34435    -13.7073
       muli  |  -20.06122   5.966969    -3.36   0.001    -31.75626   -8.366173
  vinchhiya  |  -2.805436   6.381362    -0.44   0.660    -15.31268    9.701803
             |
       _cons |   89.81116   5.125169    17.52   0.000     79.76602    99.85631
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |    8.45517   .0621441   136.06   0.000     8.333369     8.57697
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -12.36728   4.308313    -2.87   0.004    -20.81142   -3.923146
             |
    block_id |
     halvad  |   37.25368   6.918369     5.38   0.000     23.69392    50.81343
     jasdan  |   1.546718   8.298917     0.19   0.852    -14.71886     17.8123
      morbi  |  -85.19751   7.488802   -11.38   0.000    -99.87529   -70.51973
       muli  |   21.74626   7.179724     3.03   0.002      7.67426    35.81826
  vinchhiya  |   23.40056   7.049579     3.32   0.001     9.583642    37.21748
             |
       _cons |   134.4615   5.541188    24.27   0.000      123.601    145.3221
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |    8.80728   .0306917   286.96   0.000     8.747126    8.867435
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |  -.5226051   .4675967    -1.12   0.264    -1.439078    .3938676
             |
    block_id |
     halvad  |   5.920867   .7317828     8.09   0.000     4.486599    7.355135
     jasdan  |  -.4106954   .9062584    -0.45   0.650    -2.186929    1.365538
      morbi  |  -9.472524   .8238314   -11.50   0.000     -11.0872   -7.857844
       muli  |   .3499559   .8042865     0.44   0.663    -1.226417    1.926328
  vinchhiya  |    1.84012   .7901508     2.33   0.020     .2914533    3.388787
             |
       _cons |   14.14743   .6223768    22.73   0.000     12.92759    15.36726
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.364405   .0290825   150.07   0.000     4.307404    4.421405
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/159.2569576937425 + [var2_eg1_mean]tre
> atment/70.80356771801497 + [var3_eg1_mean]treatment/90.54804752610318 + [var4
> _eg1_mean]treatment/9.778952847431347) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |    -.08182   .0313174    -2.61   0.009     -.143201    -.020439
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. /****************************************************************************
> ******
> YIELDS
> *****************************************************************************
> *****/
. 
. replace productivity_2017 = yield_hectare_2017_merged
(1,495 real changes made)

. summarize yield_hectare_2018_merged if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. eststo: regress yield_hectare_2018_merged treatment productivity_2017 i.block
> _id, robust

Linear regression                               Number of obs     =      1,362
                                                F(7, 1354)        =      71.25
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2688
                                                Root MSE          =     742.89

------------------------------------------------------------------------------
             |               Robust
yie~8_merged |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .9913866   40.27592     0.02   0.980    -78.01859    80.00137
product~2017 |   .2474467   .0218196    11.34   0.000     .2046428    .2902507
             |
    block_id |
     halvad  |   574.8399   84.69287     6.79   0.000     408.6965    740.9834
     jasdan  |  -131.8016   77.29795    -1.71   0.088    -283.4383    19.83518
      morbi  |  -632.6076   61.30472   -10.32   0.000    -752.8701    -512.345
       muli  |  -40.24113    71.5019    -0.56   0.574    -180.5077    100.0254
  vinchhiya  |    -455.69   62.73382    -7.26   0.000    -578.7561    -332.624
             |
       _cons |   595.7209   67.81976     8.78   0.000     462.6777    728.7641
------------------------------------------------------------------------------
(est3 stored)

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  952.787

. 
. esttab using "tables/t4/panel_a.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> noconstant indicate("Block FE = *block*") b(%9.3fc) ///
> mtitles("\makecell[c]{Total fertilizer \\ applied (kg/ha)}" "\makecell[c]{Dis
> tance between \\ suggested \& \\ applied fertilizer (kg/ha)}" "\makecell[c]{C
> otton yield (kg/ha)}")
(output written to tables/t4/panel_a.tex)

. 
. 
. ////////////////////////////////////////////
> // Farmer-reported yield sample 
. ////////////////////////////////////////////
> 
. preserve 

. 
. keep if fr_yield_sample == 1
(175 observations deleted)

. 
. *****************************************************************************
> ***************************
. * Total amount of fertilizer applied (kg/ha)
. *****************************************************************************
> ***************************
. 
. eststo clear

. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist urea_kg_hectare_ml dap_kg_hectare_ml mop_kg_hectare_ml z
> inc_kg_hectare_ml {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample [Here, intervent
> ion == 3 was control]
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,330
-------------+----------------------------------   F(6, 1323)      =     41.48
       Model |  6853284.57         6   1142214.1   Prob > F        =    0.0000
    Residual |  36431458.9     1,323   27537.006   R-squared       =    0.1583
-------------+----------------------------------   Adj R-squared   =    0.1545
       Total |  43284743.5     1,329  32569.4082   Root MSE        =    165.94

------------------------------------------------------------------------------
urea_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   26.33143   9.102067     2.89   0.004     8.475371    44.18749
             |
    block_id |
     halvad  |   154.6149    15.9409     9.70   0.000     123.3427    185.8871
     jasdan  |   80.11953   16.52151     4.85   0.000     47.70833    112.5307
      morbi  |  -76.47995   16.15278    -4.73   0.000    -108.1678   -44.79209
       muli  |   40.13624   14.41603     2.78   0.005     11.85547      68.417
  vinchhiya  |  -28.74469   15.03949    -1.91   0.056    -58.24855    .7591654
             |
       _cons |   152.0283   11.57192    13.14   0.000     129.3269    174.7296
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
urea_kg_he~l |        670    178.1797    162.8443          0   1396.722

      Source |       SS           df       MS      Number of obs   =     1,330
-------------+----------------------------------   F(6, 1323)      =     14.81
       Model |  825318.395         6  137553.066   Prob > F        =    0.0000
    Residual |  12283895.7     1,323  9284.87959   R-squared       =    0.0630
-------------+----------------------------------   Adj R-squared   =    0.0587
       Total |  13109214.1     1,329  9863.96847   Root MSE        =    96.358

------------------------------------------------------------------------------
dap_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .4947941   5.285302     0.09   0.925    -9.873693    10.86328
             |
    block_id |
     halvad  |   10.16386    9.25641     1.10   0.272    -7.994983     28.3227
     jasdan  |  -48.18964   9.593551    -5.02   0.000    -67.00987   -29.36941
      morbi  |   -65.5266   9.379446    -6.99   0.000    -83.92681   -47.12639
       muli  |  -10.97005   8.370961    -1.31   0.190    -27.39186    5.451751
  vinchhiya  |  -15.18631    8.73299    -1.74   0.082    -32.31833    1.945712
             |
       _cons |   137.2509   6.719475    20.43   0.000     124.0689    150.4329
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
dap_kg_hec~l |        670    118.3533    98.44058          0   627.1535

      Source |       SS           df       MS      Number of obs   =     1,328
-------------+----------------------------------   F(6, 1321)      =     24.62
       Model |  314906.527         6  52484.4211   Prob > F        =    0.0000
    Residual |  2816398.59     1,321  2132.02013   R-squared       =    0.1006
-------------+----------------------------------   Adj R-squared   =    0.0965
       Total |  3131305.12     1,327  2359.68736   Root MSE        =    46.174

------------------------------------------------------------------------------
mop_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   18.07061   2.534679     7.13   0.000     13.09818    23.04305
             |
    block_id |
     halvad  |   36.51327   4.452484     8.20   0.000     27.77856    45.24798
     jasdan  |   8.855191   4.593239     1.93   0.054    -.1556478    17.86603
      morbi  |  -1.188323   4.498508    -0.26   0.792    -10.01332    7.636677
       muli  |   8.373152   4.015726     2.09   0.037     .4952561    16.25105
  vinchhiya  |  -1.549695   4.189024    -0.37   0.711    -9.767562    6.668172
             |
       _cons |  -2.092978    3.22384    -0.65   0.516    -8.417382    4.231426
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
mop_kg_hec~l |        671    5.908617    25.14255          0   227.8956

      Source |       SS           df       MS      Number of obs   =     1,324
-------------+----------------------------------   F(6, 1317)      =      9.78
       Model |  4727.89779         6  787.982966   Prob > F        =    0.0000
    Residual |   106062.43     1,317  80.5333561   R-squared       =    0.0427
-------------+----------------------------------   Adj R-squared   =    0.0383
       Total |  110790.328     1,323  83.7417444   Root MSE        =     8.974

------------------------------------------------------------------------------
zinc_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .7130541   .4933107     1.45   0.149    -.2547066    1.680815
             |
    block_id |
     halvad  |   .9823068   .8681278     1.13   0.258    -.7207575    2.685371
     jasdan  |  -1.284308   .8942509    -1.44   0.151     -3.03862    .4700035
      morbi  |  -1.276088    .875872    -1.46   0.145    -2.994345     .442169
       muli  |   3.496621   .7828496     4.47   0.000     1.960853    5.032389
  vinchhiya  |  -1.285659   .8158387    -1.58   0.115    -2.886144    .3148265
             |
       _cons |   1.071626   .6288944     1.70   0.089    -.1621179     2.30537
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
zinc_kg_he~l |        667    1.405981    9.874215          0   154.4406

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,331

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   26.33143   9.120994     2.89   0.004     8.454609    44.20825
             |
    block_id |
     halvad  |   154.6149   18.13605     8.53   0.000     119.0689    190.1609
     jasdan  |   80.11953   18.67637     4.29   0.000     43.51451    116.7246
      morbi  |  -76.47995   11.46563    -6.67   0.000    -98.95218   -54.00772
       muli  |   40.13624   13.27797     3.02   0.003     14.11189    66.16058
  vinchhiya  |  -28.74469   11.95636    -2.40   0.016    -52.17872   -5.310664
             |
       _cons |   152.0283   9.826144    15.47   0.000     132.7694    171.2871
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.22329   .1009571   101.26   0.000     10.02541    10.42116
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .4947941   5.283137     0.09   0.925    -9.859965    10.84955
             |
    block_id |
     halvad  |   10.16386   11.10496     0.92   0.360    -11.60147    31.92919
     jasdan  |  -48.18964   10.17004    -4.74   0.000    -68.12255   -28.25673
      morbi  |   -65.5266   6.673672    -9.82   0.000    -78.60676   -52.44645
       muli  |  -10.97005    7.53168    -1.46   0.145    -25.73188    3.791767
  vinchhiya  |  -15.18631   8.475676    -1.79   0.073    -31.79833    1.425713
             |
       _cons |   137.2509   6.368295    21.55   0.000     124.7693    149.7325
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.136143   .0765115   119.41   0.000     8.986183    9.286102
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   18.07061   2.569635     7.03   0.000     13.03422      23.107
             |
    block_id |
     halvad  |   36.51327   6.434969     5.67   0.000     23.90096    49.12558
     jasdan  |   8.855191   3.935136     2.25   0.024     1.142466    16.56792
      morbi  |  -1.188323   2.706732    -0.44   0.661    -6.493421    4.116776
       muli  |   8.373152   3.006831     2.78   0.005     2.479872    14.26643
  vinchhiya  |  -1.549695   2.574162    -0.60   0.547    -6.594959    3.495569
             |
       _cons |  -2.092978   1.914219    -1.09   0.274    -5.844778    1.658822
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   7.664825   .2391364    32.05   0.000     7.196126    8.133524
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .7130541   .4899534     1.46   0.146    -.2472369    1.673345
             |
    block_id |
     halvad  |   .9823068   1.115526     0.88   0.379    -1.204085    3.168698
     jasdan  |  -1.284308   .5112334    -2.51   0.012    -2.286307   -.2823091
      morbi  |  -1.276088   .5071899    -2.52   0.012    -2.270162   -.2820139
       muli  |   3.496621   .9398411     3.72   0.000     1.654566    5.338676
  vinchhiya  |  -1.285659   .5177205    -2.48   0.013    -2.300372   -.2709454
             |
       _cons |   1.071626   .5376836     1.99   0.046     .0177857    2.125467
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.388671   .2831884    15.50   0.000     3.833632     4.94371
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/162.8442941086921 + [var2_eg1_mean]tre
> atment/98.440583426158 + [var3_eg1_mean]treatment/25.14254697113668 + [var4_e
> g1_mean]treatment/9.874215454865771) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2394159    .042761     5.60   0.000     .1556058    .3232259
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Fertilizer gap (all doses)
> *****************************************************************************
> *****/
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_urea distance_dap distance_mop distance_zinc {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample 
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,330
-------------+----------------------------------   F(6, 1323)      =     21.26
       Model |  2905682.52         6  484280.419   Prob > F        =    0.0000
    Residual |  30132347.7     1,323   22775.773   R-squared       =    0.0879
-------------+----------------------------------   Adj R-squared   =    0.0838
       Total |  33038030.2     1,329  24859.3154   Root MSE        =    150.92

------------------------------------------------------------------------------
distance_u~a |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -13.87013   8.277863    -1.68   0.094     -30.1093    2.369037
             |
    block_id |
     halvad  |   -27.9441   14.49743    -1.93   0.054    -56.38456    .4963609
     jasdan  |  -48.51063   15.02546    -3.23   0.001    -77.98696    -19.0343
      morbi  |  -92.46252   14.69013    -6.29   0.000     -121.281   -63.64403
       muli  |   21.79482   13.11064     1.66   0.097    -3.925087    47.51472
  vinchhiya  |   52.21991   13.67765     3.82   0.000     25.38767    79.05216
             |
       _cons |   296.4135   10.52407    28.17   0.000     275.7678    317.0592
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_u~a |        670    287.5152    158.9228   1.544316   623.9401

      Source |       SS           df       MS      Number of obs   =     1,330
-------------+----------------------------------   F(6, 1323)      =      6.04
       Model |  172382.286         6  28730.3809   Prob > F        =    0.0000
    Residual |  6296315.98     1,323  4759.12016   R-squared       =    0.0266
-------------+----------------------------------   Adj R-squared   =    0.0222
       Total |  6468698.26     1,329  4867.34256   Root MSE        =    68.986

------------------------------------------------------------------------------
distance_dap |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -2.856079   3.783946    -0.75   0.451    -10.27927     4.56711
             |
    block_id |
     halvad  |   7.455413   6.627013     1.13   0.261    -5.545187    20.45601
     jasdan  |  -2.708963   6.868385    -0.39   0.693    -16.18308    10.76515
      morbi  |   -24.6531   6.715098    -3.67   0.000     -37.8265    -11.4797
       muli  |  -20.14049   5.993086    -3.36   0.001    -31.89748   -8.383504
  vinchhiya  |  -2.013075   6.252276    -0.32   0.748    -14.27853    10.25238
             |
       _cons |   89.91402   4.810725    18.69   0.000     80.47654     99.3515
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_dap |        670    82.45102     71.0015          0   381.3654

      Source |       SS           df       MS      Number of obs   =     1,328
-------------+----------------------------------   F(6, 1321)      =     48.06
       Model |  1911860.52         6   318643.42   Prob > F        =    0.0000
    Residual |  8757740.18     1,321  6629.62921   R-squared       =    0.1792
-------------+----------------------------------   Adj R-squared   =    0.1755
       Total |  10669600.7     1,327  8040.39239   Root MSE        =    81.423

------------------------------------------------------------------------------
distance_mop |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -11.41843   4.469634    -2.55   0.011    -20.18679   -2.650074
             |
    block_id |
     halvad  |   35.43848   7.851477     4.51   0.000     20.03575     50.8412
     jasdan  |  -2.047775   8.099682    -0.25   0.800    -17.93742    13.84187
      morbi  |  -86.17482   7.932635   -10.86   0.000    -101.7368   -70.61288
       muli  |    22.8596   7.081301     3.23   0.001     8.967782    36.75143
  vinchhiya  |   19.44775   7.386894     2.63   0.009     4.956429    33.93908
             |
       _cons |   136.6541   5.684894    24.04   0.000     125.5017    147.8065
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_mop |        671    138.2297     90.0031          0    247.105

      Source |       SS           df       MS      Number of obs   =     1,324
-------------+----------------------------------   F(6, 1317)      =     50.96
       Model |  23831.0842         6  3971.84736   Prob > F        =    0.0000
    Residual |  102643.414     1,317  77.9372922   R-squared       =    0.1884
-------------+----------------------------------   Adj R-squared   =    0.1847
       Total |  126474.498     1,323  95.5967483   Root MSE        =    8.8282

------------------------------------------------------------------------------
distance_z~c |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.4636153   .4852945    -0.96   0.340     -1.41565    .4884193
             |
    block_id |
     halvad  |   5.742085   .8540207     6.72   0.000     4.066696    7.417475
     jasdan  |  -.7000508   .8797193    -0.80   0.426    -2.425855    1.025753
      morbi  |  -9.534748   .8616392   -11.07   0.000    -11.22508   -7.844412
       muli  |   .3456975   .7701283     0.45   0.654    -1.165115     1.85651
  vinchhiya  |   1.413653   .8025814     1.76   0.078     -.160825     2.98813
             |
       _cons |   14.36948   .6186748    23.23   0.000     13.15579    15.58318
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_z~c |        667    14.11709     9.70746          0   27.27423

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,331

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -13.87013   8.264236    -1.68   0.093    -30.06774    2.327473
             |
    block_id |
     halvad  |   -27.9441   13.69579    -2.04   0.041    -54.78735   -1.100846
     jasdan  |  -48.51063   14.94071    -3.25   0.001    -77.79389   -19.22737
      morbi  |  -92.46252   13.52869    -6.83   0.000    -118.9783   -65.94678
       muli  |   21.79482   13.56993     1.61   0.108    -4.801761    48.39139
  vinchhiya  |   52.21991   14.86219     3.51   0.000     23.09056    81.34926
             |
       _cons |   296.4135   10.83078    27.37   0.000     275.1856    317.6414
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.03345    .032274   310.88   0.000     9.970197    10.09671
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -2.856079   3.779081    -0.76   0.450    -10.26294    4.550783
             |
    block_id |
     halvad  |   7.455413   7.516713     0.99   0.321    -7.277074     22.1879
     jasdan  |  -2.708963   7.354292    -0.37   0.713    -17.12311    11.70518
      morbi  |   -24.6531    5.74079    -4.29   0.000    -35.90484   -13.40136
       muli  |  -20.14049   6.155765    -3.27   0.001    -32.20557   -8.075414
  vinchhiya  |  -2.013075   6.631889    -0.30   0.761    -15.01134    10.98519
             |
       _cons |   89.91402   5.312487    16.93   0.000     79.50173    100.3263
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   8.467818   .0640942   132.12   0.000     8.342196     8.59344
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -11.41843   4.462409    -2.56   0.011    -20.16459   -2.672269
             |
    block_id |
     halvad  |   35.43848   7.295101     4.86   0.000     21.14034    49.73661
     jasdan  |  -2.047775    8.69761    -0.24   0.814    -19.09478    14.99923
      morbi  |  -86.17482   7.916559   -10.89   0.000     -101.691   -70.65865
       muli  |    22.8596   7.328101     3.12   0.002      8.49679    37.22242
  vinchhiya  |   19.44775   7.350721     2.65   0.008     5.040604     33.8549
             |
       _cons |   136.6541   5.820669    23.48   0.000     125.2458    148.0624
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   8.799304   .0325398   270.42   0.000     8.735527    8.863081
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |  -.4636153   .4842922    -0.96   0.338    -1.412811    .4855801
             |
    block_id |
     halvad  |   5.742085   .7656711     7.50   0.000     4.241397    7.242773
     jasdan  |  -.7000508   .9498727    -0.74   0.461    -2.561767    1.161665
      morbi  |  -9.534748   .8697683   -10.96   0.000    -11.23946   -7.830033
       muli  |   .3456975   .8270677     0.42   0.676    -1.275325     1.96672
  vinchhiya  |   1.413653   .8246626     1.71   0.086    -.2026564    3.029962
             |
       _cons |   14.36948   .6557704    21.91   0.000      13.0842    15.65477
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.355905   .0304536   143.03   0.000     4.296217    4.415592
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/158.9228479436341 + [var2_eg1_mean]tre
> atment/71.00149751235901 + [var3_eg1_mean]treatment/90.00310182475765 + [var4
> _eg1_mean]treatment/9.707459548754686) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |  -.0755318   .0326344    -2.31   0.021    -.1394941   -.0115695
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. /****************************************************************************
> ******
> YIELDS
> *****************************************************************************
> *****/
. 
. replace productivity_2017 = yield_hectare_2017_merged
(0 real changes made)

. summarize yield_hectare_2018_merged if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. eststo: regress yield_hectare_2018_merged treatment productivity_2017 i.block
> _id, robust

Linear regression                               Number of obs     =      1,337
                                                F(7, 1329)        =      70.68
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2719
                                                Root MSE          =     741.51

------------------------------------------------------------------------------
             |               Robust
yie~8_merged |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   4.697415   40.55984     0.12   0.908    -74.87087     84.2657
product~2017 |   .2475103   .0219506    11.28   0.000     .2044487    .2905719
             |
    block_id |
     halvad  |   584.1347   85.00985     6.87   0.000     417.3665    750.9028
     jasdan  |  -123.2558   79.12581    -1.56   0.120    -278.4809    31.96926
      morbi  |  -627.6748   61.73294   -10.17   0.000    -748.7795   -506.5702
       muli  |  -42.91166   72.20414    -0.59   0.552    -184.5582    98.73486
  vinchhiya  |  -450.6099   63.30691    -7.12   0.000    -574.8022   -326.4175
             |
       _cons |   588.8422   68.52426     8.59   0.000     454.4147    723.2697
------------------------------------------------------------------------------
(est3 stored)

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  952.293

. 
. esttab using "tables/t4/panel_b.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> noconstant indicate("Block FE = *block*") b(%9.3fc) ///
> mtitles("\makecell[c]{Total fertilizer \\ applied (kg/ha)}" "\makecell[c]{Dis
> tance between \\ suggested \& \\ applied fertilizer (kg/ha)}" "\makecell[c]{C
> otton yield (kg/ha)}")
(output written to tables/t4/panel_b.tex)

. 
. restore 

. 
. ////////////////////////////////////////////
> // Satellite yield sample 
. ////////////////////////////////////////////
> 
. preserve 

. 
. keep if satellite_yield_sample == 1
(190 observations deleted)

. 
. *****************************************************************************
> ***************************
. * Total amount of fertilizer applied (kg/ha)
. *****************************************************************************
> ***************************
. 
. eststo clear

. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist urea_kg_hectare_ml dap_kg_hectare_ml mop_kg_hectare_ml z
> inc_kg_hectare_ml {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample [Here, intervent
> ion == 3 was control]
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,293
-------------+----------------------------------   F(6, 1286)      =     39.90
       Model |   6327083.2         6  1054513.87   Prob > F        =    0.0000
    Residual |  33990021.7     1,286    26430.81   R-squared       =    0.1569
-------------+----------------------------------   Adj R-squared   =    0.1530
       Total |  40317104.9     1,292  31205.1896   Root MSE        =    162.58

------------------------------------------------------------------------------
urea_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   26.16295   9.049884     2.89   0.004     8.408792    43.91711
             |
    block_id |
     halvad  |   142.7651    16.0356     8.90   0.000     111.3063    174.2239
     jasdan  |   80.10558   16.32627     4.91   0.000     48.07654    112.1346
      morbi  |    -83.733   16.68258    -5.02   0.000    -116.4611   -51.00494
       muli  |   36.69985   14.46165     2.54   0.011     8.328834    65.07086
  vinchhiya  |  -30.89439   15.01497    -2.06   0.040    -60.35091   -1.437878
             |
       _cons |   153.0548   11.76732    13.01   0.000     129.9696    176.1401
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
urea_kg_he~l |        657    175.7528    162.6752          0   1396.722

      Source |       SS           df       MS      Number of obs   =     1,293
-------------+----------------------------------   F(6, 1286)      =     13.27
       Model |  739239.595         6  123206.599   Prob > F        =    0.0000
    Residual |  11943560.4     1,286  9287.37199   R-squared       =    0.0583
-------------+----------------------------------   Adj R-squared   =    0.0539
       Total |    12682800     1,292  9816.40865   Root MSE        =    96.371

------------------------------------------------------------------------------
dap_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .2614189   5.364561     0.05   0.961    -10.26283    10.78567
             |
    block_id |
     halvad  |     11.226   9.505532     1.18   0.238    -7.422053    29.87405
     jasdan  |  -48.25535   9.677832    -4.99   0.000    -67.24142   -29.26927
      morbi  |  -62.19213   9.889047    -6.29   0.000    -81.59256   -42.79169
       muli  |  -10.78275    8.57253    -1.26   0.209    -27.60043    6.034925
  vinchhiya  |  -13.92994   8.900523    -1.57   0.118    -31.39108    3.531194
             |
       _cons |   135.4259   6.975393    19.41   0.000     121.7415    149.1103
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
dap_kg_hec~l |        657     117.439    98.73686          0   627.1535

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(6, 1284)      =     24.97
       Model |  325281.407         6  54213.5678   Prob > F        =    0.0000
    Residual |  2788012.47     1,284  2171.34928   R-squared       =    0.1045
-------------+----------------------------------   Adj R-squared   =    0.1003
       Total |  3113293.88     1,290  2413.40611   Root MSE        =    46.598

------------------------------------------------------------------------------
mop_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   18.17619   2.595999     7.00   0.000     13.08332    23.26905
             |
    block_id |
     halvad  |   37.64123   4.614187     8.16   0.000     28.58905     46.6934
     jasdan  |   7.343953   4.676803     1.57   0.117    -1.831062    16.51897
      morbi  |  -1.836086    4.78602    -0.38   0.701    -11.22536    7.553191
       muli  |   7.654531   4.150247     1.84   0.065    -.4874785    15.79654
  vinchhiya  |  -2.180183   4.308629    -0.51   0.613    -10.63291    6.272542
             |
       _cons |  -1.469566   3.377383    -0.44   0.664    -8.095362    5.156229
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
mop_kg_hec~l |        658    6.186693    25.68007          0   227.8956

      Source |       SS           df       MS      Number of obs   =     1,288
-------------+----------------------------------   F(6, 1281)      =     13.24
       Model |  4974.77787         6  829.129645   Prob > F        =    0.0000
    Residual |  80242.3291     1,281  62.6403818   R-squared       =    0.0584
-------------+----------------------------------   Adj R-squared   =    0.0540
       Total |   85217.107     1,287  66.2137584   Root MSE        =    7.9146

------------------------------------------------------------------------------
zinc_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .8709443   .4413807     1.97   0.049     .0050359    1.736853
             |
    block_id |
     halvad  |   .5595644   .7855918     0.71   0.476    -.9816234    2.100752
     jasdan  |  -1.135985   .7951612    -1.43   0.153    -2.695947    .4239758
      morbi  |  -1.120082   .8136582    -1.38   0.169    -2.716331    .4761675
       muli  |   3.792492   .7063398     5.37   0.000     2.406782    5.178202
  vinchhiya  |  -1.112059   .7326739    -1.52   0.129    -2.549431    .3253138
             |
       _cons |   .8236167   .5744515     1.43   0.152    -.3033523    1.950586
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
zinc_kg_he~l |        655    1.243234    8.046919          0   123.1816

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,294

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   26.16295   9.061923     2.89   0.004     8.401907    43.92399
             |
    block_id |
     halvad  |   142.7651   16.97094     8.41   0.000     109.5027    176.0276
     jasdan  |   80.10558   18.70784     4.28   0.000     43.43888    116.7723
      morbi  |    -83.733   11.99983    -6.98   0.000    -107.2522   -60.21376
       muli  |   36.69985   13.63826     2.69   0.007     9.969351    63.43034
  vinchhiya  |  -30.89439   12.28922    -2.51   0.012    -54.98083   -6.807958
             |
       _cons |   153.0548   10.22912    14.96   0.000     133.0061    173.1035
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.18229   .0857129   118.80   0.000     10.01429    10.35028
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .2614189   5.366597     0.05   0.961    -10.25692    10.77976
             |
    block_id |
     halvad  |     11.226    11.2586     1.00   0.319    -10.84045    33.29245
     jasdan  |  -48.25535   10.00201    -4.82   0.000    -67.85893   -28.65176
      morbi  |  -62.19213   6.863034    -9.06   0.000    -75.64343   -48.74083
       muli  |  -10.78275   7.582193    -1.42   0.155    -25.64358    4.078073
  vinchhiya  |  -13.92994   8.478407    -1.64   0.100    -30.54732    2.687428
             |
       _cons |   135.4259   6.563312    20.63   0.000     122.5621    148.2898
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.136411   .0779437   117.22   0.000     8.983644    9.289178
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   18.17619   2.640033     6.88   0.000     13.00182    23.35056
             |
    block_id |
     halvad  |   37.64123    6.61533     5.69   0.000     24.67542    50.60703
     jasdan  |   7.343953   3.905244     1.88   0.060    -.3101848    14.99809
      morbi  |  -1.836086   2.867905    -0.64   0.522    -7.457076    3.784904
       muli  |   7.654531   3.091131     2.48   0.013     1.596025    13.71304
  vinchhiya  |  -2.180183   2.658536    -0.82   0.412    -7.390819    3.030452
             |
       _cons |  -1.469566   2.032126    -0.72   0.470     -5.45246    2.513327
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   7.683104   .2403623    31.96   0.000     7.212003    8.154206
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .8709443    .440905     1.98   0.048     .0067864    1.735102
             |
    block_id |
     halvad  |   .5595644   .7873462     0.71   0.477    -.9836058    2.102735
     jasdan  |  -1.135985    .469994    -2.42   0.016    -2.057157   -.2148141
      morbi  |  -1.120082   .4662623    -2.40   0.016    -2.033939   -.2062242
       muli  |   3.792492   .9247408     4.10   0.000     1.980034    5.604951
  vinchhiya  |  -1.112059   .4779691    -2.33   0.020    -2.048861   -.1752566
             |
       _cons |   .8236167   .5121863     1.61   0.108    -.1802501    1.827484
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |    4.13741    .235535    17.57   0.000      3.67577     4.59905
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/162.6752299831736 + [var2_eg1_mean]tre
> atment/98.73685617239337 + [var3_eg1_mean]treatment/25.68006640911749 + [var4
> _eg1_mean]treatment/8.046918834558269) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2448759   .0444309     5.51   0.000     .1577929     .331959
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Fertilizer gap (all doses)
> *****************************************************************************
> *****/
. 
. * Full sample 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_urea distance_dap distance_mop distance_zinc {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample 
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,293
-------------+----------------------------------   F(6, 1286)      =     19.82
       Model |  2697955.94         6  449659.324   Prob > F        =    0.0000
    Residual |  29176714.7     1,286  22687.9585   R-squared       =    0.0846
-------------+----------------------------------   Adj R-squared   =    0.0804
       Total |  31874670.6     1,292  24670.7977   Root MSE        =    150.63

------------------------------------------------------------------------------
distance_u~a |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -15.43373   8.384661    -1.84   0.066    -31.88284    1.015385
             |
    block_id |
     halvad  |  -22.28567   14.85688    -1.50   0.134    -51.43206    6.860715
     jasdan  |  -42.53077   15.12618    -2.81   0.005    -72.20548   -12.85607
      morbi  |  -81.16982   15.45631    -5.25   0.000    -111.4922   -50.84748
       muli  |   29.18087   13.39863     2.18   0.030     2.895301    55.46643
  vinchhiya  |   59.75618   13.91127     4.30   0.000     32.46491    87.04746
             |
       _cons |   289.3091   10.90235    26.54   0.000     267.9207    310.6974
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_u~a |        657    287.5067    159.2248   1.544316   623.9401

      Source |       SS           df       MS      Number of obs   =     1,293
-------------+----------------------------------   F(6, 1286)      =      5.40
       Model |  152410.124         6  25401.6874   Prob > F        =    0.0000
    Residual |  6053640.44     1,286  4707.34093   R-squared       =    0.0246
-------------+----------------------------------   Adj R-squared   =    0.0200
       Total |  6206050.56     1,292  4803.44471   Root MSE        =     68.61

------------------------------------------------------------------------------
distance_dap |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |    -3.3537   3.819228    -0.88   0.380     -10.8463    4.138902
             |
    block_id |
     halvad  |   7.745319   6.767338     1.14   0.253    -5.530914    21.02155
     jasdan  |  -2.688657   6.890004    -0.39   0.696    -16.20554    10.82822
      morbi  |  -22.77143   7.040376    -3.23   0.001    -36.58331   -8.959544
       muli  |  -19.60354   6.103099    -3.21   0.001    -31.57667   -7.630421
  vinchhiya  |  -1.820215   6.336609    -0.29   0.774    -14.25144    10.61101
             |
       _cons |   89.78033   4.966039    18.08   0.000     80.03791    99.52276
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_dap |        657     82.7837    71.50379          0   381.3654

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(6, 1284)      =     42.05
       Model |  1714771.49         6  285795.249   Prob > F        =    0.0000
    Residual |  8727058.94     1,284  6796.77487   R-squared       =    0.1642
-------------+----------------------------------   Adj R-squared   =    0.1603
       Total |  10441830.4     1,290   8094.4422   Root MSE        =    82.443

------------------------------------------------------------------------------
distance_mop |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -12.17622   4.592944    -2.65   0.008    -21.18672   -3.165722
             |
    block_id |
     halvad  |   37.70095   8.163601     4.62   0.000     21.68549    53.71641
     jasdan  |     2.0551   8.274384     0.25   0.804     -14.1777     18.2879
      morbi  |  -82.61889   8.467615    -9.76   0.000    -99.23077   -66.00701
       muli  |   25.05194    7.34278     3.41   0.001     10.64677     39.4571
  vinchhiya  |   23.36429   7.622996     3.06   0.002       8.4094    38.31919
             |
       _cons |   132.9614     5.9754    22.25   0.000     121.2388     144.684
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_mop |        658    137.7951    90.68788          0    247.105

      Source |       SS           df       MS      Number of obs   =     1,288
-------------+----------------------------------   F(6, 1281)      =     45.20
       Model |  21490.2979         6  3581.71631   Prob > F        =    0.0000
    Residual |   101503.33     1,281  79.2375724   R-squared       =    0.1747
-------------+----------------------------------   Adj R-squared   =    0.1709
       Total |  122993.628     1,287  95.5661446   Root MSE        =    8.9015

------------------------------------------------------------------------------
distance_z~c |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.4695863   .4964227    -0.95   0.344    -1.443477    .5043046
             |
    block_id |
     halvad  |   5.912354   .8835585     6.69   0.000     4.178974    7.645735
     jasdan  |  -.3152762   .8943213    -0.35   0.724    -2.069771    1.439219
      morbi  |  -9.212917    .915125   -10.07   0.000    -11.00823   -7.417609
       muli  |   .6778735   .7944235     0.85   0.394    -.8806405    2.236387
  vinchhiya  |   1.784911   .8240416     2.17   0.030     .1682922    3.401531
             |
       _cons |   13.95933   .6460881    21.61   0.000     12.69183    15.22684
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_z~c |        655    14.02862     9.72873          0   27.27423

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,294

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -15.43373   8.367262    -1.84   0.065    -31.83326    .9658021
             |
    block_id |
     halvad  |  -22.28567   13.86985    -1.61   0.108    -49.47008    4.898735
     jasdan  |  -42.53077    15.0614    -2.82   0.005    -72.05057   -13.01097
      morbi  |  -81.16982   14.42476    -5.63   0.000    -109.4418    -52.8978
       muli  |   29.18087   13.82583     2.11   0.035     2.082744    56.27899
  vinchhiya  |   59.75618     15.072     3.96   0.000     30.21561    89.29676
             |
       _cons |   289.3091   11.27404    25.66   0.000     267.2123    311.4058
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.02959   .0323632   309.91   0.000     9.966159    10.09302
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |    -3.3537   3.819223    -0.88   0.380    -10.83924    4.131839
             |
    block_id |
     halvad  |   7.745319   7.682366     1.01   0.313    -7.311842    22.80248
     jasdan  |  -2.688657   7.310085    -0.37   0.713    -17.01616    11.63885
      morbi  |  -22.77143   5.942628    -3.83   0.000    -34.41876   -11.12409
       muli  |  -19.60354   6.219006    -3.15   0.002    -31.79257   -7.414516
  vinchhiya  |  -1.820215   6.688313    -0.27   0.786    -14.92907    11.28864
             |
       _cons |   89.78033   5.528375    16.24   0.000     78.94492    100.6157
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   8.456878   .0647852   130.54   0.000     8.329902    8.583855
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -12.17622   4.575498    -2.66   0.008    -21.14403   -3.208409
             |
    block_id |
     halvad  |   37.70095   7.667428     4.92   0.000     22.67307    52.72883
     jasdan  |     2.0551   8.827595     0.23   0.816    -15.24667    19.35687
      morbi  |  -82.61889    8.43547    -9.79   0.000    -99.15211   -66.08568
       muli  |   25.05194   7.642675     3.28   0.001     10.07257    40.03131
  vinchhiya  |   23.36429   7.606447     3.07   0.002     8.455932    38.27266
             |
       _cons |   132.9614   6.166888    21.56   0.000     120.8745    145.0483
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   8.824203   .0320216   275.57   0.000     8.761442    8.886965
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |  -.4695863    .494642    -0.95   0.342    -1.439067    .4998941
             |
    block_id |
     halvad  |   5.912354   .8057457     7.34   0.000     4.333122    7.491587
     jasdan  |  -.3152762   .9617158    -0.33   0.743    -2.200205    1.569652
      morbi  |  -9.212917   .9192593   -10.02   0.000    -11.01463   -7.411202
       muli  |   .6778735   .8563444     0.79   0.429    -1.000531    2.356278
  vinchhiya  |   1.784911   .8483458     2.10   0.035     .1221842    3.447639
             |
       _cons |   13.95933   .6888989    20.26   0.000     12.60912    15.30955
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.372451   .0301983   144.79   0.000     4.313263    4.431638
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/159.224751740753 + [var2_eg1_mean]trea
> tment/71.50379418081066 + [var3_eg1_mean]treatment/90.68788148164727 + [var4_
> eg1_mean]treatment/9.728729726518138) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |  -.0815915   .0330164    -2.47   0.013    -.1463024   -.0168806
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. /****************************************************************************
> ******
> YIELDS
> *****************************************************************************
> *****/
. 
. * Full sample 
. 
. replace productivity_2017 = yield_hectare_2017_merged
(0 real changes made)

. summarize yield_hectare_2018_merged if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. eststo: regress yield_hectare_2018_merged treatment productivity_2017 i.block
> _id, robust

Linear regression                               Number of obs     =      1,287
                                                F(7, 1279)        =      72.40
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2754
                                                Root MSE          =     742.11

------------------------------------------------------------------------------
             |               Robust
yie~8_merged |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -5.082681   41.39279    -0.12   0.902    -86.28791    76.12254
product~2017 |   .2521634   .0223667    11.27   0.000     .2082841    .2960428
             |
    block_id |
     halvad  |   584.7839   87.78373     6.66   0.000      412.568    756.9999
     jasdan  |   -116.252   80.28366    -1.45   0.148    -273.7542    41.25011
      morbi  |  -637.4679   64.77986    -9.84   0.000    -764.5544   -510.3815
       muli  |  -18.09675   75.00702    -0.24   0.809    -165.2471    129.0536
  vinchhiya  |  -451.8226   66.02833    -6.84   0.000    -581.3583   -322.2869
             |
       _cons |   584.6697   71.82686     8.14   0.000     443.7582    725.5811
------------------------------------------------------------------------------
(est3 stored)

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  961.606

. 
. esttab using "tables/t4/panel_c.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> noconstant indicate("Block FE = *block*") b(%9.3fc) ///
> mtitles("\makecell[c]{Total fertilizer \\ applied (kg/ha)}" "\makecell[c]{Dis
> tance between \\ suggested \& \\ applied fertilizer (kg/ha)}" "\makecell[c]{C
> otton yield (kg/ha)}")
(output written to tables/t4/panel_c.tex)

. 
. restore 

. 
. 
. ////////////////////////////////////////////
> // Intersecting sample 
. ////////////////////////////////////////////
> 
. preserve 

. 
. keep if intersecting_sample == 1
(247 observations deleted)

. 
. *****************************************************************************
> ***************************
. * Total amount of fertilizer applied (kg/ha)
. *****************************************************************************
> ***************************
. 
. eststo clear

. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist urea_kg_hectare_ml dap_kg_hectare_ml mop_kg_hectare_ml z
> inc_kg_hectare_ml {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample [Here, intervent
> ion == 3 was control]
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,259
-------------+----------------------------------   F(6, 1252)      =     40.89
       Model |  6452722.17         6  1075453.69   Prob > F        =    0.0000
    Residual |  32928250.9     1,252  26300.5199   R-squared       =    0.1639
-------------+----------------------------------   Adj R-squared   =    0.1598
       Total |    39380973     1,258  31304.4301   Root MSE        =    162.17

------------------------------------------------------------------------------
urea_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   24.49791   9.145148     2.68   0.007     6.556401    42.43941
             |
    block_id |
     halvad  |   147.7751   16.17838     9.13   0.000     116.0354    179.5148
     jasdan  |   80.82766   16.58858     4.87   0.000     48.28317    113.3721
      morbi  |  -85.19524    16.7929    -5.07   0.000    -118.1406   -52.24991
       muli  |   40.51239   14.60028     2.77   0.006     11.86868     69.1561
  vinchhiya  |  -30.99635   15.10741    -2.05   0.040    -60.63499   -1.357714
             |
       _cons |   155.0604   11.86752    13.07   0.000     131.7779    178.3428
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
urea_kg_he~l |        638    179.1857    163.5402          0   1396.722

      Source |       SS           df       MS      Number of obs   =     1,259
-------------+----------------------------------   F(6, 1252)      =     12.66
       Model |  714581.137         6  119096.856   Prob > F        =    0.0000
    Residual |  11778129.9     1,252    9407.452   R-squared       =    0.0572
-------------+----------------------------------   Adj R-squared   =    0.0527
       Total |    12492711     1,258  9930.61291   Root MSE        =    96.992

------------------------------------------------------------------------------
dap_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1752639   5.469462     0.03   0.974    -10.55506    10.90558
             |
    block_id |
     halvad  |   12.68651   9.675846     1.31   0.190    -6.296152    31.66917
     jasdan  |  -45.61132   9.921173    -4.60   0.000    -65.07528   -26.14736
      morbi  |  -62.06995   10.04337    -6.18   0.000    -81.77365   -42.36625
       muli  |  -9.123391   8.732025    -1.04   0.296    -26.25441    8.007625
  vinchhiya  |  -13.41787   9.035329    -1.49   0.138    -31.14392    4.308187
             |
       _cons |   135.5071    7.09764    19.09   0.000     121.5826    149.4317
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
dap_kg_hec~l |        638    118.5421    99.49043          0   627.1535

      Source |       SS           df       MS      Number of obs   =     1,257
-------------+----------------------------------   F(6, 1250)      =     24.54
       Model |  326168.356         6  54361.3927   Prob > F        =    0.0000
    Residual |  2768928.55     1,250  2215.14284   R-squared       =    0.1054
-------------+----------------------------------   Adj R-squared   =    0.1011
       Total |  3095096.91     1,256  2464.24913   Root MSE        =    47.065

------------------------------------------------------------------------------
mop_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   18.77136   2.656233     7.07   0.000     13.56019    23.98253
             |
    block_id |
     halvad  |   37.73398    4.71409     8.00   0.000     28.48558    46.98238
     jasdan  |   8.341583   4.810997     1.73   0.083    -1.096938     17.7801
      morbi  |  -1.933728   4.878143    -0.40   0.692    -11.50398    7.636523
       muli  |   8.054676   4.242571     1.90   0.058    -.2686705    16.37802
  vinchhiya  |  -2.292847   4.389599    -0.52   0.602    -10.90464    6.318948
             |
       _cons |  -1.712358   3.448891    -0.50   0.620    -8.478611    5.053895
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
mop_kg_hec~l |        639    6.098166    25.63756          0   227.8956

      Source |       SS           df       MS      Number of obs   =     1,254
-------------+----------------------------------   F(6, 1247)      =     13.00
       Model |  4889.77884         6  814.963139   Prob > F        =    0.0000
    Residual |  78183.6019     1,247  62.6973552   R-squared       =    0.0589
-------------+----------------------------------   Adj R-squared   =    0.0543
       Total |  83073.3807     1,253  66.2995856   Root MSE        =    7.9182

------------------------------------------------------------------------------
zinc_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .8968301   .4473787     2.00   0.045     .0191319    1.774528
             |
    block_id |
     halvad  |   .4132236   .7950469     0.52   0.603    -1.146554    1.973001
     jasdan  |  -1.136072   .8102088    -1.40   0.161    -2.725595    .4534507
      morbi  |   -1.14388   .8214706    -1.39   0.164    -2.755497     .467737
       muli  |   3.811319    .715236     5.33   0.000     2.408121    5.214518
  vinchhiya  |  -1.135827   .7393821    -1.54   0.125    -2.586397    .3147434
             |
       _cons |   .8297812   .5810675     1.43   0.154    -.3101967    1.969759
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
zinc_kg_he~l |        636    1.231681     8.07805          0   123.1816

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,260

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   24.49791   9.146401     2.68   0.007     6.571289    42.42452
             |
    block_id |
     halvad  |   147.7751    17.0964     8.64   0.000     114.2668    181.2834
     jasdan  |   80.82766    19.1615     4.22   0.000      43.2718    118.3835
      morbi  |  -85.19524   12.17109    -7.00   0.000    -109.0501   -61.34034
       muli  |   40.51239   13.83181     2.93   0.003     13.40254    67.62224
  vinchhiya  |  -30.99635   12.44116    -2.49   0.013    -55.38057   -6.612136
             |
       _cons |   155.0604    10.3676    14.96   0.000     134.7402    175.3805
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.17734   .0875973   116.18   0.000     10.00566    10.34903
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .1752639    5.46167     0.03   0.974    -10.52941    10.87994
             |
    block_id |
     halvad  |   12.68651    11.4744     1.11   0.269    -9.802896    35.17591
     jasdan  |  -45.61132   10.32186    -4.42   0.000     -65.8418   -25.38084
      morbi  |  -62.06995   6.945353    -8.94   0.000    -75.68259   -48.45731
       muli  |  -9.123391   7.692137    -1.19   0.236     -24.1997     5.95292
  vinchhiya  |  -13.41787   8.571928    -1.57   0.118    -30.21854    3.382801
             |
       _cons |   135.5071   6.653139    20.37   0.000     122.4672     148.547
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.149257   .0784612   116.61   0.000     8.995476    9.303038
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   18.77136   2.691951     6.97   0.000     13.49523    24.04749
             |
    block_id |
     halvad  |   37.73398   6.760977     5.58   0.000     24.48271    50.98525
     jasdan  |   8.341583   4.066162     2.05   0.040     .3720514    16.31111
      morbi  |  -1.933728    2.92283    -0.66   0.508     -7.66237    3.794914
       muli  |   8.054676   3.169278     2.54   0.011     1.843004    14.26635
  vinchhiya  |  -2.292847   2.706382    -0.85   0.397    -7.597258    3.011565
             |
       _cons |  -1.712358   2.076209    -0.82   0.410    -5.781653    2.356937
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   7.703072   .2415414    31.89   0.000      7.22966    8.176485
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .8968301    .445851     2.01   0.044     .0229782    1.770682
             |
    block_id |
     halvad  |   .4132236    .789528     0.52   0.601    -1.134223     1.96067
     jasdan  |  -1.136072   .4794217    -2.37   0.018    -2.075721   -.1964229
      morbi  |   -1.14388   .4747348    -2.41   0.016    -2.074343    -.213417
       muli  |   3.811319   .9432045     4.04   0.000     1.962673    5.659966
  vinchhiya  |  -1.135827   .4865454    -2.33   0.020    -2.089438   -.1822155
             |
       _cons |   .8297812   .5224499     1.59   0.112    -.1942018    1.853764
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.138319   .2411529    17.16   0.000     3.665668     4.61097
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/163.5401648615314 + [var2_eg1_mean]tre
> atment/99.49042867404519 + [var3_eg1_mean]treatment/25.63755576490282 + [var4
> _eg1_mean]treatment/8.078050204714234) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2486905   .0450409     5.52   0.000     .1604119     .336969
------------------------------------------------------------------------------

. 
. estimates store est1

. estimates restore est1
(results est1 are active now)

. eststo
(est1 stored)

. 
. /****************************************************************************
> ******
> Fertilizer gap (all doses)
> *****************************************************************************
> *****/
. 
. * Full sample 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_urea distance_dap distance_mop distance_zinc {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample 
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,259
-------------+----------------------------------   F(6, 1252)      =     19.69
       Model |  2676466.55         6  446077.758   Prob > F        =    0.0000
    Residual |  28363324.7     1,252  22654.4127   R-squared       =    0.0862
-------------+----------------------------------   Adj R-squared   =    0.0818
       Total |  31039791.2     1,258  24673.9199   Root MSE        =    150.51

------------------------------------------------------------------------------
distance_u~a |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -13.95103   8.487601    -1.64   0.100    -30.60252     2.70046
             |
    block_id |
     halvad  |  -25.81566   15.01514    -1.72   0.086    -55.27327    3.641945
     jasdan  |  -42.02555   15.39584    -2.73   0.006    -72.23005   -11.82106
      morbi  |  -81.98954   15.58547    -5.26   0.000    -112.5661   -51.41301
       muli  |   30.58952    13.5505     2.26   0.024     4.005328    57.17372
  vinchhiya  |   59.28818   14.02117     4.23   0.000      31.7806    86.79577
             |
       _cons |   288.8604   11.01424    26.23   0.000      267.252    310.4688
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_u~a |        638    286.8045    158.6538   1.544316   623.9401

      Source |       SS           df       MS      Number of obs   =     1,259
-------------+----------------------------------   F(6, 1252)      =      5.57
       Model |   159531.19         6  26588.5316   Prob > F        =    0.0000
    Residual |  5973583.96     1,252   4771.2332   R-squared       =    0.0260
-------------+----------------------------------   Adj R-squared   =    0.0213
       Total |  6133115.15     1,258  4875.29026   Root MSE        =    69.074

------------------------------------------------------------------------------
distance_dap |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -3.708495   3.895147    -0.95   0.341    -11.35023    3.933241
             |
    block_id |
     halvad  |   8.431696   6.890778     1.22   0.221    -5.087049    21.95044
     jasdan  |  -2.130944   7.065491    -0.30   0.763    -15.99245    11.73056
      morbi  |  -23.10078   7.152517    -3.23   0.001    -37.13302   -9.068534
       muli  |  -20.17382   6.218624    -3.24   0.001    -32.37389   -7.973745
  vinchhiya  |  -1.865343   6.434626    -0.29   0.772    -14.48918    10.75849
             |
       _cons |   90.24587   5.054676    17.85   0.000      80.3293    100.1624
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_dap |        638    83.20356    71.99373          0   381.3654

      Source |       SS           df       MS      Number of obs   =     1,257
-------------+----------------------------------   F(6, 1250)      =     43.13
       Model |  1729567.97         6  288261.328   Prob > F        =    0.0000
    Residual |  8354986.64     1,250  6683.98931   R-squared       =    0.1715
-------------+----------------------------------   Adj R-squared   =    0.1675
       Total |  10084554.6     1,256  8029.10399   Root MSE        =    81.756

------------------------------------------------------------------------------
distance_mop |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -12.30916    4.61406    -2.67   0.008    -21.36132   -3.257003
             |
    block_id |
     halvad  |    37.1643   8.188699     4.54   0.000     21.09919    53.22941
     jasdan  |   1.481486   8.357033     0.18   0.859    -14.91387    17.87684
      morbi  |  -83.51546    8.47367    -9.86   0.000    -100.1396   -66.89127
       muli  |   27.77026   7.369638     3.77   0.000     13.31203    42.22848
  vinchhiya  |   22.71418   7.625035     2.98   0.003     7.754901    37.67346
             |
       _cons |   133.7086    5.99096    22.32   0.000     121.9552    145.4621
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_mop |        639    138.7811    90.17439          0    247.105

      Source |       SS           df       MS      Number of obs   =     1,254
-------------+----------------------------------   F(6, 1247)      =     46.35
       Model |  21689.6599         6  3614.94332   Prob > F        =    0.0000
    Residual |  97251.7867     1,247   77.988602   R-squared       =    0.1824
-------------+----------------------------------   Adj R-squared   =    0.1784
       Total |  118941.447     1,253  94.9253365   Root MSE        =    8.8311

------------------------------------------------------------------------------
distance_z~c |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.5373202   .4989607    -1.08   0.282    -1.516215    .4415748
             |
    block_id |
     halvad  |   6.025893   .8867143     6.80   0.000     4.286276    7.765509
     jasdan  |  -.3212006   .9036243    -0.36   0.722    -2.093992    1.451591
      morbi  |  -9.335261   .9161846   -10.19   0.000    -11.13269   -7.537828
       muli  |   .8298599   .7977013     1.04   0.298    -.7351249    2.394845
  vinchhiya  |   1.733977   .8246315     2.10   0.036     .1161586    3.351795
             |
       _cons |   14.04882   .6480635    21.68   0.000      12.7774    15.32023
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_z~c |        636    14.13677    9.680163          0   27.27423

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,260

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -13.95103   8.467989    -1.65   0.099    -30.54798    2.645924
             |
    block_id |
     halvad  |  -25.81566   13.92947    -1.85   0.064    -53.11692    1.485598
     jasdan  |  -42.02555   15.32025    -2.74   0.006     -72.0527   -11.99841
      morbi  |  -81.98954   14.40076    -5.69   0.000    -110.2145   -53.76457
       muli  |   30.58952   14.00808     2.18   0.029     3.134189    58.04486
  vinchhiya  |   59.28818   15.21731     3.90   0.000      29.4628    89.11357
             |
       _cons |   288.8604    11.3607    25.43   0.000     266.5938    311.1269
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.02811   .0328021   305.72   0.000     9.963819     10.0924
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -3.708495   3.888681    -0.95   0.340    -11.33017     3.91318
             |
    block_id |
     halvad  |   8.431696   7.788024     1.08   0.279     -6.83255    23.69594
     jasdan  |  -2.130944   7.511861    -0.28   0.777    -16.85392    12.59203
      morbi  |  -23.10078   6.007851    -3.85   0.000    -34.87595   -11.32561
       muli  |  -20.17382   6.310013    -3.20   0.001    -32.54122   -7.806421
  vinchhiya  |  -1.865343   6.763778    -0.28   0.783     -15.1221    11.39142
             |
       _cons |   90.24587    5.58654    16.15   0.000     79.29645    101.1953
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |    8.47036   .0653385   129.64   0.000     8.342299    8.598421
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -12.30916     4.5959    -2.68   0.007    -21.31696   -3.301361
             |
    block_id |
     halvad  |    37.1643   7.715987     4.82   0.000     22.04125    52.28736
     jasdan  |   1.481486   8.983147     0.16   0.869    -16.12516    19.08813
      morbi  |  -83.51546    8.48722    -9.84   0.000    -100.1501   -66.88081
       muli  |   27.77026   7.633968     3.64   0.000     12.80795    42.73256
  vinchhiya  |   22.71418   7.643864     2.97   0.003     7.732481    37.69588
             |
       _cons |   133.7086   6.193536    21.59   0.000     121.5695    145.8477
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |    8.80747   .0332128   265.18   0.000     8.742374    8.872566
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |  -.5373202   .4972267    -1.08   0.280    -1.511867    .4372262
             |
    block_id |
     halvad  |   6.025893   .8053013     7.48   0.000     4.447531    7.604254
     jasdan  |  -.3212006   .9785195    -0.33   0.743    -2.239064    1.596662
      morbi  |  -9.335261   .9209852   -10.14   0.000    -11.14036   -7.530163
       muli  |   .8298599   .8593379     0.97   0.334    -.8544115    2.514131
  vinchhiya  |   1.733977   .8533721     2.03   0.042     .0613982    3.406556
             |
       _cons |   14.04882   .6916984    20.31   0.000     12.69311    15.40452
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.356563   .0311077   140.05   0.000     4.295593    4.417533
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/158.6538197106798 + [var2_eg1_mean]tre
> atment/71.9937283382325 + [var3_eg1_mean]treatment/90.17438732290461 + [var4_
> eg1_mean]treatment/9.680163152401054) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |  -.0828641   .0333424    -2.49   0.013    -.1482139   -.0175143
------------------------------------------------------------------------------

. 
. estimates store est2

. estimates restore est2
(results est2 are active now)

. eststo
(est2 stored)

. 
. /****************************************************************************
> ******
> YIELDS
> *****************************************************************************
> *****/
. 
. * Full sample 
. 
. replace productivity_2017 = yield_hectare_2017_merged
(0 real changes made)

. summarize yield_hectare_2018_merged if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. eststo: regress yield_hectare_2018_merged treatment productivity_2017 i.block
> _id, robust

Linear regression                               Number of obs     =      1,265
                                                F(7, 1257)        =      71.86
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2781
                                                Root MSE          =     741.02

------------------------------------------------------------------------------
             |               Robust
yie~8_merged |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -1.132439   41.68353    -0.03   0.978     -82.9094    80.64453
product~2017 |   .2519358   .0224771    11.21   0.000     .2078391    .2960325
             |
    block_id |
     halvad  |   591.3046   88.07438     6.71   0.000     418.5156    764.0936
     jasdan  |  -110.1233     82.095    -1.34   0.180    -271.1817    50.93498
      morbi  |  -635.4787    65.1831    -9.75   0.000    -763.3584    -507.599
       muli  |  -26.24786   75.59972    -0.35   0.729    -174.5634    122.0677
  vinchhiya  |  -449.7382   66.57423    -6.76   0.000    -580.3471   -319.1294
             |
       _cons |   581.2259   72.44941     8.02   0.000     439.0908     723.361
------------------------------------------------------------------------------
(est3 stored)

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  961.211

. 
. esttab using "tables/t4/panel_d.tex", replace se noobs rename(v1 treatment) f
> rag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> noconstant indicate("Block FE = *block*") b(%9.3fc) ///
> mtitles("\makecell[c]{Total fertilizer \\ applied (kg/ha)}" "\makecell[c]{Dis
> tance between \\ suggested \& \\ applied fertilizer (kg/ha)}" "\makecell[c]{C
> otton yield (kg/ha)}")
(output written to tables/t4/panel_d.tex)

. 
. restore 

. 
. 
. 
end of do-file

. 
. //Table 5 - Satellite VIs vs farmer-reported yields 
. do do/table5.do 

. use "$final_data", clear

. 
. // Create a t5 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t5/"

. if _rc mkdir "tables/t5/"

. 
. //Generate farmer reported productivity in metric tons/hectare (to limit lead
> ing 0s)
. 
. generate yield_tons_hectare_2018 = yield_hectare_2018*.001
(225 missing values generated)

. label var yield_tons_hectare_2018 "Yield (metric tons/hectare)"

. 
. //Generate an indicator for fixed-effects singletons, to exclude them from th
> e robustness check regressions 
. replace grid_id = . if missing(yield_hectare_2018, max_re705_2018)
(35 real changes made, 35 to missing)

. duplicates tag grid_id, gen(dup)

Duplicates in terms of grid_id

. generate singleton = cond(dup==0, 1, 0)

. replace singleton = 1 if missing(grid_id)
(226 real changes made)

. drop dup 

. 
. //Define program to return p-values of the actual data with .5km x .5km Grid 
> FE and placebo data with FE 
. capture program drop grid_p 

. program define grid_p, eclass
  1. syntax varname(numeric), [robust]
  2. quietly{
  3. local plcaebo_var = subinstr("`varlist'","max","placebo",.)
  4. if "`robust'" == "robust" {
  5.         areg yield_hectare_2018 `varlist' if singleton==0, absorb(grid_id)
>  vce(robust)
  6.         local p_fe = 2*ttail(e(df_r), _b[`varlist']/_se[`varlist'])
  7. 
.         areg yield_hectare_2018 `plcaebo_var' if singleton==0, absorb(grid_id
> ) vce(robust)
  8.         local p_fe_placebo = 2*ttail(e(df_r), _b[`plcaebo_var']/_se[`plcae
> bo_var'])
  9.         ereturn scalar p_grid_fe_placebo = `p_fe_placebo'
 10.         ereturn scalar p_grid_fe = `p_fe'
 11.         ereturn scalar n_grid_fe = e(N)
 12. }
 13. else {
 14.         areg yield_hectare_2018 `varlist' if singleton==0, absorb(grid_id)
 15.         local p_fe = 2*ttail(e(df_r), _b[`varlist']/_se[`varlist'])
 16. 
.         areg yield_hectare_2018 `plcaebo_var' if singleton==0, absorb(grid_id
> ) 
 17.         local p_fe_placebo = 2*ttail(e(df_r), _b[`plcaebo_var']/_se[`plcae
> bo_var'])
 18.         ereturn scalar p_grid_fe_placebo = `p_fe_placebo'
 19.         ereturn scalar p_grid_fe = `p_fe'
 20.         ereturn scalar n_grid_fe = e(N)
 21. }
 22. }
 23. 
. end

. 
. 
. //Label variables
. label var max_ndvi_2018 "NDVI"

. label var max_gcvi_2018 "GCVI"

. label var max_re705_2018 "reNDVI"

. label var max_mtci_2018 "MTCI"

. label var max_lai_2018 "LAI"

. 
. eststo clear

. 
. grid_p max_ndvi_2018, robust 

. local p_fe = e(p_grid_fe)

. local p_fe_placebo = e(p_grid_fe_placebo)

. local n_grid = e(n_grid_fe)

. 
. regress placebo_ndvi_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     154.23
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1177
                                                Root MSE          =     .11942

------------------------------------------------------------------------------
             |               Robust
placebo_nd~8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .0495328   .0039885    12.42   0.000     .0417082    .0573575
       _cons |   .3665718   .0046531    78.78   0.000     .3574434    .3757003
------------------------------------------------------------------------------

. local placebo = e(r2_a)

. eststo: regress max_ndvi_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     391.98
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2719
                                                Root MSE          =     .14134

------------------------------------------------------------------------------
             |               Robust
max_ndv~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .0980974   .0049548    19.80   0.000     .0883771    .1078178
       _cons |   .3869899    .005985    64.66   0.000     .3752485    .3987313
------------------------------------------------------------------------------
(est1 stored)

. local placebo_r2a: di %9.3fc  `placebo'

. estadd local placebo_r2a `placebo_r2a'

added macro:
        e(placebo_r2a) : "0.117"

. local p_grid_fe: di %9.3fc `p_fe' 

. estadd local p_grid_fe `p_grid_fe'

added macro:
          e(p_grid_fe) : "0.000"

. local p_grid_fe_plcaebo: di %9.3fc `p_fe_placebo' 

. estadd local p_grid_fe_plcaebo `p_grid_fe_plcaebo'

added macro:
  e(p_grid_fe_plcaebo) : "0.610"

. local n_grid_fe: di %9.0fc `n_grid' 

. estadd local n_grid_fe `n_grid_fe'

added macro:
          e(n_grid_fe) : "425"

. 
. grid_p max_gcvi_2018, robust 

. local p_fe = e(p_grid_fe)

. local p_fe_placebo = e(p_grid_fe_placebo)

. local n_grid = e(n_grid_fe)

. 
. regress placebo_gcvi_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     115.53
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0987
                                                Root MSE          =     .68153

------------------------------------------------------------------------------
             |               Robust
placebo_gc~8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |    .256183   .0238348    10.75   0.000     .2094237    .3029424
       _cons |   1.807293   .0249129    72.54   0.000     1.758419    1.856167
------------------------------------------------------------------------------

. local placebo = e(r2_a)

. eststo: regress max_gcvi_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     271.74
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2277
                                                Root MSE          =     .99176

------------------------------------------------------------------------------
             |               Robust
max_gcv~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .6116292   .0371035    16.48   0.000     .5388393    .6844191
       _cons |   1.938405   .0383293    50.57   0.000      1.86321      2.0136
------------------------------------------------------------------------------
(est2 stored)

. local placebo_r2a: di %9.3fc  `placebo'

. estadd local placebo_r2a `placebo_r2a'

added macro:
        e(placebo_r2a) : "0.098"

. local p_grid_fe: di %9.3fc `p_fe' 

. estadd local p_grid_fe `p_grid_fe'

added macro:
          e(p_grid_fe) : "0.000"

. local p_grid_fe_plcaebo: di %9.3fc `p_fe_placebo' 

. estadd local p_grid_fe_plcaebo `p_grid_fe_plcaebo'

added macro:
  e(p_grid_fe_plcaebo) : "0.666"

. local n_grid_fe: di %9.0fc `n_grid' 

. estadd local n_grid_fe `n_grid_fe'

added macro:
          e(n_grid_fe) : "425"

. 
. grid_p max_re705_2018, robust 

. local p_fe = e(p_grid_fe)

. local p_fe_placebo = e(p_grid_fe_placebo)

. local n_grid = e(n_grid_fe)

. 
. regress placebo_re705_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     185.91
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1346
                                                Root MSE          =     .08264

------------------------------------------------------------------------------
             |               Robust
placebo_re~8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .0370156   .0027147    13.64   0.000     .0316898    .0423414
       _cons |   .2266038   .0030907    73.32   0.000     .2205406    .2326671
------------------------------------------------------------------------------

. local placebo = e(r2_a)

. eststo: regress max_re705_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     425.44
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2875
                                                Root MSE          =     .09936

------------------------------------------------------------------------------
             |               Robust
max_re7~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .0716796   .0034752    20.63   0.000      .064862    .0784973
       _cons |   .2409341   .0041304    58.33   0.000      .232831    .2490372
------------------------------------------------------------------------------
(est3 stored)

. local placebo_r2a: di %9.3fc  `placebo'

. estadd local placebo_r2a `placebo_r2a'

added macro:
        e(placebo_r2a) : "0.134"

. local p_grid_fe: di %9.3fc `p_fe' 

. estadd local p_grid_fe `p_grid_fe'

added macro:
          e(p_grid_fe) : "0.000"

. local p_grid_fe_plcaebo: di %9.3fc `p_fe_placebo' 

. estadd local p_grid_fe_plcaebo `p_grid_fe_plcaebo'

added macro:
  e(p_grid_fe_plcaebo) : "0.268"

. local n_grid_fe: di %9.0fc `n_grid' 

. estadd local n_grid_fe `n_grid_fe'

added macro:
          e(n_grid_fe) : "425"

. 
. grid_p max_mtci_2018, robust 

. local p_fe = e(p_grid_fe)

. local p_fe_placebo = e(p_grid_fe_placebo)

. local n_grid = e(n_grid_fe)

. 
. regress placebo_mtci_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     218.10
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1552
                                                Root MSE          =     .43803

------------------------------------------------------------------------------
             |               Robust
placebo_mt~8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |    .213227   .0144383    14.77   0.000     .1849019    .2415522
       _cons |   2.568574   .0174529   147.17   0.000     2.534335    2.602813
------------------------------------------------------------------------------

. local placebo = e(r2_a)

. eststo: regress max_mtci_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     298.14
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2037
                                                Root MSE          =     .62473

------------------------------------------------------------------------------
             |               Robust
max_mtc~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .3587961   .0207795    17.27   0.000     .3180308    .3995615
       _cons |   2.599486   .0256216   101.46   0.000     2.549222    2.649751
------------------------------------------------------------------------------
(est4 stored)

. local placebo_r2a: di %9.3fc  `placebo'

. estadd local placebo_r2a `placebo_r2a'

added macro:
        e(placebo_r2a) : "0.155"

. local p_grid_fe: di %9.3fc `p_fe' 

. estadd local p_grid_fe `p_grid_fe'

added macro:
          e(p_grid_fe) : "0.005"

. local p_grid_fe_plcaebo: di %9.3fc `p_fe_placebo' 

. estadd local p_grid_fe_plcaebo `p_grid_fe_plcaebo'

added macro:
  e(p_grid_fe_plcaebo) : "0.825"

. local n_grid_fe: di %9.0fc `n_grid' 

. estadd local n_grid_fe `n_grid_fe'

added macro:
          e(n_grid_fe) : "425"

. 
. grid_p max_lai_2018, robust 

. local p_fe = e(p_grid_fe)

. local p_fe_placebo = e(p_grid_fe_placebo)

. local n_grid = e(n_grid_fe)

. 
. regress placebo_lai_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =      99.39
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0868
                                                Root MSE          =     .29068

------------------------------------------------------------------------------
             |               Robust
placebo_la~8 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .1017454   .0102059     9.97   0.000     .0817234    .1217674
       _cons |   .6210333   .0107081    58.00   0.000     .6000261    .6420406
------------------------------------------------------------------------------

. local placebo = e(r2_a)

. eststo: regress max_lai_2018 yield_tons_hectare_2018, robust

Linear regression                               Number of obs     =      1,291
                                                F(1, 1289)        =     261.80
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2158
                                                Root MSE          =     .39856

------------------------------------------------------------------------------
             |               Robust
max_lai_2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_t~2018 |   .2374415   .0146747    16.18   0.000     .2086526    .2662303
       _cons |   .6310191   .0148755    42.42   0.000     .6018362     .660202
------------------------------------------------------------------------------
(est5 stored)

. local placebo_r2a: di %9.3fc  `placebo'

. estadd local placebo_r2a `placebo_r2a'

added macro:
        e(placebo_r2a) : "0.086"

. local p_grid_fe: di %9.3fc `p_fe' 

. estadd local p_grid_fe `p_grid_fe'

added macro:
          e(p_grid_fe) : "0.003"

. local p_grid_fe_plcaebo: di %9.3fc `p_fe_placebo' 

. estadd local p_grid_fe_plcaebo `p_grid_fe_plcaebo'

added macro:
  e(p_grid_fe_plcaebo) : "0.487"

. local n_grid_fe: di %9.0fc `n_grid' 

. estadd local n_grid_fe `n_grid_fe'

added macro:
          e(n_grid_fe) : "425"

. 
. esttab using "tables/t5/sat_vs_fr.tex", replace se noobs ///
> not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels frag b(%9.3fc) scalars("N Observations" "r2_a Adjusted
>  \$R^2$" "placebo_r2a Placebo adjusted \$R^2$" "n_grid_fe Observations" "p_gr
> id_fe p-value" "p_grid_fe_plcaebo Placebo p-value") ///
> sfmt(%9.0fc %9.3fc %9.3fc %9.0fc %9.3fc %9.3fc)
(output written to tables/t5/sat_vs_fr.tex)

. 
end of do-file

. 
. //Table 6 - Treatment effect on yields: satellite vs survey data 
. do do/table6.do 

. use "$final_data", clear

. 
. // Create a t6 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t6/"

. if _rc mkdir "tables/t6/"

. 
. eststo clear 

. 
. generate productivity_2017 = . //We will replace this variable in each regres
> sion so all 2017 values of the dependent variable appear in one row 
(1,516 missing values generated)

. label var productivity_2017 "2017 yield"

. 
. 
. *****************************************************************************
. * Convert raw vegetation index values to yield estimates 
. *****************************************************************************
. 
. regress yield_hectare_2017 max_re705_2017 

      Source |       SS           df       MS      Number of obs   =     1,319
-------------+----------------------------------   F(1, 1317)      =    175.78
       Model |   207443992         1   207443992   Prob > F        =    0.0000
    Residual |  1.5542e+09     1,317  1180133.02   R-squared       =    0.1178
-------------+----------------------------------   Adj R-squared   =    0.1171
       Total |  1.7617e+09     1,318  1336630.63   Root MSE        =    1086.3

------------------------------------------------------------------------------
yield_h~2017 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   3332.897   251.3836    13.26   0.000     2839.741    3826.053
       _cons |   619.6624   101.4168     6.11   0.000     420.7063    818.6184
------------------------------------------------------------------------------

. predict sentinel_2017, xb 
(193 missing values generated)

. replace sentinel_2017 = 0 if sentinel_2017 < 0 
(0 real changes made)

. 
. regress yield_hectare_2018 max_re705_2018 

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(1, 1289)      =    520.16
       Model |   287348822         1   287348822   Prob > F        =    0.0000
    Residual |   712068216     1,289  552419.097   R-squared       =    0.2875
-------------+----------------------------------   Adj R-squared   =    0.2870
       Total |   999417038     1,290   774741.89   Root MSE        =    743.25

------------------------------------------------------------------------------
yield_h~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2018 |   4011.132   175.8719    22.81   0.000     3666.105    4356.158
       _cons |  -277.7106   58.34909    -4.76   0.000    -392.1802    -163.241
------------------------------------------------------------------------------

. predict sentinel_2018, xb 
(190 missing values generated)

. replace sentinel_2018 = 0 if sentinel_2018 < 0 
(0 real changes made)

. 
. //////////////////////////////////////////////////////
> //Regression 1 - farmer-reported yield and plot size: full sample and Lee Bou
> nds
. //////////////////////////////////////////////////////
> 
. leebounds yield_hectare_2018_alt treatment, cieffect 

Lee (2009) treatment effect bounds

Number of obs.                     =   1516
Number of selected obs.            =   1341
Trimming porportion                =   0.0211
Effect 95% conf. interval          : [-91.5682  156.3163]

------------------------------------------------------------------------------
yield_~8_alt |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
treatment    |
       lower |  -13.26833   46.91837    -0.28   0.777    -105.2266    78.68997
       upper |   55.66672   60.31062     0.92   0.356    -62.53992    173.8734
------------------------------------------------------------------------------

. local lower: di %9.3f `e(cilower)'

. local upper: di %9.3f `e(ciupper)'

. 
. replace productivity_2017 = yield_hectare_2017_alt
(1,511 real changes made)

. summarize yield_hectare_2018_alt if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. eststo: regress yield_hectare_2018_alt i.treatment productivity_2017 i.block_
> id, robust

Linear regression                               Number of obs     =      1,336
                                                F(7, 1328)        =      69.20
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2490
                                                Root MSE          =      689.6

------------------------------------------------------------------------------
             |               Robust
yield_~8_alt |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |   1.718241   37.72989     0.05   0.964    -72.29845    75.73493
product~2017 |   .2600048   .0236474    11.00   0.000     .2136146    .3063951
             |
    block_id |
     halvad  |    534.119   78.37394     6.82   0.000     380.3687    687.8692
     jasdan  |  -136.0637   73.69957    -1.85   0.065    -280.6439    8.516609
      morbi  |   -602.722   57.57664   -10.47   0.000    -715.6731   -489.7709
       muli  |   -4.06593   67.80741    -0.06   0.952    -137.0872    128.9554
  vinchhiya  |  -406.1756   59.73625    -6.80   0.000    -523.3633   -288.9879
             |
       _cons |   540.4518   65.35765     8.27   0.000     412.2363    668.6673
------------------------------------------------------------------------------
(est1 stored)

. local ci_lower = _b[1.treatment] - invttail(e(df_r),0.025)*_se[1.treatment] /
> / Add 95% confidence interval (no Lee bounds)

. local ci_lower: di %9.3f `ci_lower'

. local ci_upper = _b[1.treatment] + invttail(e(df_r),0.025)*_se[1.treatment] 

. local ci_upper: di %9.3f `ci_upper'

. estadd local confidence_interval "[`ci_lower', `ci_upper']"

added macro:
e(confidence_interval) : "[  -72.298,    75.735]"

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  892.161

. estadd local bounds "[`lower', `upper']" , replace

added macro:
             e(bounds) : "[  -91.568,   156.316]"

. 
. //////////////////////////////////////////////////////
> //Regression 2 - satellite, 2016 control (full sample)
. //////////////////////////////////////////////////////
> 
. label var max_re705_2016 "2016 reNDVI"

. 
. replace productivity_2017 = sentinel_2017
(1,516 real changes made, 193 to missing)

. 
. eststo: regress sentinel_2018 i.treatment productivity_2017 max_re705_2016 i.
> block_id, robust

Linear regression                               Number of obs     =      1,323
                                                F(8, 1314)        =     114.35
                                                Prob > F          =     0.0000
                                                R-squared         =     0.3817
                                                Root MSE          =     375.95

------------------------------------------------------------------------------
             |               Robust
sentine~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -10.00006   20.71741    -0.48   0.629    -50.64288    30.64276
product~2017 |   .1981247    .032333     6.13   0.000     .1346949    .2615546
max_re7~2016 |   1381.861   115.6186    11.95   0.000     1155.043    1608.678
             |
    block_id |
     halvad  |   184.2622   38.62995     4.77   0.000     108.4791    260.0453
     jasdan  |    398.504   41.55486     9.59   0.000     316.9829    480.0251
      morbi  |  -380.1089   33.24905   -11.43   0.000    -445.3359   -314.8819
       muli  |  -60.47666   34.20571    -1.77   0.077    -127.5804    6.627111
  vinchhiya  |   58.28598   36.26222     1.61   0.108     -12.8522    129.4241
             |
       _cons |   71.05276   69.78647     1.02   0.309    -65.85231    207.9578
------------------------------------------------------------------------------
(est2 stored)

. local ci_lower = _b[1.treatment] - invttail(e(df_r),0.025)*_se[1.treatment] /
> / Add 95% confidence interval (no Lee bounds)

. local ci_lower: di %9.3f `ci_lower'

. local ci_upper = _b[1.treatment] + invttail(e(df_r),0.025)*_se[1.treatment] 

. local ci_upper: di %9.3f `ci_upper'

. estadd local confidence_interval "[`ci_lower', `ci_upper']"

added macro:
e(confidence_interval) : "[  -50.643,    30.643]"

. 
. summarize sentinel_2018 if treatment == 0 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
sentine~2018 |        670    955.9662    475.1848   41.35327   2307.012

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  955.966

. estadd local bounds "N/A" , replace

added macro:
             e(bounds) : "N/A"

. 
. //////////////////////////////////////////////////////
> //Regression 3 - farmer-reported yield and plot size 
. //////////////////////////////////////////////////////
> 
. preserve

. 
. // We want to examine the effect of data source on power, so we only keep obs
> ervations that are non-missing for each data type 
. drop if missing(sentinel_2018, sentinel_2017, yield_hectare_2018_alt, yield_h
> ectare_2017_alt)
(255 observations deleted)

. 
. replace productivity_2017 = yield_hectare_2017_alt
(1,261 real changes made)

. summarize yield_hectare_2018_alt if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. eststo: regress yield_hectare_2018_alt i.treatment productivity_2017 i.block_
> id, robust

Linear regression                               Number of obs     =      1,261
                                                F(7, 1253)        =      68.34
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2525
                                                Root MSE          =     686.88

------------------------------------------------------------------------------
             |               Robust
yield_~8_alt |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -4.850357   38.65527    -0.13   0.900    -80.68654    70.98583
product~2017 |   .2605382   .0240762    10.82   0.000     .2133041    .3077724
             |
    block_id |
     halvad  |    549.701   80.77387     6.81   0.000     391.2341     708.168
     jasdan  |  -110.3465   76.45211    -1.44   0.149    -260.3348    39.64178
      morbi  |  -593.3612   60.29794    -9.84   0.000    -711.6572   -475.0651
       muli  |    21.5682   70.72878     0.30   0.760    -117.1917    160.3281
  vinchhiya  |  -389.5717   62.61592    -6.22   0.000    -512.4153   -266.7281
             |
       _cons |   526.3167   67.75009     7.77   0.000     393.4006    659.2328
------------------------------------------------------------------------------
(est3 stored)

. local ci_lower = _b[1.treatment] - invttail(e(df_r),0.025)*_se[1.treatment] /
> / Add 95% confidence interval (no Lee bounds)

. local ci_lower: di %9.3f `ci_lower'

. local ci_upper = _b[1.treatment] + invttail(e(df_r),0.025)*_se[1.treatment] 

. local ci_upper: di %9.3f `ci_upper'

. estadd local confidence_interval "[`ci_lower', `ci_upper']"

added macro:
e(confidence_interval) : "[  -80.687,    70.986]"

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  894.276

. estadd local bounds "N/A" , replace

added macro:
             e(bounds) : "N/A"

. 
. //////////////////////////////////////////////////////
> //Regression 4 - satellite, no 2016 control
. //////////////////////////////////////////////////////
> 
. replace productivity_2017 = sentinel_2017
(1,261 real changes made)

. 
. eststo: regress sentinel_2018 i.treatment productivity_2017 i.block_id, robus
> t 

Linear regression                               Number of obs     =      1,261
                                                F(7, 1253)        =      97.37
                                                Prob > F          =     0.0000
                                                R-squared         =     0.3066
                                                Root MSE          =     395.09

------------------------------------------------------------------------------
             |               Robust
sentine~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |   5.958828   22.24936     0.27   0.789    -37.69128    49.60894
product~2017 |   .3069561   .0331787     9.25   0.000     .2418643     .372048
             |
    block_id |
     halvad  |   214.5089   41.26926     5.20   0.000     133.5444    295.4733
     jasdan  |   469.6612   44.77639    10.49   0.000     381.8162    557.5061
      morbi  |  -361.5765   37.11093    -9.74   0.000    -434.3829   -288.7701
       muli  |  -85.96964   39.29563    -2.19   0.029    -163.0621   -8.877145
  vinchhiya  |   56.29046   39.36647     1.43   0.153    -20.94101    133.5219
             |
       _cons |   336.4763   74.48777     4.52   0.000     190.3418    482.6108
------------------------------------------------------------------------------
(est4 stored)

. local ci_lower = _b[1.treatment] - invttail(e(df_r),0.025)*_se[1.treatment] /
> / Add 95% confidence interval (no Lee bounds)

. local ci_lower: di %9.3f `ci_lower'

. local ci_upper = _b[1.treatment] + invttail(e(df_r),0.025)*_se[1.treatment] 

. local ci_upper: di %9.3f `ci_upper'

. estadd local confidence_interval "[`ci_lower', `ci_upper']"

added macro:
e(confidence_interval) : "[  -37.691,    49.609]"

. 
. summarize sentinel_2018 if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  960.514

. estadd local bounds "N/A" , replace

added macro:
             e(bounds) : "N/A"

. 
. //////////////////////////////////////////////////////
> //Regression 5 - satellite, 2016 control
. //////////////////////////////////////////////////////
> 
. label var max_re705_2016 "2016 reNDVI"

. 
. replace productivity_2017 = sentinel_2017
(0 real changes made)

. 
. eststo: regress sentinel_2018 i.treatment productivity_2017 max_re705_2016 i.
> block_id, robust

Linear regression                               Number of obs     =      1,261
                                                F(8, 1252)        =     121.06
                                                Prob > F          =     0.0000
                                                R-squared         =     0.3936
                                                Root MSE          =     369.63

------------------------------------------------------------------------------
             |               Robust
sentine~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -2.979352   20.87019    -0.14   0.887    -43.92375    37.96505
product~2017 |   .1988823   .0323287     6.15   0.000      .135458    .2623067
max_re7~2016 |    1423.96   115.8528    12.29   0.000     1196.673    1651.247
             |
    block_id |
     halvad  |   206.3252   38.39251     5.37   0.000     131.0044    281.6459
     jasdan  |   401.9464   42.62851     9.43   0.000     318.3152    485.5776
      morbi  |  -396.0197    32.3008   -12.26   0.000    -459.3893     -332.65
       muli  |  -57.62563   34.35527    -1.68   0.094    -125.0259     9.77462
  vinchhiya  |   58.25894   36.63405     1.59   0.112    -13.61196    130.1298
             |
       _cons |   52.60443   70.14086     0.75   0.453    -85.00216     190.211
------------------------------------------------------------------------------
(est5 stored)

. local ci_lower = _b[1.treatment] - invttail(e(df_r),0.025)*_se[1.treatment] /
> / Add 95% confidence interval (no Lee bounds)

. local ci_lower: di %9.3f `ci_lower'

. local ci_upper = _b[1.treatment] + invttail(e(df_r),0.025)*_se[1.treatment] 

. local ci_upper: di %9.3f `ci_upper'

. estadd local confidence_interval "[`ci_lower', `ci_upper']"

added macro:
e(confidence_interval) : "[  -43.924,    37.965]"

. 
. summarize sentinel_2018 if treatment == 0 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
sentine~2018 |        638    960.5136    470.8804   41.35327   2307.012

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  960.514

. estadd local bounds "N/A" , replace

added macro:
             e(bounds) : "N/A"

. 
. restore

. 
. 
. esttab using "tables/t6/sat_vs_fr_yield.tex", replace se noobs ///
> not label tex star(* 0.10 ** 0.05 *** 0.01) noconstant b(%9.3fc) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean" "confidence_interval 95\% CI:" "bounds Lee bounds (95\% CI):
> ") ///
> sfmt(%9.0fc %9.3fc %9.3fc %20g %20g) ///
> frag indicate("Block FE = *block*") ///
> mtitles("\makecell[c]{Reported yield \\ and plot size}" "\makecell[c]{Satelli
> te yield}" "\makecell[c]{Reported yield \\ and plot size}" ///
>         "\makecell[c]{Satellite yield}" "\makecell[c]{Satellite yield}")
(output written to tables/t6/sat_vs_fr_yield.tex)

. 
. 
end of do-file

. 
. //Table 7 - Powers gains from satellite imagery
. do do/table7.do 

. use "$final_data_with_attriters", clear

. 
. // Create a t6 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t7/"

. if _rc mkdir "tables/t7/"

. 
. *****************************************************************************
. * Convert raw vegetation index values to yield estimates 
. *****************************************************************************
. 
. regress yield_hectare_2017 max_re705_2017 

      Source |       SS           df       MS      Number of obs   =     1,382
-------------+----------------------------------   F(1, 1380)      =    197.97
       Model |   229318009         1   229318009   Prob > F        =    0.0000
    Residual |  1.5986e+09     1,380  1158375.06   R-squared       =    0.1255
-------------+----------------------------------   Adj R-squared   =    0.1248
       Total |  1.8279e+09     1,381   1323588.4   Root MSE        =    1076.3

------------------------------------------------------------------------------
yield_h~2017 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   3396.876   241.4267    14.07   0.000     2923.273    3870.479
       _cons |   577.0087   97.17301     5.94   0.000      386.386    767.6315
------------------------------------------------------------------------------

. predict sentinel_2017, xb 
(199 missing values generated)

. replace sentinel_2017 = 0 if sentinel_2017 < 0 
(0 real changes made)

. 
. regress yield_hectare_2018 max_re705_2018 

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(1, 1289)      =    520.16
       Model |   287348822         1   287348822   Prob > F        =    0.0000
    Residual |   712068216     1,289  552419.097   R-squared       =    0.2875
-------------+----------------------------------   Adj R-squared   =    0.2870
       Total |   999417038     1,290   774741.89   Root MSE        =    743.25

------------------------------------------------------------------------------
yield_h~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2018 |   4011.132   175.8719    22.81   0.000     3666.105    4356.158
       _cons |  -277.7106   58.34909    -4.76   0.000    -392.1802    -163.241
------------------------------------------------------------------------------

. predict sentinel_2018, xb 
(196 missing values generated)

. replace sentinel_2018 = 0 if sentinel_2018 < 0 
(0 real changes made)

. 
. //Store the percent of farmers that sowed cotton 
. summarize sowed_cotton 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
sowed_cotton |      1,582    .9563843     .204303          0          1

. local sowed_cotton_share = r(mean)

. 
. // Initiate the output LaTex file 
. cap file close handle

. file open handle using "tables/t7/power.tex", write replace

. 
. file w handle "\begin{tabular}{l} \hline \hline \\[-2mm] \\ \\ \hline Sample 
> size \\ ANCOVA \\ Lee Bounds \\ Multiple pre-intervention years \\ Attrition 
> rate \\ \hline \end{tabular}%" _n

. 
. /////////////////////////////////////////////////////////////////////////////
> //
> // Column (1) farmer-reported, no 2017 control 
. /////////////////////////////////////////////////////////////////////////////
> //
> * Calculate the attrition rate 
. generate missing_yield = cond(missing(yield_hectare_2018_alt), 1, 0)

. assert missing_yield == 1 if sowed_cotton == 0 

. summarize missing_yield

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
missing_yi~d |      1,585    .1539432    .3610082          0          1

. local completion_rate = 1 - r(mean)

. local survey_attrition_rate: di %9.3fc 1 - `completion_rate'

. 
. * Drop observations where the farmer did not sow cotton 
. * This decision was made before treatment, so this shouldn't be considered in
>  differential attrition calculations 
. drop if sowed_cotton == 0 
(69 observations deleted)

. 
. * Store farmer-reported mean, sd, and year-to-year correlation among the cont
> rol group in macros 
. summarize yield_hectare_2018_alt if treatment == 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
yield_~8_alt |        675    892.1609    780.1524          0   3212.365

. local fr_control_mean = r(mean)

. local fr_treatment_mean = 1.05*`fr_control_mean'

. local fr_sd = r(sd)

. regress yield_hectare_2018_alt yield_hectare_2017_alt if treatment == 0

      Source |       SS           df       MS      Number of obs   =       673
-------------+----------------------------------   F(1, 671)       =     43.50
       Model |  24907949.4         1  24907949.4   Prob > F        =    0.0000
    Residual |   384174638       671  572540.444   R-squared       =    0.0609
-------------+----------------------------------   Adj R-squared   =    0.0595
       Total |   409082587       672   608753.85   Root MSE        =    756.66

------------------------------------------------------------------------------
yield_~8_alt |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
yield_~7_alt |   .2136811   .0323967     6.60   0.000     .1500701    .2772922
       _cons |    522.544   62.98686     8.30   0.000     398.8689    646.2191
------------------------------------------------------------------------------

. local fr_r2 = e(r2)

. local fr_corr = `fr_r2'^0.5

. 
. sampsi `fr_control_mean' `fr_treatment_mean', sd1(`fr_sd') p(0.9) 

Estimated sample size for two-sample comparison of means

Test Ho: m1 = m2, where m1 is the mean in population 1
                    and m2 is the mean in population 2
Assumptions:

         alpha =   0.0500  (two-sided)
         power =   0.9000
            m1 =  892.161
            m2 =  936.769
           sd1 =  780.152
           sd2 =  780.152
         n2/n1 =     1.00

Estimated required sample sizes:

            n1 =     6428
            n2 =     6428

. local n_c1_raw = r(N_1) + r(N_2)

. local n_column_1: di %9.0fc ceil((r(N_1) + r(N_2))/(`completion_rate'))

. 
. * Create this column 
. file w handle "\begin{tabular}{c} \hline \hline \\[-2mm] (1) \\ Survey \\ \hl
> ine `n_column_1' \\ NO \\ NO \\ N/A \\ `survey_attrition_rate' \\ \hline \end
> {tabular}%" _n

. 
. ////////////////////////////////////////////////////////////////////////////
> // Column (2) farmer-reported, 2017 control 
. ////////////////////////////////////////////////////////////////////////////
> 
. sampsi `fr_control_mean' `fr_treatment_mean', sd1(`fr_sd') p(0.9) pre(1) r01(
> `fr_corr') method(ancova)

Estimated sample size for two samples with repeated measures
Assumptions:
                                      alpha =   0.0500  (two-sided)
                                      power =   0.9000
                                         m1 =  892.161
                                         m2 =  936.769
                                        sd1 =  780.152
                                        sd2 =  780.152
                                      n2/n1 =     1.00
           number of follow-up measurements =        1
            number of baseline measurements =        1
   correlation between baseline & follow-up =    0.247

Method: ANCOVA
 relative efficiency =    1.065
    adjustment to sd =    0.969
        adjusted sd1 =  756.029

 Estimated required sample sizes:
                  n1 =     6037
                  n2 =     6037

. local n_column_2: di %9.0fc ceil((r(N_1) + r(N_2))/(`completion_rate'))

. 
. *Write the column 
. file w handle "\begin{tabular}{c} \hline \hline \\[-2mm] (2) \\ Survey \\ \hl
> ine `n_column_2' \\ YES \\ NO \\ N/A \\ `survey_attrition_rate' \\ \hline \en
> d{tabular}%" _n

. 
. //////////////////////////////////////////////////////////////////////////
> // Column (3) farmer-reported, 2017 control, Lee Bounds 
. //////////////////////////////////////////////////////////////////////////
> 
. * First, run Lee Bounds 
. * NOTE: Including tight(block_id) increases the CI, so I exclude it
. leebounds yield_hectare_2018_alt treatment, cieffect

Lee (2009) treatment effect bounds

Number of obs.                     =   1516
Number of selected obs.            =   1341
Trimming porportion                =   0.0211
Effect 95% conf. interval          : [-91.5682  156.3163]

------------------------------------------------------------------------------
yield_~8_alt |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
treatment    |
       lower |  -13.26833   46.91837    -0.28   0.777    -105.2266    78.68997
       upper |   55.66672   60.31062     0.92   0.356    -62.53992    173.8734
------------------------------------------------------------------------------

. * Store the size of the confidence interval to a local macro 
. local lee_ci_distance = e(ciupper) - e(cilower)

. 
. * Obtain CI length without correcting for attrition 
. regress yield_hectare_2018_alt treatment i.block_id, robust 

Linear regression                               Number of obs     =      1,341
                                                F(6, 1334)        =      55.62
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1639
                                                Root MSE          =      726.6

------------------------------------------------------------------------------
             |               Robust
yield_~8_alt |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |    9.15254    39.6756     0.23   0.818    -68.68083    86.98591
             |
    block_id |
     halvad  |   444.4552   81.35016     5.46   0.000      284.867    604.0433
     jasdan  |  -169.1272   77.70686    -2.18   0.030    -321.5682   -16.68623
      morbi  |   -648.941   62.24795   -10.43   0.000    -771.0555   -526.8265
       muli  |    -130.73   72.02305    -1.82   0.070    -272.0208    10.56082
  vinchhiya  |  -411.6055   62.91539    -6.54   0.000    -535.0294   -288.1816
             |
       _cons |   1041.551   57.54746    18.10   0.000     928.6578    1154.445
------------------------------------------------------------------------------

. local ci_distance_no_correction = 2*(invttail(e(df_r),0.025)*_se[treatment])

. 
. * Get the ratio of the length of the CI with the Lee Bounds correction to tha
> t without 
. local ratio_ci_lengths = `lee_ci_distance' / `ci_distance_no_correction'

. 
. * Our correction factor is this squared, divided by 1 - attrition rate, since
>  the length of the CI decreases relative to the inverse of the square root of
>  sample size, 
. * and we only expect to get data from 1-attrition rate share of new people we
>  survey. 
. *This is the estimate increase in sample size we would need to obtain CIs of 
> length equal to those observed in our current data without the Lee Bounds cor
> rection once the correction is applied
. 
. local lee_bounds_correction = (`ratio_ci_lengths')^2

. 
. * Hence, the estimated sample size needed to detect an effect with the correc
> tion is this constance times our previous sample size 
. local n_column_3: di %9.0fc ceil((`n_c1_raw' * `lee_bounds_correction')/(`com
> pletion_rate'))

. 
. * Write the column 
. file w handle "\begin{tabular}{c} \hline \hline \\[-2mm] (3) \\ Survey \\ \hl
> ine `n_column_3' \\ NO \\ YES \\ N/A \\ `survey_attrition_rate'  \\\hline \en
> d{tabular}%" _n

. 
. //////////////////////////////////////////////////////////////////////////
> // Column (4) satellite-measured, no 2017 control, survey data completion rat
> e
. //////////////////////////////////////////////////////////////////////////
> 
. * Store control mean, control SD, and 1.05*control mean in local macros 
. summarize sentinel_2018 if treatment == 0

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
sentine~2018 |        670    955.9662    475.1848   41.35327   2307.012

. local control_mean_sentinel = r(mean)

. local sentinel_sd = r(sd) 

. local treatment_mean_sentinel = 1.05 * `control_mean_sentinel'

. 
. sampsi `control_mean_sentinel' `treatment_mean_sentinel', sd1(`sentinel_sd') 
> p(0.9) 

Estimated sample size for two-sample comparison of means

Test Ho: m1 = m2, where m1 is the mean in population 1
                    and m2 is the mean in population 2
Assumptions:

         alpha =   0.0500  (two-sided)
         power =   0.9000
            m1 =  955.966
            m2 =  1003.76
           sd1 =  475.185
           sd2 =  475.185
         n2/n1 =     1.00

Estimated required sample sizes:

            n1 =     2077
            n2 =     2077

. 
. local n_column_4: di %9.0fc ceil((r(N_1) + r(N_2))/(`completion_rate'))  // N
> ote: This intentionally uses the completion and attrition rates from survey d
> ata 

. 
. *Write the column 
. file w handle "\begin{tabular}{c} \hline \hline \\[-2mm] (4) \\ Satellite \\ 
> \hline `n_column_4' \\ NO \\ NO \\ NO \\ `survey_attrition_rate' \\ \hline \e
> nd{tabular}%" _n

. 
. 
. //////////////////////////////////////////////////////////////////////////
> // Column (5) satellite-measured, no 2017 control 
. //////////////////////////////////////////////////////////////////////////
> 
. * Define 1 - attrition rate for satellite imagery as the number of plots we w
> ere able to get imagery for  ON ALL DATS (this is an upper bound) over the nu
> mber of plots that we mapped 
. generate sat_data_2016 = cond(missing(max_re705_2016), 0, 1)

. generate sat_data_2017 = cond(missing(max_re705_2017), 0, 1)

. generate sat_data_2018 = cond(missing(max_re705_2018), 0, 1)

. 
. foreach x in 2016 2017 2018 {
  2.         replace sat_data_`x' = . if map_merge != 3  // The plot was not ma
> pped 
  3.         label var sat_data_`x' "Sentinel-2: `x'"
  4.         label define sat_data_`x' 0 "No data" 1 "Data"
  5.         label val sat_data_`x' sat_data_`x'
  6. }
(190 real changes made, 190 to missing)
(190 real changes made, 190 to missing)
(190 real changes made, 190 to missing)

. 
. generate all_sentinel_data = 1

. foreach x of varlist sat_data_20* {
  2.         replace all_sentinel_data = 0 if `x' != 1 
  3. }
(193 real changes made)
(0 real changes made)
(0 real changes made)

. replace all_sentinel_data = . if map_merge != 3
(190 real changes made, 190 to missing)

. summarize all_sentinel_data 

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
all_sentin~a |      1,326    .9977376    .0475292          0          1

. 
. local sat_completion_rate = r(mean)

. local sat_attrition_rate: di %9.3fc 1 - `sat_completion_rate'

. 
. sampsi `control_mean_sentinel' `treatment_mean_sentinel', sd1(`sentinel_sd') 
> p(0.9) 

Estimated sample size for two-sample comparison of means

Test Ho: m1 = m2, where m1 is the mean in population 1
                    and m2 is the mean in population 2
Assumptions:

         alpha =   0.0500  (two-sided)
         power =   0.9000
            m1 =  955.966
            m2 =  1003.76
           sd1 =  475.185
           sd2 =  475.185
         n2/n1 =     1.00

Estimated required sample sizes:

            n1 =     2077
            n2 =     2077

. 
. local n_column_5: di %9.0fc ceil((r(N_1) + r(N_2))/(`sat_completion_rate'))

. 
. *Write the column 
. file w handle "\begin{tabular}{c} \hline \hline \\[-2mm] (5) \\ Satellite \\ 
> \hline `n_column_5' \\ NO \\ NO \\ NO \\ `sat_attrition_rate' \\ \hline \end{
> tabular}%" _n

. 
. ////////////////////////////////////////////////////////////////////////
> // Column (6) satellite-measured, 2017 control 
. ////////////////////////////////////////////////////////////////////////
> 
. regress max_re705_2018 max_re705_2017 if treatment == 0  // This is equivalen
> t to using yield values since yield is an affine transformation of this value
>  

      Source |       SS           df       MS      Number of obs   =       668
-------------+----------------------------------   F(1, 666)       =     48.20
       Model |  .633538115         1  .633538115   Prob > F        =    0.0000
    Residual |  8.75358604       666  .013143523   R-squared       =    0.0675
-------------+----------------------------------   Adj R-squared   =    0.0661
       Total |  9.38712416       667  .014073649   Root MSE        =    .11465

------------------------------------------------------------------------------
max_re7~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   .2603196   .0374953     6.94   0.000     .1866964    .3339427
       _cons |   .2077063   .0150626    13.79   0.000     .1781305    .2372821
------------------------------------------------------------------------------

. local r_1_lag = (e(r2))^0.5

. 
. sampsi `control_mean_sentinel' `treatment_mean_sentinel', sd1(`sentinel_sd') 
> p(0.9) pre(1) r01(`r_1_lag') method(ancova)

Estimated sample size for two samples with repeated measures
Assumptions:
                                      alpha =   0.0500  (two-sided)
                                      power =   0.9000
                                         m1 =  955.966
                                         m2 =  1003.76
                                        sd1 =  475.185
                                        sd2 =  475.185
                                      n2/n1 =     1.00
           number of follow-up measurements =        1
            number of baseline measurements =        1
   correlation between baseline & follow-up =    0.260

Method: ANCOVA
 relative efficiency =    1.072
    adjustment to sd =    0.966
        adjusted sd1 =  458.870

 Estimated required sample sizes:
                  n1 =     1937
                  n2 =     1937

. 
. local n_column_6: di %9.0fc ceil((r(N_1) + r(N_2))/(`sat_completion_rate'))

. 
. *Write the column 
. file w handle "\begin{tabular}{c} \hline \hline \\[-2mm] (6) \\ Satellite \\ 
> \hline `n_column_6' \\ YES \\ NO \\ NO \\ `sat_attrition_rate' \\ \hline \end
> {tabular}%" _n

. 
. 
. //////////////////////////////////////////////////////////////////////////
> // Column (7) satellite-measured, 2017 control and 2016 control
. //////////////////////////////////////////////////////////////////////////
> 
. regress max_re705_2018 max_re705_2017 max_re705_2016 if treatment == 0  // Th
> is is equivalent to using yield values since yield is an affine transformatio
> n of this value 

      Source |       SS           df       MS      Number of obs   =       668
-------------+----------------------------------   F(2, 665)       =     95.68
       Model |  2.09769503         2  1.04884751   Prob > F        =    0.0000
    Residual |  7.28942913       665  .010961548   R-squared       =    0.2235
-------------+----------------------------------   Adj R-squared   =    0.2211
       Total |  9.38712416       667  .014073649   Root MSE        =     .1047

------------------------------------------------------------------------------
max_re7~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   .1256168    .036171     3.47   0.001     .0545936    .1966399
max_re7~2016 |   .4681201   .0405041    11.56   0.000     .3885887    .5476515
       _cons |   .0968433   .0167699     5.77   0.000     .0639149    .1297717
------------------------------------------------------------------------------

. local r_2_lags = (e(r2))^0.5

. 
. sampsi `control_mean_sentinel' `treatment_mean_sentinel', sd1(`sentinel_sd') 
> p(0.9) pre(1) r01(`r_2_lags') method(ancova)

Estimated sample size for two samples with repeated measures
Assumptions:
                                      alpha =   0.0500  (two-sided)
                                      power =   0.9000
                                         m1 =  955.966
                                         m2 =  1003.76
                                        sd1 =  475.185
                                        sd2 =  475.185
                                      n2/n1 =     1.00
           number of follow-up measurements =        1
            number of baseline measurements =        1
   correlation between baseline & follow-up =    0.473

Method: ANCOVA
 relative efficiency =    1.288
    adjustment to sd =    0.881
        adjusted sd1 =  418.739

 Estimated required sample sizes:
                  n1 =     1613
                  n2 =     1613

. 
. local n_column_7: di %9.0fc ceil((r(N_1) + r(N_2))/(`sat_completion_rate'))

. 
. *Write the column 
. file w handle "\begin{tabular}{c} \hline \hline \\[-2mm] (7) \\ Satellite \\ 
> \hline `n_column_7' \\ YES \\ NO \\ YES \\ `sat_attrition_rate' \\ \hline \en
> d{tabular}" _n

. 
. file close handle

. 
end of do-file

. 
. **********************************************************
. * Appendix A tables 
. **********************************************************
. 
. //Table A1 - Survey completion rates 
. do do/table-a1.do 

. use "$merged_data", clear 

. 
. // Create a t-a1 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-a1/"

. if _rc mkdir "tables/t-a1/"

. 
. // Generate survey completion variables 
. 
. generate missing_map = cond(map_merge==1,1,0)

. label var missing_map "Missing plot map"

. label define missing_map 0 "Plot mapped" 1 "Plot not mapped"

. label val missing_map missing_map

. 
. label var sowed_cotton "Grew cotton"

. label drop sowed_cotton

. label define sowed_cotton 0 "Did not sow cotton" 1 "Sowed cotton"

. label val sowed_cotton sowed_cotton

. 
. generate basal_att = cond(consent_basal == 1, 0, 1)

. label var basal_att "Basal"

. label define basal_att 0 "Completed basal survey" 1 "Attrited"

. label val basal_att basal_att

. 
. generate midline_att = cond(consent_ml == 1, 0, 1)

. label var midline_att "Midline"

. label define midline_att 0 "Completed midline survey" 1 "Attrited"

. label val midline_att midline_att

. 
. generate endline_att = cond(consent_el == 1, 0, 1)

. label var endline_att "Endline"

. label define endline_att 0 "Completed endline survey" 1 "Attrited"

. label val endline_att endline_att

. 
. egen all_complete = rowmax(basal_att midline_att endline_att missing_map)

. replace all_complete = 1-all_complete
(1,586 real changes made)

. label var all_complete "\makecell[c]{All surveys and \\ mapping complete}"

. label define all_complete 0 "Did not complete 1+ surveys" 1 "Completed all su
> rveys"

. label val all_complete all_complete

. 
. label var all_complete "All surveys and mapping complete"

. 
. //Cross-tabulation of survey completion rates
. 
. tabout sowed_cotton basal_att midline_att endline_att missing_map all_complet
> e treatment using "tables/t-a1/attrition-cross-tab.tex", cells(freq col) form
> at(0 1) clab(Number Percent) ///
> replace style(tex) bt h1(\\[-2mm]) cl2(2-3 4-5 6-7) font(bold) ///
> topstr(14cm)  

Table output written to: tables/t-a1/attrition-cross-tab.tex

\\[-2mm]
 & \multicolumn{2}{c}{\textbf{Control}} & \multicolumn{2}{c}{\textbf{Treatment}
> } & \multicolumn{2}{c}{\textbf{Total}} \\
\cmidrule(l{.75em}){2-3} \cmidrule(l{.75em}){4-5}\cmidrule(l{.75em}){6-7}
&Number&Percent&Number&Percent&Number&Percent \\
\midrule
\textbf{Grew cotton}&&&&&& \\
Did not sow cotton&45&5.7&38&4.8&83&5.2 \\
Sowed cotton&745&94.3&754&95.2&1499&94.8 \\
\textbf{Total}&790&100.0&792&100.0&1582&100.0 \\
\midrule
\textbf{Basal}&&&&&& \\
Completed basal survey&707&89.3&729&91.9&1436&90.6 \\
Attrited&85&10.7&64&8.1&149&9.4 \\
\textbf{Total}&792&100.0&793&100.0&1585&100.0 \\
\midrule
\textbf{Midline}&&&&&& \\
Completed midline survey&773&97.6&760&95.8&1533&96.7 \\
Attrited&19&2.4&33&4.2&52&3.3 \\
\textbf{Total}&792&100.0&793&100.0&1585&100.0 \\
\midrule
\textbf{Endline}&&&&&& \\
Completed endline survey&736&92.9&729&91.9&1465&92.4 \\
Attrited&56&7.1&64&8.1&120&7.6 \\
\textbf{Total}&792&100.0&793&100.0&1585&100.0 \\
\midrule
\textbf{Missing plot map}&&&&&& \\
Plot mapped&702&88.6&687&86.6&1389&87.6 \\
Plot not mapped&90&11.4&106&13.4&196&12.4 \\
\textbf{Total}&792&100.0&793&100.0&1585&100.0 \\
\midrule
\textbf{All surveys and mapping complete}&&&&&& \\
Did not complete 1+ surveys&168&21.2&175&22.1&343&21.6 \\
Completed all surveys&624&78.8&618&77.9&1242&78.4 \\
\textbf{Total}&792&100.0&793&100.0&1585&100.0 \\

. 
end of do-file

. 
. //Table A2 - Attrition 
. do do/table-a2.do 

. use "$final_data_with_attriters", clear 

. 
. // Create a t-a2 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-a2/"

. if _rc mkdir "tables/t-a2/"

. 
. // Generate survey completion variables 
. 
. generate missing_map = cond(map_merge==1,1,0)

. label var missing_map "Missing plot map"

. label define missing_map 0 "Plot mapped" 1 "Plot not mapped"

. label val missing_map missing_map

. 
. generate fr_yield_attrition = 1 - fr_yield_sample

. generate satellite_yield_attrition = 1 - satellite_yield_sample

. 
. generate basal_att = cond(consent_basal == 1, 0, 1)

. label var basal_att "Basal"

. label define basal_att 0 "Completed basal survey" 1 "Attrited"

. label val basal_att basal_att

. 
. generate midline_att = cond(consent_ml == 1, 0, 1)

. label var midline_att "Midline"

. label define midline_att 0 "Completed midline survey" 1 "Attrited"

. label val midline_att midline_att

. 
. generate endline_att = cond(consent_el == 1, 0, 1)

. label var endline_att "Endline"

. label define endline_att 0 "Completed endline survey" 1 "Attrited"

. label val endline_att endline_att

. 
. label var pucca_house "Strong house"

. label drop pucca_house

. label define pucca_house 0 "Weak house" 1 "Strong house"

. label val pucca_house pucca_house

. label var literate "Literate"

. generate total_cotton_land_ha = total_cotton_land/6.177625  // Conversion fro
> m bigha to hectares 

. label var total_cotton_land_ha "Total cotton land (2017)" 

. generate sampled_plot_size_ha = sampled_plot_size/6.177625
(1 missing value generated)

. label var sampled_plot_size_ha "Sampled plot size (2017)"

. label var physical_irrigation_bl "Irrigation"

. label define physical_irrigation_bl 0 "No irrigation" 1 "Irrigation"

. label val physical_irrigation_bl physical_irrigation_bl

. label var plough_own "Own plough"

. label define plough_own 0 "Do not own plough" 1 "Own plough"

. label val plough_own plough_own

. label var crop_insurance "Crop insurance"

. label define crop_insurance 0 "No crop insurance" 1 "Crop insurance"

. label val crop_insurance crop_insurance

. label var children "Children"

. label var educated "$>$ median education"

. label define educated 0 "$leq$ median education" 1 "$>$ median education"

. label val educated educated

. label drop soil_test_before

. label define soil_test_before 0 "No soil test" 1 "Soil tested prior to study"

. label val soil_test_before soil_test_before

. replace fertilizer_plot_kg_bigha_1 = 6.177625*fertilizer_plot_kg_bigha_1
(1,559 real changes made, 2 to missing)

. label var fertilizer_plot_kg_bigha_1 "UREA last season (kg/ha)"

. replace fertilizer_plot_kg_bigha_3 = 6.177625*fertilizer_plot_kg_bigha_3
(1,431 real changes made, 1 to missing)

. label var fertilizer_plot_kg_bigha_3 "DAP last season (kg/ha)"

. replace fertilizer_plot_kg_bigha_5 = 6.177625*fertilizer_plot_kg_bigha_5
(116 real changes made, 1 to missing)

. label var fertilizer_plot_kg_bigha_5 "MOP last season (kg/ha)"

. replace fertilizer_plot_kg_bigha_12 = 6.177625*fertilizer_plot_kg_bigha_12
(101 real changes made)

. label var fertilizer_plot_kg_bigha_12 "Zinc last season (kg/ha)"

. 
. foreach x of varlist age_bl literate total_cotton_land_ha sampled_plot_size_h
> a physical_irrigation_bl pucca_house plough_own crop_insurance children educa
> ted soil_test_before ///
> fertilizer_plot_kg_bigha_1 fertilizer_plot_kg_bigha_3 fertilizer_plot_kg_bigh
> a_5 fertilizer_plot_kg_bigha_12 {
  2.         summarize `x', detail 
  3.         replace `x' = r(p50) if missing(`x')
  4. }

                       Age (baseline)
-------------------------------------------------------------
      Percentiles      Smallest
 1%           20             18
 5%           24             18
10%           27             19       Obs               1,585
25%           34             19       Sum of Wgt.       1,585

50%           42                      Mean           42.45489
                        Largest       Std. Dev.      11.75392
75%           50             75
90%           59             75       Variance       138.1547
95%           63             79       Skewness       .2514118
99%           70             80       Kurtosis       2.525575
(0 real changes made)

                          Literate
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,585
25%            1              0       Sum of Wgt.       1,585

50%            1                      Mean           .8347003
                        Largest       Std. Dev.       .371568
75%            1              1
90%            1              1       Variance       .1380628
95%            1              1       Skewness      -1.802125
99%            1              1       Kurtosis       4.247653
(0 real changes made)

                  Total cotton land (2017)
-------------------------------------------------------------
      Percentiles      Smallest
 1%     .4046863       .1618745
 5%      .647498       .1618745
10%     .8093725       .1618745       Obs               1,585
25%     1.294996       .2428118       Sum of Wgt.       1,585

50%     2.428118                      Mean           3.450755
                        Largest       Std. Dev.      3.600232
75%     4.370612       25.89992
90%     6.798729       32.69865       Variance       12.96167
95%     9.631534       50.99047       Skewness       4.880648
99%      15.8637       52.77109       Kurtosis       50.16315
(0 real changes made)

                  Sampled plot size (2017)
-------------------------------------------------------------
      Percentiles      Smallest
 1%      .323749              0
 5%     .4856235       .1618745
10%     .7284353       .1618745       Obs               1,584
25%      .971247       .1618745       Sum of Wgt.       1,584

50%     1.618745                      Mean           2.014147
                        Largest       Std. Dev.      1.582479
75%     2.428118       11.33122
90%     4.046863       15.37808       Variance       2.504239
95%     4.856235       16.18745       Skewness       3.041522
99%     7.284353       19.42494       Kurtosis       21.98193
(1 real change made)

                         Irrigation
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,585
25%            1              0       Sum of Wgt.       1,585

50%            1                      Mean           .8977918
                        Largest       Std. Dev.      .3030175
75%            1              1
90%            1              1       Variance       .0918196
95%            1              1       Skewness      -2.626365
99%            1              1       Kurtosis       7.897795
(0 real changes made)

                        Strong house
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,585
25%            0              0       Sum of Wgt.       1,585

50%            1                      Mean           .6176656
                        Largest       Std. Dev.       .486111
75%            1              1
90%            1              1       Variance       .2363039
95%            1              1       Skewness      -.4842629
99%            1              1       Kurtosis       1.234511
(0 real changes made)

                         Own plough
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,585
25%            0              0       Sum of Wgt.       1,585

50%            0                      Mean           .4233438
                        Largest       Std. Dev.      .4942448
75%            1              1
90%            1              1       Variance        .244278
95%            1              1       Skewness        .310293
99%            1              1       Kurtosis       1.096282
(0 real changes made)

                       Crop insurance
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,541
25%            0              0       Sum of Wgt.       1,541

50%            1                      Mean           .5587281
                        Largest       Std. Dev.      .4967002
75%            1              1
90%            1              1       Variance       .2467111
95%            1              1       Skewness      -.2365498
99%            1              1       Kurtosis       1.055956
(44 real changes made)

                          Children
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            1              0       Obs               1,559
25%            2              0       Sum of Wgt.       1,559

50%            2                      Mean           2.375241
                        Largest       Std. Dev.      1.331336
75%            3              8
90%            4              8       Variance       1.772455
95%            5              8       Skewness       .7340839
99%            7              9       Kurtosis       4.626742
(26 real changes made)

                    $>$ median education
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,398
25%            0              0       Sum of Wgt.       1,398

50%            0                      Mean           .4170243
                        Largest       Std. Dev.      .4932434
75%            1              1
90%            1              1       Variance       .2432891
95%            1              1       Skewness       .3365696
99%            1              1       Kurtosis       1.113279
(187 real changes made)

                 Soil tested prior to study
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,585
25%            0              0       Sum of Wgt.       1,585

50%            0                      Mean           .1324921
                        Largest       Std. Dev.       .339132
75%            0              1
90%            1              1       Variance       .1150105
95%            1              1       Skewness       2.168028
99%            1              1       Kurtosis       5.700346
(0 real changes made)

                  UREA last season (kg/ha)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%     61.77625              0
10%     102.9604              0       Obs               1,582
25%     154.4406              0       Sum of Wgt.       1,582

50%      247.105                      Mean           281.2088
                        Largest       Std. Dev.      331.3833
75%     353.0071       1235.525
90%     475.2019       1235.525       Variance       109814.9
95%     617.7625       1729.735       Skewness       25.30991
99%     864.8675       11583.05       Kurtosis       856.9015
(3 real changes made)

                   DAP last season (kg/ha)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%     30.88812              0       Obs               1,583
25%     82.36833              0       Sum of Wgt.       1,583

50%     123.5525                      Mean           152.5156
                        Largest       Std. Dev.      187.1798
75%     188.7608       686.4028
90%     308.8813       864.8675       Variance       35036.29
95%     308.8813       3861.016       Skewness       17.13907
99%      501.932       5148.021       Kurtosis       418.9564
(2 real changes made)

                   MOP last season (kg/ha)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,583
25%            0              0       Sum of Wgt.       1,583

50%            0                      Mean           5.446635
                        Largest       Std. Dev.      23.82035
75%            0       205.9208
90%            0       216.2169       Variance       567.4089
95%     45.76019        247.105       Skewness        5.60285
99%     132.3777       257.4011       Kurtosis       39.85811
(2 real changes made)

                  Zinc last season (kg/ha)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,582
25%            0              0       Sum of Wgt.       1,582

50%            0                      Mean           1.708428
                        Largest       Std. Dev.      12.09313
75%            0       82.36833
90%            0       82.36833       Variance       146.2438
95%     9.652539       102.9604       Skewness       21.82647
99%     41.18417       386.1016       Kurtosis        654.592
(3 real changes made)

. 
. eststo clear

. 
. eststo: regress basal_att i.treatment##(c.age_bl i.literate c.total_cotton_la
> nd_ha c.sampled_plot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12) i.block_id, robust

Linear regression                               Number of obs     =      1,585
                                                F(36, 1548)       =       3.83
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0357
                                                Root MSE          =     .28998

------------------------------------------------------------------------------
             |               Robust
   basal_att |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -.0440704   .0959606    -0.46   0.646    -.2322968     .144156
      age_bl |  -.0015057   .0010924    -1.38   0.168    -.0036485    .0006372
             |
    literate |
   Literate  |  -.0453585   .0338702    -1.34   0.181    -.1117948    .0210778
total_cott~a |  -.0011296   .0032896    -0.34   0.731    -.0075821     .005323
sampled_p~ha |   .0115244   .0094303     1.22   0.222    -.0069731    .0300219
             |
physical_~bl |
 Irrigation  |    .020554   .0369636     0.56   0.578      -.05195     .093058
             |
 pucca_house |
Strong ho..  |   .0177529   .0232846     0.76   0.446    -.0279198    .0634257
             |
  plough_own |
 Own plough  |  -.0521831     .02391    -2.18   0.029    -.0990826   -.0052837
             |
crop_insur~e |
Crop insu..  |    .023269    .022413     1.04   0.299    -.0206941     .067232
    children |  -.0167503   .0102745    -1.63   0.103    -.0369037    .0034031
             |
    educated |
$>$ media..  |  -.0105965   .0248988    -0.43   0.670    -.0594354    .0382424
             |
soil_test_~e |
Soil test..  |   -.009636   .0301547    -0.32   0.749    -.0687842    .0495123
fertilizer~1 |   .0000761    .000011     6.95   0.000     .0000546    .0000976
fertilizer~3 |  -.0000225   .0000257    -0.87   0.382    -.0000729    .0000279
fertilizer~5 |  -.0001181   .0004606    -0.26   0.798    -.0010216    .0007853
fertilize~12 |  -.0021401   .0008283    -2.58   0.010    -.0037647   -.0005154
             |
   treatment#|
    c.age_bl |
  Treatment  |   .0015554   .0013866     1.12   0.262    -.0011643    .0042751
             |
   treatment#|
    literate |
  Treatment #|
   Literate  |   .0150068   .0464503     0.32   0.747    -.0761054    .1061189
             |
   treatment#|
          c. |
total_cott~a |
  Treatment  |  -.0055694   .0044529    -1.25   0.211    -.0143037     .003165
             |
   treatment#|
          c. |
sampled_p~ha |
  Treatment  |  -.0048889   .0128476    -0.38   0.704    -.0300894    .0203117
             |
   treatment#|
physical_~bl |
  Treatment #|
 Irrigation  |  -.1003608   .0526174    -1.91   0.057    -.2035696     .002848
             |
   treatment#|
 pucca_house |
  Treatment #|
Strong ho..  |  -.0305391   .0319818    -0.95   0.340    -.0932714    .0321931
             |
   treatment#|
  plough_own |
  Treatment #|
 Own plough  |   .0960649   .0312373     3.08   0.002      .034793    .1573368
             |
   treatment#|
crop_insur~e |
  Treatment #|
Crop insu..  |  -.0047687   .0294794    -0.16   0.872    -.0625925     .053055
             |
   treatment#|
  c.children |
  Treatment  |   .0117654   .0135836     0.87   0.387    -.0148788    .0384096
             |
   treatment#|
    educated |
  Treatment #|
$>$ media..  |  -.0124509   .0320739    -0.39   0.698    -.0753637    .0504619
             |
   treatment#|
soil_test_~e |
  Treatment #|
Soil test..  |   .0009018   .0383903     0.02   0.981    -.0744008    .0762043
             |
   treatment#|
          c. |
fertilizer~1 |
  Treatment  |   .0000421    .000079     0.53   0.594    -.0001129     .000197
             |
   treatment#|
          c. |
fertilizer~3 |
  Treatment  |   8.32e-06    .000055     0.15   0.880    -.0000996    .0001163
             |
   treatment#|
          c. |
fertilizer~5 |
  Treatment  |  -.0001231   .0005299    -0.23   0.816    -.0011625    .0009163
             |
   treatment#|
          c. |
fertilize~12 |
  Treatment  |    .001711   .0008555     2.00   0.046      .000033     .003389
             |
    block_id |
     halvad  |   .0152685   .0260977     0.59   0.559     -.035922    .0664591
     jasdan  |   .0212074   .0282564     0.75   0.453    -.0342174    .0766322
      morbi  |   .0156671   .0259273     0.60   0.546    -.0351892    .0665235
       muli  |   .0215122   .0236496     0.91   0.363    -.0248764    .0679007
  vinchhiya  |   .0350196   .0253247     1.38   0.167    -.0146547    .0846938
             |
       _cons |   .1815445   .0764385     2.38   0.018     .0316106    .3314785
------------------------------------------------------------------------------
(est1 stored)

. summarize basal_att if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .107

. testparm i.treatment#(c.age_bl i.literate c.total_cotton_land_ha c.sampled_pl
> ot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own  i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12)

 ( 1)  1.treatment#c.age_bl = 0
 ( 2)  1.treatment#1.literate = 0
 ( 3)  1.treatment#c.total_cotton_land_ha = 0
 ( 4)  1.treatment#c.sampled_plot_size_ha = 0
 ( 5)  1.treatment#1.physical_irrigation_bl = 0
 ( 6)  1.treatment#1.pucca_house = 0
 ( 7)  1.treatment#1.plough_own = 0
 ( 8)  1.treatment#1.crop_insurance = 0
 ( 9)  1.treatment#c.children = 0
 (10)  1.treatment#1.educated = 0
 (11)  1.treatment#1.soil_test_before = 0
 (12)  1.treatment#c.fertilizer_plot_kg_bigha_1 = 0
 (13)  1.treatment#c.fertilizer_plot_kg_bigha_3 = 0
 (14)  1.treatment#c.fertilizer_plot_kg_bigha_5 = 0
 (15)  1.treatment#c.fertilizer_plot_kg_bigha_12 = 0

       F( 15,  1548) =    1.64
            Prob > F =    0.0575

. local jointTest: di %9.3f `r(p)'

. estadd scalar intTest = `jointTest'

added scalar:
            e(intTest) =  .058

. 
. eststo: regress midline_att i.treatment##(c.age_bl i.literate c.total_cotton_
> land_ha c.sampled_plot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12) i.block_id, robust

Linear regression                               Number of obs     =      1,585
                                                F(36, 1548)       =       1.27
                                                Prob > F          =     0.1353
                                                R-squared         =     0.0331
                                                Root MSE          =     .17724

------------------------------------------------------------------------------
             |               Robust
 midline_att |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -.0153543   .0612224    -0.25   0.802    -.1354419    .1047334
      age_bl |  -.0002339   .0005146    -0.45   0.649    -.0012432    .0007754
             |
    literate |
   Literate  |  -.0130219   .0194838    -0.67   0.504    -.0512394    .0251956
total_cott~a |   .0009707   .0023348     0.42   0.678     -.003609    .0055504
sampled_p~ha |   .0042894   .0056456     0.76   0.447    -.0067843    .0153632
             |
physical_~bl |
 Irrigation  |  -.0302717    .026261    -1.15   0.249    -.0817826    .0212392
             |
 pucca_house |
Strong ho..  |   -.009702   .0129148    -0.75   0.453    -.0350344    .0156304
             |
  plough_own |
 Own plough  |  -.0081216   .0126477    -0.64   0.521    -.0329301    .0166869
             |
crop_insur~e |
Crop insu..  |   .0047438   .0109411     0.43   0.665    -.0167171    .0262047
    children |  -.0012033   .0037019    -0.33   0.745    -.0084646    .0060579
             |
    educated |
$>$ media..  |  -.0037151   .0104654    -0.35   0.723     -.024243    .0168128
             |
soil_test_~e |
Soil test..  |   .0014253   .0147494     0.10   0.923    -.0275055    .0303562
fertilizer~1 |  -7.38e-08   7.46e-06    -0.01   0.992    -.0000147    .0000146
fertilizer~3 |   .0000141   .0000222     0.63   0.526    -.0000295    .0000576
fertilizer~5 |  -.0000455   .0000699    -0.65   0.515    -.0001826    .0000916
fertilize~12 |  -.0000666   .0003578    -0.19   0.852    -.0007685    .0006353
             |
   treatment#|
    c.age_bl |
  Treatment  |  -.0007008   .0008336    -0.84   0.401     -.002336    .0009343
             |
   treatment#|
    literate |
  Treatment #|
   Literate  |   .0287827   .0266671     1.08   0.281    -.0235248    .0810901
             |
   treatment#|
          c. |
total_cott~a |
  Treatment  |  -.0066895   .0034947    -1.91   0.056    -.0135444    .0001654
             |
   treatment#|
          c. |
sampled_p~ha |
  Treatment  |   .0191823   .0131335     1.46   0.144     -.006579    .0449437
             |
   treatment#|
physical_~bl |
  Treatment #|
 Irrigation  |   .0522922   .0293767     1.78   0.075    -.0053302    .1099146
             |
   treatment#|
 pucca_house |
  Treatment #|
Strong ho..  |  -.0022971   .0202848    -0.11   0.910    -.0420857    .0374915
             |
   treatment#|
  plough_own |
  Treatment #|
 Own plough  |  -.0124828    .019696    -0.63   0.526    -.0511164    .0261509
             |
   treatment#|
crop_insur~e |
  Treatment #|
Crop insu..  |  -.0184313   .0179254    -1.03   0.304     -.053592    .0167293
             |
   treatment#|
  c.children |
  Treatment  |  -.0048101   .0073813    -0.65   0.515    -.0192884    .0096683
             |
   treatment#|
    educated |
  Treatment #|
$>$ media..  |   .0150224   .0210376     0.71   0.475    -.0262429    .0562877
             |
   treatment#|
soil_test_~e |
  Treatment #|
Soil test..  |  -.0193207   .0220539    -0.88   0.381    -.0625793     .023938
             |
   treatment#|
          c. |
fertilizer~1 |
  Treatment  |   2.20e-06   .0000357     0.06   0.951    -.0000678    .0000722
             |
   treatment#|
          c. |
fertilizer~3 |
  Treatment  |  -4.27e-06   .0000409    -0.10   0.917    -.0000845    .0000759
             |
   treatment#|
          c. |
fertilizer~5 |
  Treatment  |   .0003779   .0003798     1.00   0.320    -.0003671     .001123
             |
   treatment#|
          c. |
fertilize~12 |
  Treatment  |  -1.21e-06   .0005114    -0.00   0.998    -.0010043    .0010018
             |
    block_id |
     halvad  |  -.0496535   .0177054    -2.80   0.005    -.0843826   -.0149244
     jasdan  |  -.0141525   .0215092    -0.66   0.511    -.0563427    .0280378
      morbi  |  -.0344416   .0170288    -2.02   0.043    -.0678435   -.0010397
       muli  |  -.0336981    .016947    -1.99   0.047    -.0669397   -.0004566
  vinchhiya  |  -.0218651   .0186281    -1.17   0.241    -.0584041    .0146739
             |
       _cons |   .0940078   .0442654     2.12   0.034     .0071813    .1808344
------------------------------------------------------------------------------
(est2 stored)

. summarize midline_att if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .024

. testparm i.treatment#(c.age_bl i.literate c.total_cotton_land_ha c.sampled_pl
> ot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12)

 ( 1)  1.treatment#c.age_bl = 0
 ( 2)  1.treatment#1.literate = 0
 ( 3)  1.treatment#c.total_cotton_land_ha = 0
 ( 4)  1.treatment#c.sampled_plot_size_ha = 0
 ( 5)  1.treatment#1.physical_irrigation_bl = 0
 ( 6)  1.treatment#1.pucca_house = 0
 ( 7)  1.treatment#1.plough_own = 0
 ( 8)  1.treatment#1.crop_insurance = 0
 ( 9)  1.treatment#c.children = 0
 (10)  1.treatment#1.educated = 0
 (11)  1.treatment#1.soil_test_before = 0
 (12)  1.treatment#c.fertilizer_plot_kg_bigha_1 = 0
 (13)  1.treatment#c.fertilizer_plot_kg_bigha_3 = 0
 (14)  1.treatment#c.fertilizer_plot_kg_bigha_5 = 0
 (15)  1.treatment#c.fertilizer_plot_kg_bigha_12 = 0

       F( 15,  1548) =    1.04
            Prob > F =    0.4141

. local jointTest: di %9.3f `r(p)'

. estadd scalar intTest = `jointTest'

added scalar:
            e(intTest) =  .414

. 
. eststo: regress endline_att i.treatment##(c.age_bl i.literate c.total_cotton_
> land_ha c.sampled_plot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12) i.block_id, robust

Linear regression                               Number of obs     =      1,585
                                                F(36, 1548)       =       2.24
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0399
                                                Root MSE          =     .26228

------------------------------------------------------------------------------
             |               Robust
 endline_att |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -.0561908   .0879541    -0.64   0.523    -.2287126     .116331
      age_bl |  -.0005283   .0009066    -0.58   0.560    -.0023066      .00125
             |
    literate |
   Literate  |  -.0409481   .0309214    -1.32   0.186    -.1016003    .0197041
total_cott~a |   .0073795   .0046525     1.59   0.113    -.0017464    .0165054
sampled_p~ha |  -.0065544   .0087693    -0.75   0.455    -.0237554    .0106466
             |
physical_~bl |
 Irrigation  |   .0126367   .0316646     0.40   0.690    -.0494732    .0747467
             |
 pucca_house |
Strong ho..  |  -.0029913   .0178982    -0.17   0.867    -.0380987    .0321161
             |
  plough_own |
 Own plough  |  -.0252078   .0187113    -1.35   0.178      -.06191    .0114943
             |
crop_insur~e |
Crop insu..  |   .0051208   .0178211     0.29   0.774    -.0298353    .0400769
    children |  -.0078547   .0057894    -1.36   0.175    -.0192105    .0035012
             |
    educated |
$>$ media..  |   .0057146   .0191408     0.30   0.765      -.03183    .0432592
             |
soil_test_~e |
Soil test..  |  -.0161844   .0260921    -0.62   0.535    -.0673641    .0349953
fertilizer~1 |  -.0000157   7.91e-06    -1.98   0.048    -.0000312   -1.71e-07
fertilizer~3 |   -.000013   .0000223    -0.58   0.559    -.0000569    .0000308
fertilizer~5 |  -.0003688   .0002248    -1.64   0.101    -.0008098    .0000723
fertilize~12 |    .000151   .0007485     0.20   0.840    -.0013171    .0016192
             |
   treatment#|
    c.age_bl |
  Treatment  |  -.0001041   .0013318    -0.08   0.938    -.0027164    .0025082
             |
   treatment#|
    literate |
  Treatment #|
   Literate  |   .0310845   .0418676     0.74   0.458    -.0510388    .1132078
             |
   treatment#|
          c. |
total_cott~a |
  Treatment  |   -.004394     .00709    -0.62   0.536     -.018301     .009513
             |
   treatment#|
          c. |
sampled_p~ha |
  Treatment  |   .0194919   .0161171     1.21   0.227    -.0121217    .0511056
             |
   treatment#|
physical_~bl |
  Treatment #|
 Irrigation  |  -.0376312   .0443533    -0.85   0.396    -.1246301    .0493677
             |
   treatment#|
 pucca_house |
  Treatment #|
Strong ho..  |   .0256248   .0267657     0.96   0.339    -.0268761    .0781256
             |
   treatment#|
  plough_own |
  Treatment #|
 Own plough  |  -.0070249   .0269687    -0.26   0.795    -.0599239    .0458742
             |
   treatment#|
crop_insur~e |
  Treatment #|
Crop insu..  |   .0044852   .0266242     0.17   0.866    -.0477382    .0567086
             |
   treatment#|
  c.children |
  Treatment  |   .0020027   .0101305     0.20   0.843    -.0178683    .0218737
             |
   treatment#|
    educated |
  Treatment #|
$>$ media..  |  -.0075523   .0303311    -0.25   0.803    -.0670466    .0519421
             |
   treatment#|
soil_test_~e |
  Treatment #|
Soil test..  |   .0146658    .039872     0.37   0.713     -.063543    .0928747
             |
   treatment#|
          c. |
fertilizer~1 |
  Treatment  |   .0001014   .0000612     1.66   0.098    -.0000186    .0002215
             |
   treatment#|
          c. |
fertilizer~3 |
  Treatment  |  -.0000105   .0000451    -0.23   0.817     -.000099    .0000781
             |
   treatment#|
          c. |
fertilizer~5 |
  Treatment  |   .0009202   .0005726     1.61   0.108     -.000203    .0020434
             |
   treatment#|
          c. |
fertilize~12 |
  Treatment  |   .0013998   .0009774     1.43   0.152    -.0005174    .0033169
             |
    block_id |
     halvad  |   -.051819   .0273269    -1.90   0.058    -.1054205    .0017826
     jasdan  |  -.0512616   .0275026    -1.86   0.063    -.1052079    .0026848
      morbi  |  -.0492325   .0292204    -1.68   0.092    -.1065483    .0080833
       muli  |  -.1109298   .0219313    -5.06   0.000    -.1539479   -.0679117
  vinchhiya  |  -.0383784   .0262633    -1.46   0.144    -.0898937    .0131369
             |
       _cons |   .1918603   .0638993     3.00   0.003      .066522    .3171986
------------------------------------------------------------------------------
(est3 stored)

. summarize endline_att if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .071

. testparm i.treatment#(c.age_bl i.literate c.total_cotton_land_ha c.sampled_pl
> ot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12)

 ( 1)  1.treatment#c.age_bl = 0
 ( 2)  1.treatment#1.literate = 0
 ( 3)  1.treatment#c.total_cotton_land_ha = 0
 ( 4)  1.treatment#c.sampled_plot_size_ha = 0
 ( 5)  1.treatment#1.physical_irrigation_bl = 0
 ( 6)  1.treatment#1.pucca_house = 0
 ( 7)  1.treatment#1.plough_own = 0
 ( 8)  1.treatment#1.crop_insurance = 0
 ( 9)  1.treatment#c.children = 0
 (10)  1.treatment#1.educated = 0
 (11)  1.treatment#1.soil_test_before = 0
 (12)  1.treatment#c.fertilizer_plot_kg_bigha_1 = 0
 (13)  1.treatment#c.fertilizer_plot_kg_bigha_3 = 0
 (14)  1.treatment#c.fertilizer_plot_kg_bigha_5 = 0
 (15)  1.treatment#c.fertilizer_plot_kg_bigha_12 = 0

       F( 15,  1548) =    0.93
            Prob > F =    0.5333

. local jointTest: di %9.3f `r(p)'

. estadd scalar intTest = `jointTest'

added scalar:
            e(intTest) =  .533

. 
. eststo: regress fr_yield_attrition i.treatment##(c.age_bl i.literate c.total_
> cotton_land_ha c.sampled_plot_size_ha i.physical_irrigation_bl i.pucca_house 
> ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12) i.block_id, robust

Linear regression                               Number of obs     =      1,585
                                                F(36, 1548)       =       1.74
                                                Prob > F          =     0.0043
                                                R-squared         =     0.0316
                                                Root MSE          =     .35937

------------------------------------------------------------------------------
             |               Robust
fr_yield_a~n |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -.0721306   .1273523    -0.57   0.571    -.3219319    .1776706
      age_bl |  -.0003444   .0012803    -0.27   0.788    -.0028557    .0021669
             |
    literate |
   Literate  |  -.0672453   .0405657    -1.66   0.098    -.1468148    .0123243
total_cott~a |   .0069147    .005009     1.38   0.168    -.0029104    .0167398
sampled_p~ha |  -.0200686   .0104113    -1.93   0.054    -.0404902    .0003531
             |
physical_~bl |
 Irrigation  |  -.0632729   .0514942    -1.23   0.219    -.1642786    .0377327
             |
 pucca_house |
Strong ho..  |  -.0263274   .0270864    -0.97   0.331    -.0794572    .0268024
             |
  plough_own |
 Own plough  |  -.0366151   .0275947    -1.33   0.185    -.0907421    .0175119
             |
crop_insur~e |
Crop insu..  |   .0060144    .025058     0.24   0.810    -.0431368    .0551657
    children |  -.0055583   .0093549    -0.59   0.552    -.0239079    .0127914
             |
    educated |
$>$ media..  |   .0308272    .027589     1.12   0.264    -.0232887     .084943
             |
soil_test_~e |
Soil test..  |  -.0304739   .0343566    -0.89   0.375    -.0978642    .0369165
fertilizer~1 |  -.0000438   .0000234    -1.87   0.062    -.0000897    2.19e-06
fertilizer~3 |  -.0000582    .000033    -1.76   0.078    -.0001228    6.53e-06
fertilizer~5 |  -.0003939   .0004186    -0.94   0.347     -.001215    .0004271
fertilize~12 |  -.0006659    .001411    -0.47   0.637    -.0034336    .0021018
             |
   treatment#|
    c.age_bl |
  Treatment  |  -.0008933   .0017728    -0.50   0.614    -.0043708    .0025841
             |
   treatment#|
    literate |
  Treatment #|
   Literate  |   .0664745   .0562828     1.18   0.238     -.043924     .176873
             |
   treatment#|
          c. |
total_cott~a |
  Treatment  |   .0000637   .0084482     0.01   0.994    -.0165074    .0166348
             |
   treatment#|
          c. |
sampled_p~ha |
  Treatment  |   .0148898   .0195441     0.76   0.446    -.0234459    .0532255
             |
   treatment#|
physical_~bl |
  Treatment #|
 Irrigation  |   .0169603   .0657355     0.26   0.796    -.1119798    .1459004
             |
   treatment#|
 pucca_house |
  Treatment #|
Strong ho..  |   .0403966   .0387882     1.04   0.298    -.0356865    .1164796
             |
   treatment#|
  plough_own |
  Treatment #|
 Own plough  |   .0117357   .0389997     0.30   0.764    -.0647621    .0882334
             |
   treatment#|
crop_insur~e |
  Treatment #|
Crop insu..  |  -.0057922    .036513    -0.16   0.874    -.0774124     .065828
             |
   treatment#|
  c.children |
  Treatment  |  -.0090978   .0144919    -0.63   0.530    -.0375236     .019328
             |
   treatment#|
    educated |
  Treatment #|
$>$ media..  |  -.0458361   .0412028    -1.11   0.266    -.1266554    .0349832
             |
   treatment#|
soil_test_~e |
  Treatment #|
Soil test..  |   .0410598   .0536591     0.77   0.444    -.0641923     .146312
             |
   treatment#|
          c. |
fertilizer~1 |
  Treatment  |   .0000326   .0000902     0.36   0.718    -.0001443    .0002094
             |
   treatment#|
          c. |
fertilizer~3 |
  Treatment  |   .0000598   .0000652     0.92   0.360    -.0000682    .0001877
             |
   treatment#|
          c. |
fertilizer~5 |
  Treatment  |    .000549   .0007384     0.74   0.457    -.0008994    .0019974
             |
   treatment#|
          c. |
fertilize~12 |
  Treatment  |   .0018774   .0016106     1.17   0.244    -.0012817    .0050365
             |
    block_id |
     halvad  |   .0106934   .0360647     0.30   0.767    -.0600475    .0814342
     jasdan  |   .0681293   .0391818     1.74   0.082    -.0087257    .1449842
      morbi  |    -.07858   .0368711    -2.13   0.033    -.1509026   -.0062575
       muli  |  -.0654354   .0301949    -2.17   0.030    -.1246625   -.0062082
  vinchhiya  |  -.0362058   .0317055    -1.14   0.254    -.0983959    .0259844
             |
       _cons |   .3708002   .0924973     4.01   0.000     .1893669    .5522335
------------------------------------------------------------------------------
(est4 stored)

. summarize fr_yield_attrition if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .148

. testparm i.treatment#(c.age_bl i.literate c.total_cotton_land_ha c.sampled_pl
> ot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12)

 ( 1)  1.treatment#c.age_bl = 0
 ( 2)  1.treatment#1.literate = 0
 ( 3)  1.treatment#c.total_cotton_land_ha = 0
 ( 4)  1.treatment#c.sampled_plot_size_ha = 0
 ( 5)  1.treatment#1.physical_irrigation_bl = 0
 ( 6)  1.treatment#1.pucca_house = 0
 ( 7)  1.treatment#1.plough_own = 0
 ( 8)  1.treatment#1.crop_insurance = 0
 ( 9)  1.treatment#c.children = 0
 (10)  1.treatment#1.educated = 0
 (11)  1.treatment#1.soil_test_before = 0
 (12)  1.treatment#c.fertilizer_plot_kg_bigha_1 = 0
 (13)  1.treatment#c.fertilizer_plot_kg_bigha_3 = 0
 (14)  1.treatment#c.fertilizer_plot_kg_bigha_5 = 0
 (15)  1.treatment#c.fertilizer_plot_kg_bigha_12 = 0

       F( 15,  1548) =    0.76
            Prob > F =    0.7225

. local jointTest: di %9.3f `r(p)'

. estadd scalar intTest = `jointTest'

added scalar:
            e(intTest) =  .723

. 
. eststo: regress satellite_yield_attrition i.treatment##(c.age_bl i.literate c
> .total_cotton_land_ha c.sampled_plot_size_ha i.physical_irrigation_bl i.pucca
> _house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12) i.block_id, robust

Linear regression                               Number of obs     =      1,585
                                                F(36, 1548)       =       3.01
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0692
                                                Root MSE          =     .32138

------------------------------------------------------------------------------
             |               Robust
satellite_~n |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -.0010764   .1087455    -0.01   0.992    -.2143804    .2122276
      age_bl |  -.0006834   .0010948    -0.62   0.533    -.0028309    .0014642
             |
    literate |
   Literate  |  -.0147674   .0336094    -0.44   0.660    -.0806921    .0511572
total_cott~a |   .0138631   .0051699     2.68   0.007     .0037224    .0240039
sampled_p~ha |  -.0040698   .0103322    -0.39   0.694    -.0243363    .0161968
             |
physical_~bl |
 Irrigation  |   .0643324   .0403442     1.59   0.111    -.0148026    .1434674
             |
 pucca_house |
Strong ho..  |  -.0313634   .0225796    -1.39   0.165    -.0756532    .0129264
             |
  plough_own |
 Own plough  |  -.0295641   .0229647    -1.29   0.198    -.0746093    .0154812
             |
crop_insur~e |
Crop insu..  |   .0028417   .0224629     0.13   0.899    -.0412192    .0469026
    children |  -.0140688   .0075802    -1.86   0.064    -.0289373    .0007997
             |
    educated |
$>$ media..  |   .0000631   .0250168     0.00   0.998    -.0490073    .0491335
             |
soil_test_~e |
Soil test..  |  -.0081182   .0342479    -0.24   0.813    -.0752954     .059059
fertilizer~1 |  -.0000265     .00001    -2.64   0.008    -.0000461   -6.78e-06
fertilizer~3 |  -.0000283   .0000298    -0.95   0.343    -.0000867    .0000301
fertilizer~5 |  -.0005298   .0003243    -1.63   0.103     -.001166    .0001064
fertilize~12 |   .0013515   .0013753     0.98   0.326    -.0013461    .0040491
             |
   treatment#|
    c.age_bl |
  Treatment  |   .0001185    .001611     0.07   0.941    -.0030415    .0032784
             |
   treatment#|
    literate |
  Treatment #|
   Literate  |   .0054876   .0469862     0.12   0.907    -.0866758    .0976509
             |
   treatment#|
          c. |
total_cott~a |
  Treatment  |  -.0119507   .0082165    -1.45   0.146    -.0280674     .004166
             |
   treatment#|
          c. |
sampled_p~ha |
  Treatment  |   .0204311   .0189941     1.08   0.282    -.0168258     .057688
             |
   treatment#|
physical_~bl |
  Treatment #|
 Irrigation  |   -.063812   .0569045    -1.12   0.262    -.1754301    .0478062
             |
   treatment#|
 pucca_house |
  Treatment #|
Strong ho..  |   .0595197   .0332204     1.79   0.073    -.0056421    .1246814
             |
   treatment#|
  plough_own |
  Treatment #|
 Own plough  |  -.0317061   .0332248    -0.95   0.340    -.0968765    .0334643
             |
   treatment#|
crop_insur~e |
  Treatment #|
Crop insu..  |   .0303564   .0330121     0.92   0.358    -.0343968    .0951095
             |
   treatment#|
  c.children |
  Treatment  |   .0031654   .0122337     0.26   0.796     -.020831    .0271618
             |
   treatment#|
    educated |
  Treatment #|
$>$ media..  |   .0133298   .0386841     0.34   0.730    -.0625489    .0892085
             |
   treatment#|
soil_test_~e |
  Treatment #|
Soil test..  |  -.0238802   .0495967    -0.48   0.630     -.121164    .0734037
             |
   treatment#|
          c. |
fertilizer~1 |
  Treatment  |   .0000641   .0000729     0.88   0.380     -.000079    .0002072
             |
   treatment#|
          c. |
fertilizer~3 |
  Treatment  |  -.0000279   .0000533    -0.52   0.600    -.0001324    .0000766
             |
   treatment#|
          c. |
fertilizer~5 |
  Treatment  |   .0009168    .000632     1.45   0.147    -.0003229    .0021564
             |
   treatment#|
          c. |
fertilize~12 |
  Treatment  |   .0000299   .0015446     0.02   0.985    -.0029997    .0030595
             |
    block_id |
     halvad  |  -.0932538   .0331122    -2.82   0.005    -.1582033   -.0283043
     jasdan  |  -.1205166   .0321237    -3.75   0.000    -.1835271   -.0575061
      morbi  |   -.012681   .0399661    -0.32   0.751    -.0910743    .0657124
       muli  |  -.1710591   .0280876    -6.09   0.000    -.2261528   -.1159653
  vinchhiya  |  -.1179272   .0302666    -3.90   0.000     -.177295   -.0585594
             |
       _cons |   .2234228   .0760227     2.94   0.003     .0743044    .3725412
------------------------------------------------------------------------------
(est5 stored)

. summarize satellite_yield_attrition if treatment == 0, meanonly

. local varMean: di %9.3f `r(mean)'

. estadd scalar depMean = `varMean'

added scalar:
            e(depMean) =  .114

. testparm i.treatment#(c.age_bl i.literate c.total_cotton_land_ha c.sampled_pl
> ot_size_ha i.physical_irrigation_bl i.pucca_house ///
> i.plough_own i.crop_insurance c.children i.educated i.soil_test_before ///
> c.fertilizer_plot_kg_bigha_1 c.fertilizer_plot_kg_bigha_3 c.fertilizer_plot_k
> g_bigha_5 c.fertilizer_plot_kg_bigha_12)

 ( 1)  1.treatment#c.age_bl = 0
 ( 2)  1.treatment#1.literate = 0
 ( 3)  1.treatment#c.total_cotton_land_ha = 0
 ( 4)  1.treatment#c.sampled_plot_size_ha = 0
 ( 5)  1.treatment#1.physical_irrigation_bl = 0
 ( 6)  1.treatment#1.pucca_house = 0
 ( 7)  1.treatment#1.plough_own = 0
 ( 8)  1.treatment#1.crop_insurance = 0
 ( 9)  1.treatment#c.children = 0
 (10)  1.treatment#1.educated = 0
 (11)  1.treatment#1.soil_test_before = 0
 (12)  1.treatment#c.fertilizer_plot_kg_bigha_1 = 0
 (13)  1.treatment#c.fertilizer_plot_kg_bigha_3 = 0
 (14)  1.treatment#c.fertilizer_plot_kg_bigha_5 = 0
 (15)  1.treatment#c.fertilizer_plot_kg_bigha_12 = 0

       F( 15,  1548) =    0.79
            Prob > F =    0.6862

. local jointTest: di %9.3f `r(p)'

. estadd scalar intTest = `jointTest'

added scalar:
            e(intTest) =  .686

. 
. esttab using "tables/t-a2/attrition.tex", replace noconstant noobs ///
> frag se interaction(" x ") not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> indicate("Block FE = *block*") noomitted nobaselevels ///
> drop(*#*) ///
> scalars("N Observations" "r2_a Adjusted \$R^2$" "depMean Control attrition ra
> te" "intTest p-val of interactions") sfmt(%9.0fc %9.3fc %9.3fc %9.3fc)
(output written to tables/t-a2/attrition.tex)

. 
end of do-file

. 
. //Table A3 - Listening rates of treatment calls 
. do do/table-a3.do

. use "$merged_data", clear 

. 
. keep if sowed_cotton == 1
(87 observations deleted)

. 
. // Create a t-a3 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-a3/"

. if _rc mkdir "tables/t-a3/"

. 
. //Generate an irrigation variable that uses data from all relevant surveys
. generate irrigated = irrigation_ml 
(44 missing values generated)

. replace irrigated = irrigation_el if missing(irrigated)
(21 real changes made)

. destring SII_4_1, replace 
SII_4_1: all characters numeric; replaced as byte
(195 missing values generated)

. replace irrigated = SII_4_1 if missing(irrigated)
(23 real changes made)

. 
. // Look at the share and number of farmers that heard relevant recommendation
> s 
. eststo clear

. 
. egen rec_d4_ir = rowmax(farmer_recco_ir_D4*)
(745 missing values generated)

. label var rec_d4_ir "Dose 4: irrigated (UREA, MOP, and DAP)"

. 
. egen rec_basal_ur = rowmax(farmer_recco_ur_basal*)
(745 missing values generated)

. label var rec_basal_ur "Basal: unirrigated (UREA)"

. 
. egen rec_d2_ur = rowmax(farmer_recco_ur_D2*)
(745 missing values generated)

. label var rec_d2_ur "Dose 2: unirrigated (UREA)"

. 
. egen rec_potash_ir_mid = rowmax(farmer_recco_ir_potash_mid*)
(745 missing values generated)

. label var rec_potash_ir_mid "Mid-season: Potash (irrigated)"

. 
. egen rec_zinc_ir_mid = rowmax(farmer_recco_ir_zinc_mid*)
(745 missing values generated)

. label var rec_zinc_ir_mid "Mid-season: Zinc (irrigated)"

. 
. egen rec_basal_ir = rowmax(farmer_recco_ir_basal*)
(745 missing values generated)

. label var rec_basal_ir "Basal: irrigated (UREA, MOP, and DAP)"

. 
. egen rec_potash_ir_basal = rowmax(farmer_recco_ir_potash*)
(745 missing values generated)

. label var rec_potash_ir_basal "Early season: Potash (irrigated)"

. 
. egen rec_zinc_ir_basal = rowmax(farmer_recco_ir_zinc*)
(745 missing values generated)

. label var rec_zinc_ir_basal "Early season: Zinc (irrigated)"

. 
. egen rec_d2_ir = rowmax(farmer_recco_ir_D2*)
(745 missing values generated)

. label var rec_d2_ir "Dose 2: irrigated (UREA, MOP, and DAP)"

. 
. egen rec_d3_ir = rowmax(farmer_recco_ir_D3*)
(745 missing values generated)

. label var rec_d3_ir "Dose 3: irrigated (UREA, MOP, and DAP)"

. 
. label define recs 0 "Did not hear any recommendations" 1 "Heard 1 or more rec
> ommendations"

. 
. label val rec_* recs 

. 
. //Limit rates to irrigated farmers if irrigated recs and the same for unirrig
> ated 
. 
. foreach x of varlist rec_basal_ir rec_potash_ir_basal ///
> rec_d2_ir rec_d3_ir rec_d4_ir rec_potash_ir_basal rec_potash_ir_mid ///
> rec_zinc_ir_basal rec_zinc_ir_mid {
  2.         replace `x' = . if irrigated == 0 
  3. }
(225 real changes made, 225 to missing)
(225 real changes made, 225 to missing)
(225 real changes made, 225 to missing)
(225 real changes made, 225 to missing)
(225 real changes made, 225 to missing)
(0 real changes made)
(225 real changes made, 225 to missing)
(225 real changes made, 225 to missing)
(225 real changes made, 225 to missing)

. 
. foreach x of varlist rec_basal_ur rec_d2_ur {
  2.         replace `x' = . if irrigated == 1
  3. }
(529 real changes made, 529 to missing)
(529 real changes made, 529 to missing)

. 
. eststo: quietly estpost summarize rec_basal_ir rec_potash_ir_basal ///
> rec_d2_ir rec_d3_ir rec_d4_ir rec_potash_ir_basal rec_potash_ir_mid ///
> rec_zinc_ir_basal rec_zinc_ir_mid rec_basal_ur rec_d2_ur 
(est1 stored)

. 
. esttab using "tables/t-a3/listening_rates.tex", replace label ///
> cells("mean(label(\makecell[c]{Share of relevant farmers \\ that heard $\ge$ 
> 1 call}) fmt(3)) count(label(Number of relevant farmers) fmt(0))") nodepvars 
> ///
> frag tex noobs nomtitles nonumbers 
(output written to tables/t-a3/listening_rates.tex)

. 
. 
end of do-file

. 
. //Table A4 - Basal fertilizer application 
. do do/table-a4.do

. use "$final_data", clear 

. 
. // Create a t3 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-a4/"

. if _rc mkdir "tables/t-a4/"

. 
. /****************************************************************************
> ******
> Followed recommendations 
> *****************************************************************************
> *****/
. 
. //Basal 
. eststo clear

. 
. foreach x in "UREA" "DAP" "MOP" "ZINC" {
  2. 
. if "`x'" == "ZINC" {
  3. generate followed_rec_basal_`x' = SII_6_1_`x'
  4. replace followed_rec_basal_`x' = 1 - SII_6_1_`x' if SII_4_1 == 0 //Unirrig
> ated plots should not have had Zinc applied
  5. label var followed_rec_basal_`x' "\makecell[c]{Zinc}"
  6. }
  7. else if "`x'" == "UREA" {
  8. generate followed_rec_basal_`x' = SII_6_1_`x'
  9. label var followed_rec_basal_`x' "\makecell[c]{`x'}"
 10. }
 11. else{
 12. generate followed_rec_basal_`x' = SII_6_1_`x'
 13. replace followed_rec_basal_`x' = 1 - SII_6_1_`x' if SII_4_1 == 0 //Unirrig
> ated plots should not have MOP or DAP applied
 14. label var SII_6_1_`x' "\makecell[c]{`x'}"
 15. }
 16. 
. egen std_`x' = std(followed_rec_basal_`x')
 17. 
. replace followed_rec_basal_`x' = . if consent_basal != 1
 18. 
. summarize followed_rec_basal_`x' if treatment == 0, meanonly 
 19. local varMean = `r(mean)' 
 20. eststo: regress followed_rec_basal_`x' treatment i.block_id, robust
 21. estadd scalar depMean = `varMean'
 22. } 
(208 missing values generated)
(208 missing values generated)
(0 real changes made)

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =      12.44
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0540
                                                Root MSE          =     .33518

------------------------------------------------------------------------------
             |               Robust
followed_r~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1171258   .0184006     6.37   0.000     .0810278    .1532238
             |
    block_id |
     halvad  |    .069998   .0319229     2.19   0.029     .0073721     .132624
     jasdan  |   .0896731   .0344503     2.60   0.009     .0220889    .1572573
      morbi  |   .0087366   .0283994     0.31   0.758     -.046977    .0644502
       muli  |   .1165662    .030717     3.79   0.000      .056306    .1768265
  vinchhiya  |  -.0269399   .0241292    -1.12   0.264    -.0742763    .0203965
             |
       _cons |   .0350866   .0189163     1.85   0.064    -.0020232    .0721964
------------------------------------------------------------------------------
(est1 stored)

added scalar:
            e(depMean) =  .0765625
(208 missing values generated)
(122 real changes made)
(208 missing values generated)
(0 real changes made)

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =      14.45
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0659
                                                Root MSE          =     .45331

------------------------------------------------------------------------------
             |               Robust
followed_r~P |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0395262    .025091     1.58   0.115    -.0096971    .0887495
             |
    block_id |
     halvad  |  -.0301407   .0423197    -0.71   0.476     -.113163    .0528815
     jasdan  |  -.3417478   .0458793    -7.45   0.000    -.4317534   -.2517423
      morbi  |  -.0452095   .0429848    -1.05   0.293    -.1295367    .0391177
       muli  |   .0367274   .0366583     1.00   0.317    -.0351884    .1086433
  vinchhiya  |  -.1324878   .0417434    -3.17   0.002    -.2143795   -.0505962
             |
       _cons |   .7280422   .0298416    24.40   0.000     .6694992    .7865852
------------------------------------------------------------------------------
(est2 stored)

added scalar:
            e(depMean) =  .65625
(208 missing values generated)
(122 real changes made)
(208 missing values generated)
(0 real changes made)

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       5.89
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0275
                                                Root MSE          =     .37052

------------------------------------------------------------------------------
             |               Robust
followed_~OP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1030192   .0203604     5.06   0.000     .0630764    .1429619
             |
    block_id |
     halvad  |  -.0091718   .0380659    -0.24   0.810    -.0838491    .0655055
     jasdan  |  -.0672505      .0364    -1.85   0.065    -.1386596    .0041587
      morbi  |  -.0266982   .0375535    -0.71   0.477    -.1003702    .0469739
       muli  |   -.060232   .0330527    -1.82   0.069    -.1250744    .0046104
  vinchhiya  |  -.0917595    .032521    -2.82   0.005    -.1555589   -.0279601
             |
       _cons |   .1586939   .0255369     6.21   0.000     .1085959     .208792
------------------------------------------------------------------------------
(est3 stored)

added scalar:
            e(depMean) =  .115625
(208 missing values generated)
(122 real changes made)
(208 missing values generated)
(0 real changes made)

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       3.16
                                                Prob > F          =     0.0044
                                                R-squared         =     0.0133
                                                Root MSE          =     .31919

------------------------------------------------------------------------------
             |               Robust
followed_r~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0247587   .0176203     1.41   0.160    -.0098085    .0593259
             |
    block_id |
     halvad  |  -.1020132   .0283222    -3.60   0.000    -.1575755    -.046451
     jasdan  |   -.073627   .0312115    -2.36   0.018    -.1348574   -.0123966
      morbi  |  -.0305977   .0334616    -0.91   0.361    -.0962423    .0350469
       muli  |  -.0208714   .0309971    -0.67   0.501    -.0816812    .0399384
  vinchhiya  |  -.0646473   .0296858    -2.18   0.030    -.1228846     -.00641
             |
       _cons |   .1478811   .0238504     6.20   0.000     .1010917    .1946706
------------------------------------------------------------------------------
(est4 stored)

added scalar:
            e(depMean) =  .103125

. 
. // Joint effects
. 
. **Run regression of interest
. 
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist followed_rec_basal_UREA followed_rec_basal_DAP followed_
> rec_basal_MOP followed_rec_basal_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =     12.37
       Model |  8.33977408         6  1.38996235   Prob > F        =    0.0000
    Residual |  146.164049     1,301  .112347462   R-squared       =    0.0540
-------------+----------------------------------   Adj R-squared   =    0.0496
       Total |  154.503823     1,307  .118212565   Root MSE        =    .33518

------------------------------------------------------------------------------
followed_r~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1171258   .0185488     6.31   0.000      .080737    .1535146
             |
    block_id |
     halvad  |    .069998   .0319143     2.19   0.028     .0073889    .1326072
     jasdan  |   .0896731   .0327717     2.74   0.006     .0253819    .1539643
      morbi  |   .0087366   .0320679     0.27   0.785    -.0541739    .0716471
       muli  |   .1165662   .0290672     4.01   0.000     .0595425      .17359
  vinchhiya  |  -.0269399   .0301312    -0.89   0.371    -.0860509    .0321712
             |
       _cons |   .0350866   .0227617     1.54   0.123    -.0095669    .0797402
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~A |        640    .0765625     .266104          0          1

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =     15.30
       Model |  18.8586524         6  3.14310873   Prob > F        =    0.0000
    Residual |  267.345476     1,301  .205492295   R-squared       =    0.0659
-------------+----------------------------------   Adj R-squared   =    0.0616
       Total |  286.204128     1,307   .21897791   Root MSE        =    .45331

------------------------------------------------------------------------------
followed_~AP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0395262    .025086     1.58   0.115    -.0096872    .0887397
             |
    block_id |
     halvad  |  -.0301407    .043162    -0.70   0.485    -.1148155    .0545341
     jasdan  |  -.3417478   .0443216    -7.71   0.000    -.4286974   -.2547982
      morbi  |  -.0452095   .0433698    -1.04   0.297    -.1302918    .0398729
       muli  |   .0367274   .0393115     0.93   0.350    -.0403934    .1138483
  vinchhiya  |  -.1324878   .0407505    -3.25   0.001    -.2124317    -.052544
             |
       _cons |   .7280422   .0307836    23.65   0.000     .6676512    .7884333
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~AP |        640      .65625    .4753304          0          1

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      6.13
       Model |  5.05064769         6  .841774615   Prob > F        =    0.0000
    Residual |  178.609138     1,301   .13728604   R-squared       =    0.0275
-------------+----------------------------------   Adj R-squared   =    0.0230
       Total |  183.659786     1,307  .140520112   Root MSE        =    .37052

------------------------------------------------------------------------------
followed_~OP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .1030192   .0205044     5.02   0.000     .0627939    .1432445
             |
    block_id |
     halvad  |  -.0091718   .0352791    -0.26   0.795    -.0783819    .0600383
     jasdan  |  -.0672505   .0362269    -1.86   0.064    -.1383199     .003819
      morbi  |  -.0266982   .0354489    -0.75   0.451    -.0962414    .0428451
       muli  |   -.060232   .0321318    -1.87   0.061    -.1232678    .0028038
  vinchhiya  |  -.0917595    .033308    -2.75   0.006    -.1571027   -.0264163
             |
       _cons |   .1586939   .0251614     6.31   0.000     .1093325    .2080554
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_~OP |        640     .115625    .3200248          0          1

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      2.93
       Model |  1.78819625         6  .298032708   Prob > F        =    0.0077
    Residual |  132.548195     1,301   .10188178   R-squared       =    0.0133
-------------+----------------------------------   Adj R-squared   =    0.0088
       Total |  134.336391     1,307  .102782243   Root MSE        =    .31919

------------------------------------------------------------------------------
followed_r~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .0247587   .0176637     1.40   0.161    -.0098938    .0594112
             |
    block_id |
     halvad  |  -.1020132   .0303915    -3.36   0.001     -.161635   -.0423915
     jasdan  |   -.073627    .031208    -2.36   0.018    -.1348505   -.0124035
      morbi  |  -.0305977   .0305378    -1.00   0.317    -.0905064     .029311
       muli  |  -.0208714   .0276802    -0.75   0.451    -.0751742    .0334314
  vinchhiya  |  -.0646473   .0286935    -2.25   0.024    -.1209378   -.0083567
             |
       _cons |   .1478811   .0216756     6.82   0.000     .1053582     .190404
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
followed_r~C |        640     .103125    .3043599          0          1

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,308

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   .1171258   .0183583     6.38   0.000     .0811443    .1531074
             |
    block_id |
     halvad  |    .069998   .0318495     2.20   0.028     .0075741    .1324219
     jasdan  |   .0896731   .0343711     2.61   0.009     .0223069    .1570393
      morbi  |   .0087366   .0283341     0.31   0.758    -.0467973    .0642705
       muli  |   .1165662   .0306464     3.80   0.000     .0565004    .1766321
  vinchhiya  |  -.0269399   .0240738    -1.12   0.263    -.0741235    .0202438
             |
       _cons |   .0350866   .0188728     1.86   0.063    -.0019034    .0720767
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |  -2.186159   .0560721   -38.99   0.000    -2.296058   -2.076259
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   .0395262   .0250334     1.58   0.114    -.0095383    .0885907
             |
    block_id |
     halvad  |  -.0301407   .0422224    -0.71   0.475    -.1128951    .0526137
     jasdan  |  -.3417478   .0457739    -7.47   0.000     -.431463   -.2520326
      morbi  |  -.0452095   .0428861    -1.05   0.292    -.1292646    .0388457
       muli  |   .0367274   .0365741     1.00   0.315    -.0349564    .1084113
  vinchhiya  |  -.1324878   .0416474    -3.18   0.001    -.2141153   -.0508604
             |
       _cons |   .7280422   .0297731    24.45   0.000     .6696881    .7863964
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |  -1.582347   .0252013   -62.79   0.000     -1.63174   -1.532953
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   .1030192   .0203136     5.07   0.000     .0632053     .142833
             |
    block_id |
     halvad  |  -.0091718   .0379784    -0.24   0.809    -.0836081    .0652645
     jasdan  |  -.0672505   .0363164    -1.85   0.064    -.1384292    .0039283
      morbi  |  -.0266982   .0374672    -0.71   0.476    -.1001325    .0467362
       muli  |   -.060232   .0329768    -1.83   0.068    -.1248652    .0044013
  vinchhiya  |  -.0917595   .0324463    -2.83   0.005    -.1553531   -.0281659
             |
       _cons |   .1586939   .0254782     6.23   0.000     .1087575    .2086304
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |  -1.985689   .0481352   -41.25   0.000    -2.080032   -1.891345
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .0247587   .0175798     1.41   0.159     -.009697    .0592144
             |
    block_id |
     halvad  |  -.1020132   .0282572    -3.61   0.000    -.1573962   -.0466302
     jasdan  |   -.073627   .0311398    -2.36   0.018    -.1346599   -.0125941
      morbi  |  -.0305977   .0333847    -0.92   0.359    -.0960305    .0348351
       muli  |  -.0208714   .0309259    -0.67   0.500     -.081485    .0397422
  vinchhiya  |  -.0646473   .0296176    -2.18   0.029    -.1226967   -.0065978
             |
       _cons |   .1478811   .0237956     6.21   0.000     .1012426    .1945196
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |  -2.283942   .0652975   -34.98   0.000    -2.411923   -2.155961
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post 

          v1:  ([var1_eg1_mean]treatment/.2661039764661171 + [var2_eg1_mean]tre
> atment/.4753303768287382 + [var3_eg1_mean]treatment/.3200248180908056 + [var4
> _eg1_mean]treatment/.3043599456660183) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2316407   .0341127     6.79   0.000      .164781    .2985003
------------------------------------------------------------------------------

. 
. estimates store est5

. estimates restore est5
(results est5 are active now)

. eststo
(est5 stored)

. 
. 
. esttab using "tables/t-a4/followed_rec_basal.tex", replace se noobs rename(v1
>  treatment) frag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) noconstant ///
> indicate("Block FE = *block*") mtitles("\makecell[c]{UREA}" "\makecell[c]{DAP
> }" "\makecell[c]{MOP}" "\makecell[c]{Zinc}" "\makecell[c]{Standardized \\ joi
> nt effects}")
(output written to tables/t-a4/followed_rec_basal.tex)

. 
. 
. /****************************************************************************
> ******
> Amount of fertilizer applied (kg/ha)
> *****************************************************************************
> *****/
. eststo clear

. 
. foreach x in "UREA" "DAP" "MOP" "ZINC"{
  2.         summarize `x'_kg_hectare_bd if treatment == 0, meanonly 
  3.         local varMean =`r(mean)'
  4.         eststo: regress `x'_kg_hectare_bd treatment i.block_id, robust
  5.         estadd scalar depMean = `varMean'
  6. }

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       7.04
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0367
                                                Root MSE          =     46.203

------------------------------------------------------------------------------
             |               Robust
UREA_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   11.40773   2.518092     4.53   0.000     6.467764    16.34769
             |
    block_id |
     halvad  |   9.567369   4.221344     2.27   0.024     1.285982    17.84876
     jasdan  |   14.86303   6.394942     2.32   0.020       2.3175    27.40855
      morbi  |  -1.686982   2.695913    -0.63   0.532    -6.975795    3.601832
       muli  |   12.01424   3.651422     3.29   0.001     4.850925    19.17756
  vinchhiya  |  -2.676137   2.792452    -0.96   0.338    -8.154338    2.802064
             |
       _cons |   3.161822   2.451621     1.29   0.197     -1.64774    7.971385
------------------------------------------------------------------------------
(est1 stored)

added scalar:
            e(depMean) =  8.1417525

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =      12.16
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0271
                                                Root MSE          =     123.44

------------------------------------------------------------------------------
             |               Robust
DAP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -4.730278   6.736516    -0.70   0.483     -17.9459    8.485346
             |
    block_id |
     halvad  |  -2.851122   9.979898    -0.29   0.775    -22.42958    16.72733
     jasdan  |  -54.72246   9.282437    -5.90   0.000    -72.93264   -36.51227
      morbi  |  -45.53539   6.823024    -6.67   0.000    -58.92072   -32.15005
       muli  |  -10.49166   7.565463    -1.39   0.166     -25.3335    4.350183
  vinchhiya  |  -32.71137   14.92247    -2.19   0.029     -61.9861   -3.436636
             |
       _cons |   110.0031   6.473626    16.99   0.000      97.3032     122.703
------------------------------------------------------------------------------
(est2 stored)

added scalar:
            e(depMean) =  87.822822

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       6.82
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0329
                                                Root MSE          =     37.769

------------------------------------------------------------------------------
             |               Robust
MOP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   9.628195   2.028671     4.75   0.000     5.648371    13.60802
             |
    block_id |
     halvad  |   11.72006    4.55833     2.57   0.010     2.777574    20.66254
     jasdan  |   2.647994   5.347727     0.50   0.621    -7.843119    13.13911
      morbi  |   -2.15271   2.465004    -0.87   0.383    -6.988528    2.683108
       muli  |  -.7539196   2.666978    -0.28   0.777    -5.985967    4.478128
  vinchhiya  |  -4.574429    2.27746    -2.01   0.045    -9.042326   -.1065326
             |
       _cons |   1.501084   2.017042     0.74   0.457    -2.455927    5.458094
------------------------------------------------------------------------------
(est3 stored)

added scalar:
            e(depMean) =  2.2119658

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       3.02
                                                Prob > F          =     0.0062
                                                R-squared         =     0.0202
                                                Root MSE          =     4.5294

------------------------------------------------------------------------------
             |               Robust
ZINC_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .8489015   .2429757     3.49   0.000     .3722344    1.325569
             |
    block_id |
     halvad  |   .1420933   .5369681     0.26   0.791    -.9113248    1.195511
     jasdan  |  -.6561826   .3388578    -1.94   0.053     -1.32095     .008585
      morbi  |   -.558633   .3407238    -1.64   0.101    -1.227061    .1097952
       muli  |   .6294188   .5392499     1.17   0.243    -.4284758    1.687313
  vinchhiya  |  -.6235786   .3336506    -1.87   0.062    -1.278131    .0309735
             |
       _cons |     .21199   .2909606     0.73   0.466    -.3588134    .7827933
------------------------------------------------------------------------------
(est4 stored)

added scalar:
            e(depMean) =  .07994303

. 
. //Joint effects
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist UREA_kg_hectare_bd DAP_kg_hectare_bd MOP_kg_hectare_bd Z
> INC_kg_hectare_bd {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.26
       Model |  105840.779         6  17640.1298   Prob > F        =    0.0000
    Residual |  2777258.15     1,301  2134.71034   R-squared       =    0.0367
-------------+----------------------------------   Adj R-squared   =    0.0323
       Total |  2883098.93     1,307  2205.89054   Root MSE        =    46.203

------------------------------------------------------------------------------
UREA_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   11.40773   2.556838     4.46   0.000     6.391753    16.42371
             |
    block_id |
     halvad  |   9.567369   4.399199     2.17   0.030     .9370689    18.19767
     jasdan  |   14.86303   4.517384     3.29   0.001     6.000873    23.72518
      morbi  |  -1.686982   4.420372    -0.38   0.703    -10.35882    6.984857
       muli  |   12.01424   4.006739     3.00   0.003     4.153866    19.87462
  vinchhiya  |  -2.676137   4.153405    -0.64   0.519    -10.82424    5.471968
             |
       _cons |   3.161822   3.137558     1.01   0.314    -2.993405     9.31705
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
UREA_kg_he~d |        640    8.141753    35.71925          0   331.9859

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      6.04
       Model |  552317.142         6   92052.857   Prob > F        =    0.0000
    Residual |  19823345.8     1,301  15237.0067   R-squared       =    0.0271
-------------+----------------------------------   Adj R-squared   =    0.0226
       Total |  20375662.9     1,307  15589.6426   Root MSE        =    123.44

------------------------------------------------------------------------------
DAP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -4.730278   6.830988    -0.69   0.489    -18.13124    8.670681
             |
    block_id |
     halvad  |  -2.851122   11.75314    -0.24   0.808     -25.9083    20.20606
     jasdan  |  -54.72246   12.06889    -4.53   0.000    -78.39908   -31.04584
      morbi  |  -45.53539   11.80971    -3.86   0.000    -68.70354   -22.36723
       muli  |  -10.49166   10.70462    -0.98   0.327    -31.49188    10.50856
  vinchhiya  |  -32.71137   11.09646    -2.95   0.003    -54.48029   -10.94245
             |
       _cons |   110.0031   8.382472    13.12   0.000     93.55844    126.4477
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
DAP_kg_hec~d |        640    87.82282    155.0151          0    3208.62

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      7.37
       Model |  63099.9591         6  10516.6599   Prob > F        =    0.0000
    Residual |  1855838.51     1,301   1426.4708   R-squared       =    0.0329
-------------+----------------------------------   Adj R-squared   =    0.0284
       Total |  1918938.47     1,307  1468.20082   Root MSE        =    37.769

------------------------------------------------------------------------------
MOP_kg_hec~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   9.628195   2.090091     4.61   0.000     5.527878    13.72851
             |
    block_id |
     halvad  |   11.72006   3.596131     3.26   0.001     4.665204    18.77491
     jasdan  |   2.647994   3.692742     0.72   0.473    -4.596387    9.892375
      morbi  |   -2.15271    3.61344    -0.60   0.551    -9.241517    4.936097
       muli  |  -.7539196   3.275315    -0.23   0.818    -7.179397    5.671557
  vinchhiya  |  -4.574429   3.395207    -1.35   0.178    -11.23511     2.08625
             |
       _cons |   1.501084   2.564801     0.59   0.558    -3.530516    6.532683
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
MOP_kg_hec~d |        640    2.211966    20.40073          0   370.6575

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      4.47
       Model |  549.637887         6  91.6063145   Prob > F        =    0.0002
    Residual |  26691.0413     1,301  20.5157888   R-squared       =    0.0202
-------------+----------------------------------   Adj R-squared   =    0.0157
       Total |  27240.6792     1,307  20.8421417   Root MSE        =    4.5294

------------------------------------------------------------------------------
ZINC_kg_he~d |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   .8489015   .2506558     3.39   0.001     .3571676    1.340635
             |
    block_id |
     halvad  |   .1420933    .431269     0.33   0.742    -.7039655     .988152
     jasdan  |  -.6561826   .4428551    -1.48   0.139    -1.524971    .2126057
      morbi  |   -.558633   .4333447    -1.29   0.198    -1.408764    .2914979
       muli  |   .6294188   .3927948     1.60   0.109    -.1411617    1.399999
  vinchhiya  |  -.6235786   .4071729    -1.53   0.126    -1.422366    .1752089
             |
       _cons |     .21199   .3075859     0.69   0.491    -.3914287    .8154086
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
ZINC_kg_he~d |        640     .079943    1.164444          0   24.99274

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,308

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   11.40773   2.512306     4.54   0.000     6.483701    16.33176
             |
    block_id |
     halvad  |   9.567369   4.211643     2.27   0.023       1.3127    17.82204
     jasdan  |   14.86303   6.380246     2.33   0.020     2.357974    27.36808
      morbi  |  -1.686982   2.689718    -0.63   0.531    -6.958732    3.584769
       muli  |   12.01424   3.643031     3.30   0.001     4.874035    19.15445
  vinchhiya  |  -2.676137   2.786035    -0.96   0.337    -8.136665    2.784391
             |
       _cons |   3.161822   2.445987     1.29   0.196    -1.632224    7.955869
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   7.666086   .2351147    32.61   0.000      7.20527    8.126903
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -4.730278   6.721036    -0.70   0.482    -17.90327    8.442711
             |
    block_id |
     halvad  |  -2.851122   9.956965    -0.29   0.775    -22.36641    16.66417
     jasdan  |  -54.72246   9.261107    -5.91   0.000    -72.87389   -36.57102
      morbi  |  -45.53539   6.807345    -6.69   0.000    -58.87754   -32.19323
       muli  |  -10.49166   7.548078    -1.39   0.165    -25.28562    4.302301
  vinchhiya  |  -32.71137   14.88818    -2.20   0.028    -61.89166   -3.531081
             |
       _cons |   110.0031    6.45875    17.03   0.000     97.34417     122.662
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.631482   .4948074    19.47   0.000     8.661678    10.60129
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   9.628195   2.024009     4.76   0.000     5.661211    13.59518
             |
    block_id |
     halvad  |   11.72006   4.547855     2.58   0.010     2.806423    20.63369
     jasdan  |   2.647994   5.335438     0.50   0.620    -7.809273    13.10526
      morbi  |   -2.15271   2.459339    -0.88   0.381    -6.972927    2.667506
       muli  |  -.7539196   2.660849    -0.28   0.777    -5.969088    4.461248
  vinchhiya  |  -4.574429   2.272227    -2.01   0.044    -9.027912   -.1209468
             |
       _cons |   1.501084   2.012407     0.75   0.456    -2.443161    5.445329
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   7.262959   .3455531    21.02   0.000     6.585687     7.94023
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   .8489015   .2424174     3.50   0.000     .3737722    1.324031
             |
    block_id |
     halvad  |   .1420933   .5357341     0.27   0.791    -.9079263    1.192113
     jasdan  |  -.6561826   .3380792    -1.94   0.052    -1.318806    .0064404
      morbi  |   -.558633   .3399408    -1.64   0.100    -1.224905    .1076387
       muli  |   .6294188   .5380108     1.17   0.242    -.4250629    1.683901
  vinchhiya  |  -.6235786   .3328839    -1.87   0.061    -1.276019    .0288618
             |
       _cons |     .21199    .290292     0.73   0.465    -.3569719    .7809518
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.021195   .3716291     8.13   0.000     2.292815    3.749575
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/35.71925413368085 + [var2_eg1_mean]tre
> atment/155.0151406742205 + [var3_eg1_mean]treatment/20.40073103571355 + [var4
> _eg1_mean]treatment/1.164443977237997) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .3724573   .0668856     5.57   0.000     .2413639    .5035507
------------------------------------------------------------------------------

. 
. estimates store est5 

. 
. estimates restore est5
(results est5 are active now)

. eststo
(est5 stored)

. 
. 
. esttab using "tables/t-a4/fert_applied_basal.tex", replace se noobs not label
>  tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) frag interaction(" x ") indicate
> ("Block FE = *block*") ///
> mtitles("UREA" "DAP" "MOP" "Zinc" "\makecell[c]{Standardized \\ joint effects
> }") rename(v1 treatment) ///
> noconstant
(output written to tables/t-a4/fert_applied_basal.tex)

. 
. /****************************************************************************
> ******
> Fertilizer gap
> *****************************************************************************
> *****/
. 
. *This loops over each fertilizer of interest, calculates the distance (absolu
> te difference), then calculates treatment effects with this DV
. eststo clear

. 
. foreach x in "UREA" "DAP" "MOP" "ZINC"{
  2.         summarize distance_`x' if treatment == 0, meanonly 
  3.         local varMean =`r(mean)'
  4.         eststo: regress distance_`x' treatment i.block_id, robust
  5.         estadd scalar depMean = `varMean'
  6. }

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       9.45
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0379
                                                Root MSE          =     32.649

------------------------------------------------------------------------------
             |               Robust
distance_U~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -9.228911   1.792722    -5.15   0.000    -12.74585   -5.711969
             |
    block_id |
     halvad  |   .1942688   3.081124     0.06   0.950    -5.850247    6.238785
     jasdan  |  -11.51007   2.973214    -3.87   0.000    -17.34289   -5.677253
      morbi  |   4.035889   2.937237     1.37   0.170     -1.72635    9.798128
       muli  |   .8533134   3.124372     0.27   0.785    -5.276045    6.982671
  vinchhiya  |   1.256867   2.540991     0.49   0.621    -3.728021    6.241755
             |
       _cons |   124.2817   1.923403    64.62   0.000     120.5084     128.055
------------------------------------------------------------------------------
(est1 stored)

added scalar:
            e(depMean) =  123.82209

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =      10.27
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0381
                                                Root MSE          =     60.685

------------------------------------------------------------------------------
             |               Robust
distance_DAP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -3.711706   3.358533    -1.11   0.269    -10.30044    2.877028
             |
    block_id |
     halvad  |    .999564   6.453977     0.15   0.877    -11.66178    13.66091
     jasdan  |  -10.56239   6.580846    -1.61   0.109    -23.47263    2.347838
      morbi  |  -33.04912    5.06296    -6.53   0.000    -42.98158   -23.11666
       muli  |  -12.95033   5.299175    -2.44   0.015     -23.3462    -2.55447
  vinchhiya  |  -24.27151   4.807433    -5.05   0.000    -33.70268   -14.84034
             |
       _cons |   78.09244   4.197065    18.61   0.000     69.85869     86.3262
------------------------------------------------------------------------------
(est2 stored)

added scalar:
            e(depMean) =  64.988492

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       8.16
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0378
                                                Root MSE          =     63.242

------------------------------------------------------------------------------
             |               Robust
distance_MOP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -4.748512    3.49644    -1.36   0.175    -11.60779    2.110766
             |
    block_id |
     halvad  |   35.59464   6.123733     5.81   0.000     23.58117    47.60811
     jasdan  |   18.81576   6.183707     3.04   0.002     6.684627    30.94688
      morbi  |   8.568783   6.177077     1.39   0.166    -3.549339    20.68691
       muli  |   29.25427   5.739096     5.10   0.000     17.99537    40.51317
  vinchhiya  |   14.84978   5.686327     2.61   0.009     3.694409    26.00516
             |
       _cons |   159.1646   4.454986    35.73   0.000     150.4249    167.9043
------------------------------------------------------------------------------
(est3 stored)

added scalar:
            e(depMean) =  176.62727

Linear regression                               Number of obs     =      1,308
                                                F(6, 1301)        =       6.64
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0213
                                                Root MSE          =     7.0004

------------------------------------------------------------------------------
             |               Robust
distance_Z~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -.197608   .3873119    -0.51   0.610    -.9574323    .5622163
             |
    block_id |
     halvad  |   3.440627   .6142053     5.60   0.000     2.235686    4.645568
     jasdan  |   .8463389   .7056751     1.20   0.231    -.5380469    2.230725
      morbi  |   .8611104   .7167499     1.20   0.230    -.5450017    2.267223
       muli  |   1.075498   .6546881     1.64   0.101    -.2088621    2.359858
  vinchhiya  |   1.241138   .6631522     1.87   0.061    -.0598272    2.542102
             |
       _cons |   17.61754   .5189218    33.95   0.000     16.59952    18.63555
------------------------------------------------------------------------------
(est4 stored)

added scalar:
            e(depMean) =  18.793584

. 
. //Joint effects
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_UREA distance_DAP distance_MOP distance_ZINC {
  2. 
.         **Run regression for a given outcome in the variable list
.         regress `x' treatment i.block_id
  3. 
.         **Store the estimates                           
.         noi estimates store var`var_num'_eg1
  4.         
.         **Store the SD from the control observations of the sample [Here, int
> ervention == 3 was control]
.         tempvar samplevar
  5.         g `samplevar' = e(sample)
  6.         summ `x' if `samplevar' == 1 & treatment == 0
  7.         local sd1_`var_num' = r(sd)
  8. 
.         **Change variable number counter to next number
.         local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.53
       Model |  54563.1382         6  9093.85636   Prob > F        =    0.0000
    Residual |  1386821.73     1,301  1065.96597   R-squared       =    0.0379
-------------+----------------------------------   Adj R-squared   =    0.0334
       Total |  1441384.87     1,307  1102.81933   Root MSE        =    32.649

------------------------------------------------------------------------------
distance_U~A |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -9.228911    1.80678    -5.11   0.000    -12.77343   -5.684389
             |
    block_id |
     halvad  |   .1942688   3.108678     0.06   0.950    -5.904302     6.29284
     jasdan  |  -11.51007   3.192193    -3.61   0.000    -17.77248   -5.247661
      morbi  |   4.035889   3.123641     1.29   0.197    -2.092035    10.16381
       muli  |   .8533134   2.831348     0.30   0.763    -4.701195    6.407822
  vinchhiya  |   1.256867   2.934989     0.43   0.669    -4.500962    7.014696
             |
       _cons |   124.2817   2.217144    56.05   0.000     119.9321    128.6313
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_U~A |        640    123.8221     28.1258   1.977566   154.4406

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.59
       Model |  189866.038         6  31644.3397   Prob > F        =    0.0000
    Residual |  4791093.02     1,301  3682.62339   R-squared       =    0.0381
-------------+----------------------------------   Adj R-squared   =    0.0337
       Total |  4980959.06     1,307  3810.98628   Root MSE        =    60.685

------------------------------------------------------------------------------
distance_DAP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -3.711706   3.358245    -1.11   0.269    -10.29987    2.876463
             |
    block_id |
     halvad  |    .999564   5.778069     0.17   0.863    -10.33579    12.33492
     jasdan  |  -10.56239   5.933298    -1.78   0.075    -22.20227    1.077486
      morbi  |  -33.04912    5.80588    -5.69   0.000    -44.43903   -21.65921
       muli  |  -12.95033   5.262599    -2.46   0.014    -23.27444   -2.626226
  vinchhiya  |  -24.27151   5.455235    -4.45   0.000    -34.97353   -13.56949
             |
       _cons |   78.09244   4.120984    18.95   0.000     70.00794    86.17694
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_DAP |        640    64.98849    64.84751          0   376.8351

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      8.53
       Model |  204628.863         6  34104.8105   Prob > F        =    0.0000
    Residual |   5203444.2     1,301  3999.57279   R-squared       =    0.0378
-------------+----------------------------------   Adj R-squared   =    0.0334
       Total |  5408073.06     1,307  4137.77587   Root MSE        =    63.242

------------------------------------------------------------------------------
distance_MOP |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -4.748512   3.499778    -1.36   0.175    -11.61434    2.117315
             |
    block_id |
     halvad  |   35.59464   6.021586     5.91   0.000     23.78156    47.40772
     jasdan  |   18.81576   6.183357     3.04   0.002     6.685313     30.9462
      morbi  |   8.568783   6.050569     1.42   0.157    -3.301156    20.43872
       muli  |   29.25427   5.484391     5.33   0.000     18.49505    40.01349
  vinchhiya  |   14.84978   5.685146     2.61   0.009     3.696727    26.00284
             |
       _cons |   159.1646   4.294663    37.06   0.000     150.7394    167.5898
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_MOP |        640    176.6273    63.34721          0   308.8813

      Source |       SS           df       MS      Number of obs   =     1,308
-------------+----------------------------------   F(6, 1301)      =      4.73
       Model |  1389.57921         6  231.596534   Prob > F        =    0.0001
    Residual |  63755.7591     1,301  49.0051953   R-squared       =    0.0213
-------------+----------------------------------   Adj R-squared   =    0.0168
       Total |  65145.3383     1,307  49.8434111   Root MSE        =    7.0004

------------------------------------------------------------------------------
distance_Z~C |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -.197608   .3873957    -0.51   0.610    -.9575966    .5623806
             |
    block_id |
     halvad  |   3.440627   .6665384     5.16   0.000      2.13302    4.748235
     jasdan  |   .8463389   .6844451     1.24   0.216     -.496398    2.189076
      morbi  |   .8611104   .6697465     1.29   0.199    -.4527909    2.175012
       muli  |   1.075498   .6070755     1.77   0.077    -.1154562    2.266452
  vinchhiya  |   1.241138   .6292973     1.97   0.049      .006589    2.475686
             |
       _cons |   17.61754   .4753827    37.06   0.000     16.68494    18.55014
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_Z~C |        640    18.79358    7.015158          0    24.7105

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,308

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |  -9.228911   1.788602    -5.16   0.000    -12.73451   -5.723315
             |
    block_id |
     halvad  |   .1942688   3.074044     0.06   0.950    -5.830747    6.219284
     jasdan  |  -11.51007   2.966381    -3.88   0.000    -17.32407    -5.69607
      morbi  |   4.035889   2.930487     1.38   0.168     -1.70776    9.779538
       muli  |   .8533134   3.117192     0.27   0.784     -5.25627    6.962897
  vinchhiya  |   1.256867   2.535152     0.50   0.620    -3.711939    6.225673
             |
       _cons |   124.2817   1.918983    64.76   0.000     120.5206    128.0428
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   6.971637   .0556014   125.39   0.000      6.86266    7.080613
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -3.711706   3.350815    -1.11   0.268    -10.27918    2.855771
             |
    block_id |
     halvad  |    .999564   6.439146     0.16   0.877    -11.62093    13.62006
     jasdan  |  -10.56239   6.565723    -1.61   0.108    -23.43097    2.306187
      morbi  |  -33.04912   5.051326    -6.54   0.000    -42.94954   -23.14871
       muli  |  -12.95033   5.286998    -2.45   0.014    -23.31266   -2.588009
  vinchhiya  |  -24.27151   4.796386    -5.06   0.000    -33.67225   -14.87077
             |
       _cons |   78.09244   4.187421    18.65   0.000     69.88525    86.29964
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   8.211381   .0934007    87.92   0.000     8.028319    8.394443
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -4.748512   3.488405    -1.36   0.173    -11.58566    2.088637
             |
    block_id |
     halvad  |   35.59464   6.109661     5.83   0.000     23.61992    47.56935
     jasdan  |   18.81576   6.169497     3.05   0.002     6.723764    30.90775
      morbi  |   8.568783   6.162882     1.39   0.164    -3.510244    20.64781
       muli  |   29.25427   5.725908     5.11   0.000      18.0317    40.47684
  vinchhiya  |   14.84978    5.67326     2.62   0.009     3.730398    25.96917
             |
       _cons |   159.1646   4.444748    35.81   0.000     150.4531    167.8761
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   8.293943   .0593627   139.72   0.000     8.177594    8.410292
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |   -.197608   .3864219    -0.51   0.609     -.954981     .559765
             |
    block_id |
     halvad  |   3.440627   .6127938     5.61   0.000     2.239573    4.641681
     jasdan  |   .8463389   .7040535     1.20   0.229    -.5335807    2.226258
      morbi  |   .8611104   .7151028     1.20   0.229    -.5404653    2.262686
       muli  |   1.075498   .6531836     1.65   0.100    -.2047186    2.355714
  vinchhiya  |   1.241138   .6616283     1.88   0.061    -.0556301    2.537905
             |
       _cons |   17.61754   .5177294    34.03   0.000     16.60281    18.63227
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   3.891926   .0546269    71.25   0.000      3.78486    3.998993
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/28.12580142019583 + [var2_eg1_mean]tre
> atment/64.84751300560661 + [var3_eg1_mean]treatment/63.34720896838108 + [var4
> _eg1_mean]treatment/7.015157789730841) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   -.122124   .0358086    -3.41   0.001    -.1923075   -.0519405
------------------------------------------------------------------------------

. 
. estimates store est5 

. 
. estimates restore est5
(results est5 are active now)

. eststo
(est5 stored)

. 
. esttab using "tables/t-a4/gap_basal.tex", replace se noobs not label tex star
> (* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) frag ///
> indicate("Block FE = *block*") rename(v1 treatment) noconstant ///
> mtitles("UREA" "DAP" "MOP" "Zinc" "\makecell[c]{Standardized \\ joint effects
> }")
(output written to tables/t-a4/gap_basal.tex)

. 
. 
end of do-file

. 
. //NOTE: Table A5 was cut 
. 
. //Table A6 - Detailed table 4 (fertilizer application and yields) for full sa
> mple 
. do do/table-a6.do

. use "$final_data", clear 

. 
. // Create a t-a6 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-a6/"

. if _rc mkdir "tables/t-a6/"

. 
. 
. *****************************************************************************
> ***************************
. * Total amount of fertilizer applied (kg/ha)
. *****************************************************************************
> ***************************
. 
. eststo clear

. 
. foreach x in "urea" "dap" "mop" "zinc" {
  2.   summarize `x'_kg_hectare_ml if treatment == 0, meanonly 
  3.   local varMean = `r(mean)' 
  4.   eststo: regress `x'_kg_hectare_ml treatment i.block_id, robust
  5.   estadd scalar depMean = `varMean'
  6. } 

Linear regression                               Number of obs     =      1,440
                                                F(6, 1433)        =      44.39
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1549
                                                Root MSE          =        164

------------------------------------------------------------------------------
             |               Robust
urea_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   26.65853   8.658003     3.08   0.002     9.674814    43.64225
             |
    block_id |
     halvad  |   147.0677   16.95347     8.67   0.000     113.8114     180.324
     jasdan  |   78.14036   17.56047     4.45   0.000     43.69338    112.5873
      morbi  |  -76.25213   10.71881    -7.11   0.000    -97.27838   -55.22588
       muli  |   36.99495   12.80344     2.89   0.004     11.87946    62.11044
  vinchhiya  |  -29.37522   11.32196    -2.59   0.010    -51.58462   -7.165822
             |
       _cons |   149.8076   9.217965    16.25   0.000     131.7254    167.8897
------------------------------------------------------------------------------
(est1 stored)

added scalar:
            e(depMean) =  173.46053

Linear regression                               Number of obs     =      1,440
                                                F(6, 1433)        =      30.47
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0652
                                                Root MSE          =     97.123

------------------------------------------------------------------------------
             |               Robust
dap_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.4165462   5.118354    -0.08   0.935    -10.45682    9.623724
             |
    block_id |
     halvad  |   5.866859   10.69052     0.55   0.583    -15.10389    26.83761
     jasdan  |  -54.01327   9.902656    -5.45   0.000    -73.43853   -34.58802
      morbi  |  -67.61484   6.896795    -9.80   0.000    -81.14374   -54.08594
       muli  |  -14.00695   7.751685    -1.81   0.071    -29.21282    1.198915
  vinchhiya  |  -18.04838   8.573965    -2.11   0.035    -34.86725   -1.229512
             |
       _cons |   138.8806   6.835932    20.32   0.000     125.4711    152.2901
------------------------------------------------------------------------------
(est2 stored)

added scalar:
            e(depMean) =  117.36027

Linear regression                               Number of obs     =      1,438
                                                F(6, 1431)        =      13.49
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1091
                                                Root MSE          =     44.993

------------------------------------------------------------------------------
             |               Robust
mop_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   17.57063   2.393452     7.34   0.000     12.87558    22.26568
             |
    block_id |
     halvad  |   37.79962   5.928519     6.38   0.000      26.1701    49.42914
     jasdan  |   7.802153   3.590335     2.17   0.030     .7592691    14.84504
      morbi  |  -1.048498     2.4699    -0.42   0.671    -5.893511    3.796516
       muli  |   8.425815   2.837617     2.97   0.003      2.85948    13.99215
  vinchhiya  |  -1.039032   2.381951    -0.44   0.663    -5.711522    3.633459
             |
       _cons |   -2.33818   1.706194    -1.37   0.171    -5.685088    1.008729
------------------------------------------------------------------------------
(est3 stored)

added scalar:
            e(depMean) =  5.7433691

Linear regression                               Number of obs     =      1,434
                                                F(6, 1427)        =       9.30
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0434
                                                Root MSE          =     8.7179

------------------------------------------------------------------------------
             |               Robust
zinc_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |    .680877   .4609375     1.48   0.140    -.2233109    1.585065
             |
    block_id |
     halvad  |   1.084876   1.023632     1.06   0.289    -.9231092    3.092861
     jasdan  |  -1.184533   .4554647    -2.60   0.009    -2.077985   -.2910804
      morbi  |  -1.178571   .4515531    -2.61   0.009     -2.06435    -.292792
       muli  |    3.56838   .8978967     3.97   0.000     1.807041    5.329719
  vinchhiya  |  -1.168667    .461964    -2.53   0.012    -2.074868   -.2624656
             |
       _cons |   .9699475    .477423     2.03   0.042     .0334213    1.906474
------------------------------------------------------------------------------
(est4 stored)

added scalar:
            e(depMean) =  1.3460492

. 
. //Joint effects
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist urea_kg_hectare_ml dap_kg_hectare_ml mop_kg_hectare_ml z
> inc_kg_hectare_ml {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample [Here, intervent
> ion == 3 was control]
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =     43.78
       Model |  7064801.24         6  1177466.87   Prob > F        =    0.0000
    Residual |  38541875.6     1,433  26895.9355   R-squared       =    0.1549
-------------+----------------------------------   Adj R-squared   =    0.1514
       Total |  45606676.8     1,439  31693.3126   Root MSE        =       164

------------------------------------------------------------------------------
urea_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   26.65853   8.645694     3.08   0.002      9.69896    43.61811
             |
    block_id |
     halvad  |   147.0677   14.91803     9.86   0.000     117.8042    176.3312
     jasdan  |   78.14036   15.48613     5.05   0.000     47.76245    108.5183
      morbi  |  -76.25213     15.143    -5.04   0.000     -105.957    -46.5473
       muli  |   36.99495   13.67868     2.70   0.007     10.16256    63.82734
  vinchhiya  |  -29.37522   14.23071    -2.06   0.039    -57.29047   -1.459971
             |
       _cons |   149.8076   10.73929    13.95   0.000     128.7412     170.874
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
urea_kg_he~l |        725    173.4605    160.5139          0   1396.722

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =     16.65
       Model |  942164.745         6  157027.458   Prob > F        =    0.0000
    Residual |  13517308.2     1,433  9432.87382   R-squared       =    0.0652
-------------+----------------------------------   Adj R-squared   =    0.0612
       Total |  14459472.9     1,439  10048.2786   Root MSE        =    97.123

------------------------------------------------------------------------------
dap_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.4165462   5.120101    -0.08   0.935    -10.46024    9.627151
             |
    block_id |
     halvad  |   5.866859   8.834665     0.66   0.507     -11.4634    23.19712
     jasdan  |  -54.01327   9.171102    -5.89   0.000     -72.0035   -36.02305
      morbi  |  -67.61484   8.967897    -7.54   0.000    -85.20645   -50.02323
       muli  |  -14.00695   8.100709    -1.73   0.084    -29.89747    1.883566
  vinchhiya  |  -18.04838   8.427623    -2.14   0.032    -34.58018    -1.51658
             |
       _cons |   138.8806   6.359959    21.84   0.000     126.4048    151.3565
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
dap_kg_hec~l |        725    117.3603    101.4098          0   926.6438

      Source |       SS           df       MS      Number of obs   =     1,438
-------------+----------------------------------   F(6, 1431)      =     29.20
       Model |  354697.026         6   59116.171   Prob > F        =    0.0000
    Residual |  2896853.87     1,431   2024.3563   R-squared       =    0.1091
-------------+----------------------------------   Adj R-squared   =    0.1054
       Total |   3251550.9     1,437  2262.73549   Root MSE        =    44.993

------------------------------------------------------------------------------
mop_kg_hec~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   17.57063   2.373614     7.40   0.000     12.91449    22.22677
             |
    block_id |
     halvad  |   37.79962   4.106741     9.20   0.000     29.74374     45.8555
     jasdan  |   7.802153   4.245042     1.84   0.066    -.5250204    16.12933
      morbi  |  -1.048498   4.157687    -0.25   0.801    -9.204313    7.107317
       muli  |   8.425815   3.756281     2.24   0.025     1.057407    15.79422
  vinchhiya  |  -1.039032   3.907555    -0.27   0.790    -8.704182    6.626118
             |
       _cons |   -2.33818   2.949409    -0.79   0.428    -8.123808    3.447449
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
mop_kg_hec~l |        726    5.743369    24.61608          0   227.8956

      Source |       SS           df       MS      Number of obs   =     1,434
-------------+----------------------------------   F(6, 1427)      =     10.79
       Model |  4920.15856         6  820.026427   Prob > F        =    0.0000
    Residual |   108453.72     1,427  76.0012051   R-squared       =    0.0434
-------------+----------------------------------   Adj R-squared   =    0.0394
       Total |  113373.878     1,433  79.1164538   Root MSE        =    8.7179

------------------------------------------------------------------------------
zinc_kg_he~l |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |    .680877   .4605396     1.48   0.140    -.2225302    1.584284
             |
    block_id |
     halvad  |   1.084876   .7980751     1.36   0.174    -.4806504    2.650402
     jasdan  |  -1.184533   .8237552    -1.44   0.151    -2.800434    .4313685
      morbi  |  -1.178571   .8068545    -1.46   0.144    -2.761319    .4041772
       muli  |    3.56838   .7297878     4.89   0.000     2.136808    4.999952
  vinchhiya  |  -1.168667   .7584682    -1.54   0.124    -2.656499    .3191654
             |
       _cons |   .9699475    .573352     1.69   0.091    -.1547558    2.094651
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
zinc_kg_he~l |        722    1.346049      9.5614          0   154.4406

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,441

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   26.65853   8.639932     3.09   0.002     9.724577    43.59249
             |
    block_id |
     halvad  |   147.0677   16.91808     8.69   0.000     113.9089    180.2265
     jasdan  |   78.14036   17.52381     4.46   0.000     43.79432    112.4864
      morbi  |  -76.25213   10.69644    -7.13   0.000    -97.21677   -55.28749
       muli  |   36.99495   12.77671     2.90   0.004     11.95305    62.03685
  vinchhiya  |  -29.37522   11.29833    -2.60   0.009    -51.51954   -7.230897
             |
       _cons |   149.8076   9.198725    16.29   0.000     131.7784    167.8367
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.19973   .0970575   105.09   0.000      10.0095    10.38996
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |  -.4165462   5.107671    -0.08   0.935     -10.4274    9.594305
             |
    block_id |
     halvad  |   5.866859   10.66821     0.55   0.582    -15.04245    26.77617
     jasdan  |  -54.01327   9.881987    -5.47   0.000    -73.38161   -34.64494
      morbi  |  -67.61484     6.8824    -9.82   0.000     -81.1041   -54.12558
       muli  |  -14.00695   7.735506    -1.81   0.070    -29.16827     1.15436
  vinchhiya  |  -18.04838    8.55607    -2.11   0.035    -34.81797   -1.278793
             |
       _cons |   138.8806   6.821664    20.36   0.000     125.5104    152.2508
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |   9.151956   .0837017   109.34   0.000     8.987904    9.316008
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |   17.57063   2.388449     7.36   0.000     12.88936     22.2519
             |
    block_id |
     halvad  |   37.79962   5.916125     6.39   0.000     26.20423    49.39501
     jasdan  |   7.802153   3.582829     2.18   0.029     .7799373    14.82437
      morbi  |  -1.048498   2.464737    -0.43   0.671    -5.879293    3.782297
       muli  |   8.425815   2.831685     2.98   0.003     2.875815    13.97581
  vinchhiya  |  -1.039032   2.376971    -0.44   0.662     -5.69781    3.619747
             |
       _cons |   -2.33818   1.702627    -1.37   0.170    -5.675267    .9989074
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |   7.613007   .2325602    32.74   0.000     7.157197    8.068817
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |    .680877   .4599708     1.48   0.139    -.2206492    1.582403
             |
    block_id |
     halvad  |   1.084876   1.021485     1.06   0.288    -.9171981     3.08695
     jasdan  |  -1.184533   .4545094    -2.61   0.009    -2.075355   -.2937105
      morbi  |  -1.178571    .450606    -2.62   0.009    -2.061743   -.2953996
       muli  |    3.56838   .8960135     3.98   0.000     1.812226    5.324534
  vinchhiya  |  -1.168667    .460995    -2.54   0.011    -2.072201   -.2651333
             |
       _cons |   .9699475   .4764216     2.04   0.042     .0361783    1.903717
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.330749   .2774835    15.61   0.000     3.786892    4.874607
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/160.5138909760149 + [var2_eg1_mean]tre
> atment/101.4098287545101 + [var3_eg1_mean]treatment/24.61607544603226 + [var4
> _eg1_mean]treatment/9.5613995003044) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |   .2367432   .0405728     5.84   0.000     .1572219    .3162644
------------------------------------------------------------------------------

. 
. estimates store est5 

. 
. estimates restore est5
(results est5 are active now)

. eststo
(est5 stored)

. 
. 
. esttab using "tables/t-a6/fert_applied_midline.tex", replace se noobs not lab
> el tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) ///
> frag interaction(" x ") indicate("Block FE = *block*") ///
> mtitles("UREA" "DAP" "MOP" "Zinc" "\makecell[c]{Standardized \\ joint effects
> }") rename(v1 treatment) ///
> noconstant b(%9.3fc)
(output written to tables/t-a6/fert_applied_midline.tex)

. 
. /****************************************************************************
> ******
> Fertilizer gap
> *****************************************************************************
> *****/
. 
. //////////////////////////////////////////////////////
> // Midline (all doses)
. //////////////////////////////////////////////////////
> 
. 
. eststo clear

. 
. foreach x in "urea" "dap" "mop" "zinc" {
  2. 
.   summarize distance_`x' if treatment == 0, meanonly 
  3.   local varMean = `r(mean)' 
  4.   eststo: regress distance_`x' treatment i.block_id, robust
  5.   estadd scalar depMean = `varMean'
  6. 
. } 

Linear regression                               Number of obs     =      1,440
                                                F(6, 1433)        =      27.06
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0914
                                                Root MSE          =     149.87

------------------------------------------------------------------------------
             |               Robust
distance_u~a |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -16.6086   7.908018    -2.10   0.036    -32.12114   -1.096071
             |
    block_id |
     halvad  |  -22.25166   12.99197    -1.71   0.087    -47.73698     3.23365
     jasdan  |  -46.91024   14.13881    -3.32   0.001    -74.64523   -19.17525
      morbi  |  -94.59506   12.85746    -7.36   0.000    -119.8165   -69.37359
       muli  |   19.43815   13.04626     1.49   0.136    -6.153671    45.02997
  vinchhiya  |   55.08766   14.17407     3.89   0.000     27.28352    82.89181
             |
       _cons |   297.8411   10.21263    29.16   0.000     277.8078    317.8744
------------------------------------------------------------------------------
(est1 stored)

added scalar:
            e(depMean) =  289.50785

Linear regression                               Number of obs     =      1,440
                                                F(6, 1433)        =       7.76
                                                Prob > F          =     0.0000
                                                R-squared         =     0.0237
                                                Root MSE          =     68.551

------------------------------------------------------------------------------
             |               Robust
distance_dap |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -2.33421   3.612191    -0.65   0.518    -9.419958    4.751539
             |
    block_id |
     halvad  |   4.764507     7.0996     0.67   0.502    -9.162217    18.69123
     jasdan  |  -4.721337   6.973472    -0.68   0.498    -18.40065    8.957971
      morbi  |  -24.52583   5.531302    -4.43   0.000    -35.37615   -13.67551
       muli  |  -20.06122   5.979449    -3.36   0.001    -31.79063   -8.331806
  vinchhiya  |  -2.805436   6.394709    -0.44   0.661    -15.34943    9.738558
             |
       _cons |   89.81116   5.135888    17.49   0.000      79.7365    99.88583
------------------------------------------------------------------------------
(est2 stored)

added scalar:
            e(depMean) =  81.82912

Linear regression                               Number of obs     =      1,438
                                                F(6, 1431)        =      61.98
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1810
                                                Root MSE          =     81.748

------------------------------------------------------------------------------
             |               Robust
distance_mop |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -12.36728   4.317339    -2.86   0.004    -20.83628   -3.898292
             |
    block_id |
     halvad  |   37.25368   6.932863     5.37   0.000     23.65401    50.85334
     jasdan  |   1.546718   8.316303     0.19   0.852    -14.76673    17.86017
      morbi  |  -85.19751   7.504491   -11.35   0.000    -99.91849   -70.47653
       muli  |   21.74626   7.194765     3.02   0.003     7.632842    35.85968
  vinchhiya  |   23.40056   7.064348     3.31   0.001     9.542976    37.25815
             |
       _cons |   134.4615   5.552796    24.22   0.000      123.569     145.354
------------------------------------------------------------------------------
(est3 stored)

added scalar:
            e(depMean) =  137.17581

Linear regression                               Number of obs     =      1,434
                                                F(6, 1427)        =      75.83
                                                Prob > F          =     0.0000
                                                R-squared         =     0.1927
                                                Root MSE          =     8.8658

------------------------------------------------------------------------------
             |               Robust
distance_z~c |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.5226051   .4685795    -1.12   0.265    -1.441784    .3965735
             |
    block_id |
     halvad  |   5.920867   .7333209     8.07   0.000     4.482364     7.35937
     jasdan  |  -.4106954   .9081632    -0.45   0.651    -2.192174    1.370783
      morbi  |  -9.472524   .8255629   -11.47   0.000    -11.09197   -7.853077
       muli  |   .3499559   .8059769     0.43   0.664    -1.231071    1.930983
  vinchhiya  |    1.84012   .7918115     2.32   0.020     .2868809     3.39336
             |
       _cons |   14.14743    .623685    22.68   0.000     12.92399    15.37086
------------------------------------------------------------------------------
(est4 stored)

added scalar:
            e(depMean) =  14.04887

. 
. // Joint effects
. 
. **Run regression of interest
. 
. local var_num = 1

. **Defining list of variables looping over, for eventual combination of estima
> tes
. foreach x of varlist distance_urea distance_dap distance_mop distance_zinc {
  2. 
.   **Run regression for a given outcome in the variable list
.   regress `x' treatment i.block_id
  3. 
.   **Store the estimates       
.   noi estimates store var`var_num'_eg1
  4.   
.   **Store the SD from the control observations of the sample 
.   tempvar samplevar
  5.   g `samplevar' = e(sample)
  6.   summ `x' if `samplevar' == 1 & treatment == 0
  7.   local sd1_`var_num' = r(sd)
  8. 
.   **Change variable number counter to next number
.   local var_num = `var_num' + 1
  9. }

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =     24.02
       Model |  3236668.57         6  539444.762   Prob > F        =    0.0000
    Residual |  32185295.7     1,433  22460.0807   R-squared       =    0.0914
-------------+----------------------------------   Adj R-squared   =    0.0876
       Total |  35421964.3     1,439  24615.6805   Root MSE        =    149.87

------------------------------------------------------------------------------
distance_u~a |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -16.6086   7.900638    -2.10   0.036    -32.10666   -1.110547
             |
    block_id |
     halvad  |  -22.25166   13.63244    -1.63   0.103    -48.99335    4.490024
     jasdan  |  -46.91024   14.15159    -3.31   0.001    -74.67029   -19.15019
      morbi  |  -94.59506   13.83803    -6.84   0.000      -121.74   -67.45009
       muli  |   19.43815    12.4999     1.56   0.120    -5.081921    43.95822
  vinchhiya  |   55.08766   13.00435     4.24   0.000     29.57805    80.59727
             |
       _cons |   297.8411   9.813818    30.35   0.000     278.5901    317.0921
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_u~a |        725    289.5079     159.257   1.544316   623.9401

      Source |       SS           df       MS      Number of obs   =     1,440
-------------+----------------------------------   F(6, 1433)      =      5.79
       Model |  163212.026         6  27202.0043   Prob > F        =    0.0000
    Residual |  6734102.17     1,433  4699.30368   R-squared       =    0.0237
-------------+----------------------------------   Adj R-squared   =    0.0196
       Total |   6897314.2     1,439  4793.13009   Root MSE        =    68.551

------------------------------------------------------------------------------
distance_dap |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |   -2.33421   3.613876    -0.65   0.518    -9.423264    4.754845
             |
    block_id |
     halvad  |   4.764507   6.235695     0.76   0.445    -7.467562    16.99658
     jasdan  |  -4.721337   6.473159    -0.73   0.466    -17.41922    7.976546
      morbi  |  -24.52583   6.329733    -3.87   0.000    -36.94236   -12.10929
       muli  |  -20.06122   5.717652    -3.51   0.000    -31.27708   -8.845351
  vinchhiya  |  -2.805436   5.948396    -0.47   0.637    -14.47393    8.863061
             |
       _cons |   89.81116   4.488995    20.01   0.000     81.00546    98.61687
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_dap |        725    81.82912    70.80357          0   381.3654

      Source |       SS           df       MS      Number of obs   =     1,438
-------------+----------------------------------   F(6, 1431)      =     52.69
       Model |  2112732.73         6  352122.121   Prob > F        =    0.0000
    Residual |   9562972.5     1,431  6682.72013   R-squared       =    0.1810
-------------+----------------------------------   Adj R-squared   =    0.1775
       Total |  11675705.2     1,437  8125.05583   Root MSE        =    81.748

------------------------------------------------------------------------------
distance_mop |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -12.36728    4.31264    -2.87   0.004    -20.82706    -3.90751
             |
    block_id |
     halvad  |   37.25368   7.461574     4.99   0.000     22.61688    51.89047
     jasdan  |   1.546718   7.712855     0.20   0.841      -13.583    16.67643
      morbi  |  -85.19751   7.554139   -11.28   0.000    -100.0159   -70.37913
       muli  |   21.74626   6.824821     3.19   0.001     8.358534    35.13399
  vinchhiya  |   23.40056   7.099671     3.30   0.001     9.473684    37.32744
             |
       _cons |   134.4615   5.358807    25.09   0.000     123.9496    144.9735
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_mop |        726    137.1758    90.54805          0    247.105

      Source |       SS           df       MS      Number of obs   =     1,434
-------------+----------------------------------   F(6, 1427)      =     56.76
       Model |  26767.6869         6  4461.28115   Prob > F        =    0.0000
    Residual |  112165.897     1,427  78.6025904   R-squared       =    0.1927
-------------+----------------------------------   Adj R-squared   =    0.1893
       Total |  138933.583     1,433  96.9529542   Root MSE        =    8.8658

------------------------------------------------------------------------------
distance_z~c |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |  -.5226051    .468355    -1.12   0.265    -1.441343     .396133
             |
    block_id |
     halvad  |   5.920867   .8116185     7.30   0.000     4.328774     7.51296
     jasdan  |  -.4106954   .8377344    -0.49   0.624    -2.054019    1.232628
      morbi  |  -9.472524   .8205469   -11.54   0.000    -11.08213   -7.862916
       muli  |   .3499559   .7421724     0.47   0.637     -1.10591    1.805822
  vinchhiya  |    1.84012   .7713395     2.39   0.017     .3270393    3.353201
             |
       _cons |   14.14743   .5830819    24.26   0.000     13.00364    15.29122
------------------------------------------------------------------------------

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
distance_z~c |        722    14.04887    9.778953          0   27.27423

. 
. **Combine stored estimates  [If you are clustering standard errors, you need 
> to wait until now to do this or else SUEST won't work]
. suest var1_eg1 var2_eg1 var3_eg1 var4_eg1, robust 

Simultaneous results for var1_eg1, var2_eg1, var3_eg1, var4_eg1

                                                Number of obs     =      1,441

------------------------------------------------------------------------------
             |               Robust
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
var1_eg1_m~n |
   treatment |   -16.6086   7.891512    -2.10   0.035    -32.07568   -1.141524
             |
    block_id |
     halvad  |  -22.25166   12.96485    -1.72   0.086     -47.6623    3.158977
     jasdan  |  -46.91024    14.1093    -3.32   0.001    -74.56396   -19.25652
      morbi  |  -94.59506   12.83063    -7.37   0.000    -119.7426   -69.44749
       muli  |   19.43815   13.01903     1.49   0.135    -6.078686    44.95499
  vinchhiya  |   55.08766   14.14448     3.89   0.000     27.36498    82.81034
             |
       _cons |   297.8411   10.19132    29.22   0.000     277.8665    317.8158
-------------+----------------------------------------------------------------
var1_eg1_l~r |
       _cons |   10.01949   .0311975   321.16   0.000     9.958349    10.08064
-------------+----------------------------------------------------------------
var2_eg1_m~n |
   treatment |   -2.33421   3.604652    -0.65   0.517    -9.399197    4.730778
             |
    block_id |
     halvad  |   4.764507   7.084782     0.67   0.501    -9.121411    18.65042
     jasdan  |  -4.721337   6.958917    -0.68   0.497    -18.36056     8.91789
      morbi  |  -24.52583   5.519757    -4.44   0.000    -35.34435    -13.7073
       muli  |  -20.06122   5.966969    -3.36   0.001    -31.75626   -8.366173
  vinchhiya  |  -2.805436   6.381362    -0.44   0.660    -15.31268    9.701803
             |
       _cons |   89.81116   5.125169    17.52   0.000     79.76602    99.85631
-------------+----------------------------------------------------------------
var2_eg1_l~r |
       _cons |    8.45517   .0621441   136.06   0.000     8.333369     8.57697
-------------+----------------------------------------------------------------
var3_eg1_m~n |
   treatment |  -12.36728   4.308313    -2.87   0.004    -20.81142   -3.923146
             |
    block_id |
     halvad  |   37.25368   6.918369     5.38   0.000     23.69392    50.81343
     jasdan  |   1.546718   8.298917     0.19   0.852    -14.71886     17.8123
      morbi  |  -85.19751   7.488802   -11.38   0.000    -99.87529   -70.51973
       muli  |   21.74626   7.179724     3.03   0.002      7.67426    35.81826
  vinchhiya  |   23.40056   7.049579     3.32   0.001     9.583642    37.21748
             |
       _cons |   134.4615   5.541188    24.27   0.000      123.601    145.3221
-------------+----------------------------------------------------------------
var3_eg1_l~r |
       _cons |    8.80728   .0306917   286.96   0.000     8.747126    8.867435
-------------+----------------------------------------------------------------
var4_eg1_m~n |
   treatment |  -.5226051   .4675967    -1.12   0.264    -1.439078    .3938676
             |
    block_id |
     halvad  |   5.920867   .7317828     8.09   0.000     4.486599    7.355135
     jasdan  |  -.4106954   .9062584    -0.45   0.650    -2.186929    1.365538
      morbi  |  -9.472524   .8238314   -11.50   0.000     -11.0872   -7.857844
       muli  |   .3499559   .8042865     0.44   0.663    -1.226417    1.926328
  vinchhiya  |    1.84012   .7901508     2.33   0.020     .2914533    3.388787
             |
       _cons |   14.14743   .6223768    22.73   0.000     12.92759    15.36726
-------------+----------------------------------------------------------------
var4_eg1_l~r |
       _cons |   4.364405   .0290825   150.07   0.000     4.307404    4.421405
------------------------------------------------------------------------------

. 
. **Calculate average standardized effect across outcomes  [Here, when combinin
> g outcomes sometimes have plus, sometimes minus, depending on whether more is
>  good (ex: vitamin uptake) or bad (eg: malnutrition), 
. //then use trickery to get it to save as a regression estimation that can be 
> added correctly to esttab
. 
. nlcom (v1:([var1_eg1_mean]treatment/`sd1_1' + [var2_eg1_mean]treatment/`sd1_2
> ' ///
> + [var3_eg1_mean]treatment/`sd1_3' + [var4_eg1_mean]treatment/`sd1_4') / 4), 
> post

          v1:  ([var1_eg1_mean]treatment/159.2569576937425 + [var2_eg1_mean]tre
> atment/70.80356771801497 + [var3_eg1_mean]treatment/90.54804752610318 + [var4
> _eg1_mean]treatment/9.778952847431347) / 4

------------------------------------------------------------------------------
             |      Coef.   Std. Err.      z    P>|z|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
          v1 |    -.08182   .0313174    -2.61   0.009     -.143201    -.020439
------------------------------------------------------------------------------

. 
. estimates store est5

. estimates restore est5
(results est5 are active now)

. eststo
(est5 stored)

. 
. 
. esttab using "tables/t-a6/gap_all_doses.tex", replace se noobs rename(v1 trea
> tment) r2 frag not label tex star(* 0.10 ** 0.05 *** 0.01) ///
> noomitted nobaselevels scalars("N Observations" "r2_a Adjusted \$R^2$" "depMe
> an Control mean") sfmt(%9.0fc %9.3fc %9.3fc) noconstant b(%9.3fc) ///
> indicate("Block FE = *block*") mtitles("\makecell[c]{UREA}" "\makecell[c]{DAP
> }" "\makecell[c]{MOP}" "\makecell[c]{Zinc}" "\makecell[c]{Standardized \\ joi
> nt effects}")
(output written to tables/t-a6/gap_all_doses.tex)

. 
. 
end of do-file

. 
. //Table A7 - Share of plot on which fertilizer was applied 
. do do/table-a7.do

. use "$final_data", clear 

. 
. // Create a t-a7 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-a7/"

. if _rc mkdir "tables/t-a7/"

. 
. *************************************************************
. * Panel A: Share of plot on which fertilizer was applied, conditional on non-
> zero application, by treatment 
. * Basal fertilizer dose 
. *************************************************************
. 
. // Initiate the output LaTex file 
. cap file close handle

. file open handle using "tables/t-a7/panel-a.tex", write replace

. 
. local fmt "%9.3fc"

. 
. foreach x in "UREA" "DAP" "MOP" "ZINC" {
  2.         summarize `x'_fraction_basal if treatment == 0 & `x'_fraction_basa
> l > 0, detail
  3.         local control_mean = r(mean)
  4.         local control_mean: di `fmt' `control_mean'
  5.         local control_sd = r(sd) 
  6.         local control_sd: di `fmt' `control_sd'
  7.         local control_sd = subinstr("`control_sd'"," ","",.)
  8.         local control_n = r(N)
  9.         local control_n: di %9.0fc `control_n'
 10.         summarize `x'_fraction_basal if treatment == 1 & `x'_fraction_basa
> l > 0, detail
 11.         local treatment_mean = r(mean)
 12.         local treatment_mean: di `fmt' `treatment_mean'
 13.         local treatment_sd = r(sd) 
 14.         local treatment_sd: di `fmt' `treatment_sd'
 15.         local treatment_sd = subinstr("`treatment_sd'"," ","",.)
 16.         local treatment_n = r(N)
 17.         local treatment_n: di %9.0fc `treatment_n'
 18.         if "`x'" == "ZINC" {
 19.                 file w handle "Zinc & `control_mean' & `treatment_mean' \\
>  " _n
 20.                 file w handle " & [`control_sd'] & [`treatment_sd'] \\" _n
 21.                 file w handle " & N: `control_n' & N: `treatment_n' \\ " _
> n
 22.         }
 23.         else {
 24.                 file w handle "`x' & `control_mean' & `treatment_mean' \\ 
> " _n
 25.                 file w handle " & [`control_sd'] & [`treatment_sd'] \\ " _
> n
 26.                 file w handle " & N: `control_n' & N: `treatment_n' \\ [1e
> m] " _n
 27.         }
 28. }

         Proportion of cotton plot on which UREA was
                applied in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                  49
25%            1              1       Sum of Wgt.          49

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

         Proportion of cotton plot on which UREA was
                applied in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                 130
25%            1              1       Sum of Wgt.         130

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

     Proportion of cotton plot on which DAP was applied
                    in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1            .75
 5%            1              1
10%            1              1       Obs                 440
25%            1              1       Sum of Wgt.         440

50%            1                      Mean           .9994318
                        Largest       Std. Dev.      .0119183
75%            1              1
90%            1              1       Variance        .000142
95%            1              1       Skewness       -20.9046
99%            1              1       Kurtosis       438.0023

     Proportion of cotton plot on which DAP was applied
                    in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1             .6
 5%            1              1
10%            1              1       Obs                 491
25%            1              1       Sum of Wgt.         491

50%            1                      Mean           .9991853
                        Largest       Std. Dev.      .0180517
75%            1              1
90%            1              1       Variance       .0003259
95%            1              1       Skewness      -22.09077
99%            1              1       Kurtosis        489.002

     Proportion of cotton plot on which MOP was applied
                    in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                  16
25%            1              1       Sum of Wgt.          16

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

     Proportion of cotton plot on which MOP was applied
                    in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                  89
25%            1              1       Sum of Wgt.          89

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

         Proportion of cotton plot on which ZINC was
                applied in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                   4
25%            1              1       Sum of Wgt.           4

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

         Proportion of cotton plot on which ZINC was
                applied in basal application
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                  26
25%            1              1       Sum of Wgt.          26

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

. 
. file close handle

. 
. *************************************************************
. * Panel B: Share of plot on which fertilizer was applied, conditional on non-
> zero application, by treatment 
. * Average across all doses
. *************************************************************
. 
. // Initiate the output LaTex file 
. cap file close handle

. file open handle using "tables/t-a7/panel-b.tex", write replace

. 
. foreach x in "urea" "dap" "mop" "zinc" {
  2.         summarize `x'_fraction_average if treatment == 0 & `x'_fraction_av
> erage > 0, detail
  3.         local control_mean = r(mean)
  4.         local control_mean: di `fmt' `control_mean'
  5.         local control_sd = r(sd) 
  6.         local control_sd: di `fmt' `control_sd'
  7.         local control_n = r(N)
  8.         local control_n: di %9.0fc `control_n'
  9.         summarize `x'_fraction_average if treatment == 1 & `x'_fraction_av
> erage > 0, detail
 10.         local treatment_mean = r(mean)
 11.         local treatment_mean: di `fmt' `treatment_mean'
 12.         local treatment_sd = r(sd) 
 13.         local treatment_sd: di `fmt' `treatment_sd'
 14.         local treatment_n = r(N)
 15.         local treatment_n: di %9.0fc `treatment_n'
 16.         if "`x'" == "zinc" {
 17.                 file w handle "Zinc & `control_mean' & `treatment_mean' \\
>  " _n
 18.                 file w handle " & [`control_sd'] & [`treatment_sd'] \\ " _
> n
 19.                 file w handle " & N: `control_n' & N: `treatment_n' \\ " _
> n
 20.         }
 21.         else {
 22.                 local varname = upper("`x'")
 23.                 file w handle "`varname' & `control_mean' & `treatment_mea
> n' \\ " _n
 24.                 file w handle " & [`control_sd'] & [`treatment_sd'] \\ " _
> n
 25.                 file w handle " & N: `control_n' & N: `treatment_n' \\ [1e
> m] " _n
 26.         }
 27. }

                    urea_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1             .5
 5%            1       .8333333
10%            1              1       Obs                 596
25%            1              1       Sum of Wgt.         596

50%            1                      Mean           .9988814
                        Largest       Std. Dev.      .0215778
75%            1              1
90%            1              1       Variance       .0004656
95%            1              1       Skewness      -21.54784
99%            1              1       Kurtosis       486.8666

                    urea_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1       .3333333
 5%            1              1
10%            1              1       Obs                 620
25%            1              1       Sum of Wgt.         620

50%            1                      Mean           .9989247
                        Largest       Std. Dev.       .026774
75%            1              1
90%            1              1       Variance       .0007168
95%            1              1       Skewness      -24.83952
99%            1              1       Kurtosis       618.0016

                    dap_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1            .75
 5%            1              1
10%            1              1       Obs                 587
25%            1              1       Sum of Wgt.         587

50%            1                      Mean           .9995741
                        Largest       Std. Dev.      .0103186
75%            1              1
90%            1              1       Variance       .0001065
95%            1              1       Skewness      -24.16613
99%            1              1       Kurtosis       585.0017

                    dap_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1             .5
 5%            1       .7272727
10%            1              1       Obs                 588
25%            1              1       Sum of Wgt.         588

50%            1                      Mean           .9986858
                        Largest       Std. Dev.      .0234708
75%            1              1
90%            1              1       Variance       .0005509
95%            1              1       Skewness      -18.99067
99%            1              1       Kurtosis       378.2917

                    mop_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%           .5             .5
 5%            1             .5
10%            1              1       Obs                  55
25%            1              1       Sum of Wgt.          55

50%            1                      Mean           .9818182
                        Largest       Std. Dev.      .0944593
75%            1              1
90%            1              1       Variance       .0089226
95%            1              1       Skewness      -4.953558
99%            1              1       Kurtosis       25.53774

                    mop_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                 160
25%            1              1       Sum of Wgt.         160

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

                    zinc_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                  37
25%            1              1       Sum of Wgt.          37

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

                    zinc_fraction_average
-------------------------------------------------------------
      Percentiles      Smallest
 1%            1              1
 5%            1              1
10%            1              1       Obs                  66
25%            1              1       Sum of Wgt.          66

50%            1                      Mean                  1
                        Largest       Std. Dev.             0
75%            1              1
90%            1              1       Variance              0
95%            1              1       Skewness              .
99%            1              1       Kurtosis              .

. 
. file close handle

. 
end of do-file

. 
. **********************************************************
. * Appendinx B tables (satellite yields)
. **********************************************************
. //Table B1 - Satellite data availability by pass 
. do do/table-b1.do

. use "$final_data", clear 

. 
. // Create a t-b1 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-b1/"

. if _rc mkdir "tables/t-b1/"

. 
. //By treatment and control: tab the percent of farmers whose plots were mappe
> d and that we have satellite data for
. 
. label var map_merge "Plot mapped"

. label define map_merge 3 "Mapped" 1 "Not mapped"

. label val map_merge map_merge 

. 
. //Calculate attrition for Sentinel-2
. 
. generate sat_data_2016 = cond(missing(max_re705_2016), 0, 1)

. generate sat_data_2017 = cond(missing(max_re705_2017), 0, 1)

. generate sat_data_2018 = cond(missing(max_re705_2018), 0, 1)

. 
. foreach x in 2016 2017 2018 {
  2.         replace sat_data_`x' = . if map_merge != 3  // The plot was not ma
> pped 
  3.         label var sat_data_`x' "Sentinel-2: `x'"
  4.         label define sat_data_`x' 0 "No data" 1 "Data"
  5.         label val sat_data_`x' sat_data_`x'
  6. }
(190 real changes made, 190 to missing)
(190 real changes made, 190 to missing)
(190 real changes made, 190 to missing)

. 
. generate all_sentinel_data = 1

. foreach x of varlist sat_data_20* {
  2.         replace all_sentinel_data = 0 if `x' != 1 
  3. }
(193 real changes made)
(0 real changes made)
(0 real changes made)

. replace all_sentinel_data = . if map_merge != 3
(190 real changes made, 190 to missing)

. label var all_sentinel_data "Sentinel-2: no missing data"

. label define all_sentinel_data 0 "Missing data" 1 "No missing data"

. label val all_sentinel_data all_sentinel_data

. 
. tabout map_merge sat_data_2016 sat_data_2017 sat_data_2018 all_sentinel_data 
> ///
> treatment ///
> using "tables/t-b1/sentinel-attrition.tex", cells(freq col) format(0c 1c) cla
> b(Number Percent) ///
> replace style(tex) font(italic) bt cl1(2-7) cl2(2-3 4-5 6-7) ///
> topstr(14cm) ptotal(none) 

Table output written to: tables/t-b1/sentinel-attrition.tex

 & \multicolumn{6}{c}{\emph{Treatment}} \\
\cmidrule(l{.75em}){2-7} 
 & \multicolumn{2}{c}{\emph{Control}} & \multicolumn{2}{c}{\emph{Treatment}} & 
> \multicolumn{2}{c}{\emph{Total}} \\
\cmidrule(l{.75em}){2-3} \cmidrule(l{.75em}){4-5}\cmidrule(l{.75em}){6-7}
&Number&Percent&Number&Percent&Number&Percent \\
\midrule
\emph{Plot mapped}&&&&&& \\
Not mapped&85&11.3&105&13.8&190&12.5 \\
Mapped&670&88.7&656&86.2&1,326&87.5 \\
\midrule
\emph{Sentinel-2: 2016}&&&&&& \\
No data&2&0.3&1&0.2&3&0.2 \\
Data&668&99.7&655&99.8&1,323&99.8 \\
\midrule
\emph{Sentinel-2: 2017}&&&&&& \\
No data&2&0.3&1&0.2&3&0.2 \\
Data&668&99.7&655&99.8&1,323&99.8 \\
\midrule
\emph{Sentinel-2: 2018}&&&&&& \\
Data&670&100.0&656&100.0&1,326&100.0 \\
\midrule
\emph{Sentinel-2: no missing data}&&&&&& \\
Missing data&2&0.3&1&0.2&3&0.2 \\
No missing data&668&99.7&655&99.8&1,323&99.8 \\

. 
end of do-file

. 
. //Table B2 - Satellite VIs (not generated in Stata)
. 
. //Table B3 - small vs large plots 
. capture confirm file "tables/t-b3/below_median.tex"

. if _rc {
.         do do/table-b3.do
. }

. else if "$skip_ri" != "True" {
.         do do/table-b3.do
. }

. 
. //Table B4 - Irrigation 
. do do/table-b4.do

. use "$final_data", clear 

. 
. // Create a t-b4 folder to store outputs if it doesn't exist 
. capture confirm file "tables/t-b4/"

. if _rc mkdir "tables/t-b4/"

. 
. // Keep observations that are non-missing for satellite measured and farmer-r
> eported 2017 and 2018 yields 
. drop if missing(max_re705_2017, max_re705_2017, yield_hectare_2018_alt, yield
> _hectare_2017_alt)
(255 observations deleted)

. 
. 
. *****************************************************************************
. * Convert raw vegetation index values to yield estimates 
. *****************************************************************************
. 
. regress yield_hectare_2017 max_re705_2017 

      Source |       SS           df       MS      Number of obs   =     1,261
-------------+----------------------------------   F(1, 1259)      =    150.10
       Model |   181267442         1   181267442   Prob > F        =    0.0000
    Residual |  1.5205e+09     1,259  1207683.15   R-squared       =    0.1065
-------------+----------------------------------   Adj R-squared   =    0.1058
       Total |  1.7017e+09     1,260  1350587.72   Root MSE        =    1098.9

------------------------------------------------------------------------------
yield_h~2017 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   3221.431   262.9453    12.25   0.000     2705.572    3737.291
       _cons |   679.9642   106.1463     6.41   0.000     471.7211    888.2074
------------------------------------------------------------------------------

. predict sentinel_2017, xb 

. replace sentinel_2017 = 0 if sentinel_2017 < 0 
(0 real changes made)

. 
. regress yield_hectare_2018 max_re705_2018 

      Source |       SS           df       MS      Number of obs   =     1,261
-------------+----------------------------------   F(1, 1259)      =    522.96
       Model |   286351250         1   286351250   Prob > F        =    0.0000
    Residual |   689378031     1,259  547559.993   R-squared       =    0.2935
-------------+----------------------------------   Adj R-squared   =    0.2929
       Total |   975729281     1,260  774388.318   Root MSE        =    739.97

------------------------------------------------------------------------------
yield_h~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2018 |   4041.364   176.7235    22.87   0.000     3694.659    4388.069
       _cons |   -291.749   58.63805    -4.98   0.000     -406.788   -176.7099
------------------------------------------------------------------------------

. predict sentinel_2018, xb 

. replace sentinel_2018 = 0 if sentinel_2018 < 0 
(0 real changes made)

. 
. eststo clear 

. 
. preserve 

. keep uid sentinel_2018 sentinel_2017 yield_hectare* physical_irrigation_bl

. rename yield_hectare_2017_alt yield_hectare_alt_2017

. rename yield_hectare_2018_alt yield_hectare_alt_2018

. 
. generate numeric_id = _n 

. 
. reshape long sentinel_ yield_hectare_alt_ yield_hectare_, i(numeric_id) j(yea
> r) 
(note: j = 2017 2018)

Data                               wide   ->   long
-----------------------------------------------------------------------------
Number of obs.                     1261   ->    2522
Number of variables                  11   ->       9
j variable (2 values)                     ->   year
xij variables:
            sentinel_2017 sentinel_2018   ->   sentinel_
yield_hectare_alt_2017 yield_hectare_alt_2018->yield_hectare_alt_
  yield_hectare_2017 yield_hectare_2018   ->   yield_hectare_
-----------------------------------------------------------------------------

. 
. eststo: regress yield_hectare_alt_ i.physical_irrigation_bl##i.year, cluster(
> numeric_id)

Linear regression                               Number of obs     =      2,522
                                                F(3, 1260)        =     709.24
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2499
                                                Root MSE          =     824.04

                         (Std. Err. adjusted for 1,261 clusters in numeric_id)
------------------------------------------------------------------------------
             |               Robust
yield_hec~t_ |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.physical~l |   700.8304   56.43058    12.42   0.000     590.1221    811.5386
             |
        year |
       2018  |   -862.495   53.90444   -16.00   0.000    -968.2474   -756.7427
             |
physical_i~l#|
        year |
     1 2018  |   11.37409   62.50087     0.18   0.856    -111.2431    133.9913
             |
       _cons |   1117.736   49.57237    22.55   0.000     1020.482    1214.989
------------------------------------------------------------------------------
(est1 stored)

. eststo: regress yield_hectare_ i.physical_irrigation_bl##i.year, cluster(nume
> ric_id)

Linear regression                               Number of obs     =      2,522
                                                F(3, 1260)        =     615.19
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2223
                                                Root MSE          =     1003.6

                         (Std. Err. adjusted for 1,261 clusters in numeric_id)
------------------------------------------------------------------------------
             |               Robust
yield_hec~e_ |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.physical~l |   818.2889   71.12073    11.51   0.000     678.7608     957.817
             |
        year |
       2018  |  -919.4762   63.79419   -14.41   0.000    -1044.631   -794.3216
             |
physical_i~l#|
        year |
     1 2018  |  -47.41329     73.845    -0.64   0.521     -192.286    97.45942
             |
       _cons |   1186.079   61.99132    19.13   0.000     1064.461    1307.696
------------------------------------------------------------------------------
(est2 stored)

. eststo: regress sentinel_ i.physical_irrigation_bl##i.year, cluster(numeric_i
> d) 

Linear regression                               Number of obs     =      2,522
                                                F(3, 1260)        =    1942.74
                                                Prob > F          =     0.0000
                                                R-squared         =     0.5837
                                                Root MSE          =     416.94

                         (Std. Err. adjusted for 1,261 clusters in numeric_id)
------------------------------------------------------------------------------
             |               Robust
   sentinel_ |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
1.physical~l |   122.8915   32.87626     3.74   0.000     58.39325    187.3897
             |
        year |
       2018  |  -1304.268   32.78915   -39.78   0.000    -1368.596   -1239.941
             |
physical_i~l#|
        year |
     1 2018  |    379.344   36.38783    10.43   0.000     307.9566    450.7314
             |
       _cons |   1813.094   30.87065    58.73   0.000     1752.531    1873.658
------------------------------------------------------------------------------
(est3 stored)

. 
. //Label variables
. label var year "Year"

. label define year 2017 "2017" 2018 "2018"

. label val year year 

. label var physical_irrigation_bl "Irrigation"

. label define physical_irrigation_bl 0 "No irrigation" 1 "Irrigation"

. label val physical_irrigation_bl physical_irrigation_bl

. 
. esttab using "tables/t-b4/irrigation.tex", replace se noobs ///
> not tex star(* 0.10 ** 0.05 *** 0.01) label scalars("N Observations" "N_clust
>  Clusters" "r2_a Adjusted \$R^2$") sfmt(%9.0fc %9.0fc %9.3fc) ///
> noomitted nobaselevels frag b(%9.3fc) interaction(" x ") ///
> mtitles("\makecell[c]{Survey yield \\ Survey area}" "\makecell[c]{Survey yiel
> d \\ GPS area}" "\makecell[c]{Satellite yield}")
(output written to tables/t-b4/irrigation.tex)

. 
. 
end of do-file

. 
. **********************************************************
. * Figures
. **********************************************************
. 
. //Figure 1 - Sample satellite imagery and NDVI
. * Produced in QGIS
. 
. //Figure 2 - Applied minus recommended fertilizer, basal 
. do do/figure2.do 

. use "$final_data", clear

. 
. // Create a f2 folder to store outputs if it doesn't exist 
. capture confirm file "figures/f2/"

. if _rc mkdir "figures/f2/"

. 
. 
. twoway kdensity difference_DAP if treatment==0, lcolor(red) range(-125 500) f
> color(red%50) recast(area) || ///
> kdensity difference_DAP if treatment==1, range(-125 500) xscale(range(-125 50
> 0)) xline(0, lcolor(black)) lcolor(blue) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  DAP") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f2/DAP.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
. twoway kdensity difference_UREA if treatment==0, lcolor(red) range(-190 125) 
> fcolor(red%50) recast(area) || ///
> kdensity difference_UREA if treatment==1, range(-190 125) xscale(range(-190 1
> 25)) xline(0, lcolor(black)) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  UREA") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f2/UREA.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
. twoway kdensity difference_MOP if treatment==0, lcolor(red) range(-375 65) fc
> olor(red%50) recast(area) || ///
> kdensity difference_MOP if treatment==1, range(-375 65) xscale(range(-375 65)
> ) xline(0, lcolor(black)) lcolor(blue) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  MOP") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f2/MOP.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
. twoway kdensity difference_ZINC if treatment==0, lcolor(red) range(-32 7) fco
> lor(red%50) recast(area) || ///
> kdensity difference_ZINC if treatment==1, range(-32 7) xscale(range(-32 7)) x
> line(0, lcolor(black)) lcolor(blue) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  Zinc") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f2/ZINC.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
end of do-file

. 
. //Figure 3 - Applied minus recommended fertilizer, total 
. do do/figure3.do 

. use "$final_data", clear

. 
. // Create a f3 folder to store outputs if it doesn't exist 
. capture confirm file "figures/f3/"

. if _rc mkdir "figures/f3/"

. 
. twoway kdensity difference_dap if treatment==0, lcolor(red) range(-250 500) f
> color(red%50) recast(area) || ///
> kdensity difference_dap if treatment==1, range(-250 500) xscale(range(-250 50
> 0)) xline(0, lcolor(black)) lcolor(blue) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  DAP") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f3/dap.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
. twoway kdensity difference_urea if treatment==0, lcolor(red) range(-750 450) 
> fcolor(red%50) recast(area) || ///
> kdensity difference_urea if treatment==1, range(-750 450) xscale(range(-750 4
> 50)) xline(0, lcolor(black)) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  UREA") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f3/urea.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
. twoway kdensity difference_mop if treatment==0, lcolor(red) range(-375 125) f
> color(red%50) recast(area) || ///
> kdensity difference_mop if treatment==1, range(-375 125) xscale(range(-375 12
> 5)) xline(0, lcolor(black)) lcolor(blue) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  MOP") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f3/mop.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
. twoway kdensity difference_zinc if treatment==0, lcolor(red) range(-32 32) fc
> olor(red%50) recast(area) || ///
> kdensity difference_zinc if treatment==1, range(-32 32) xscale(range(-32 32))
>  xline(0, lcolor(black)) lcolor(blue) fcolor(blue%50) recast(area) ///
> ytitle("Density") xtitle("Difference between used and recommended fertilizer:
>  Zinc") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) ///
> place(1) /// 
> bmargin(small) bplacement(1)  rows(2) ring(0) symysize(tiny) symxsize(small) 
> size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.0fc))

. 
. gexport, file("figures/f3/zinc.png")
(file /tmp/graph.svg written in SVG format)

. 
end of do-file

. 
. //Figure 4 - Yields 
. do do/figure4.do 

. use "$final_data", clear

. 
. // Create a f3 folder to store outputs if it doesn't exist 
. capture confirm file "figures/f4/"

. if _rc mkdir "figures/f4/"

. 
. //////////////////////////////////////////////////////
> //Self-reported harvest and measured plot size
. //////////////////////////////////////////////////////
> 
. cumul yield_hectare_2018 if treatment==0, gen(cdf_yield_hectare_2018_control)

. cumul yield_hectare_2018 if treatment==1, gen(cdf_yield_hectare_2018_treatmen
> t)

. 
. line cdf_yield_hectare_2018_control yield_hectare_2018, sort lcolor(red) fcol
> or(red%50) recast(area) || ///
> line cdf_yield_hectare_2018_treatment yield_hectare_2018, sort lcolor(blue) f
> color(blue%50) recast(area) ///
> ytitle("Cumulative Density") xtitle("Farmer-reported productivity (kg/hectare
> )") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) place(11) /// 
> bmargin(small) bplacement(11)  rows(2) ring(0) symysize(tiny) symxsize(small)
>  size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.1fc))

. 
. gexport, file("figures/f4/yields_survey.png") 
(file /tmp/graph.svg written in SVG format)

. 
. //////////////////////////////////////////////////////
> //Satellite-measured yield 
. //////////////////////////////////////////////////////
> 
. *****************************************************************************
. * Convert raw vegetation index values to yield estimates 
. *****************************************************************************
. 
. regress yield_hectare_2017 max_re705_2017 

      Source |       SS           df       MS      Number of obs   =     1,319
-------------+----------------------------------   F(1, 1317)      =    175.78
       Model |   207443992         1   207443992   Prob > F        =    0.0000
    Residual |  1.5542e+09     1,317  1180133.02   R-squared       =    0.1178
-------------+----------------------------------   Adj R-squared   =    0.1171
       Total |  1.7617e+09     1,318  1336630.63   Root MSE        =    1086.3

------------------------------------------------------------------------------
yield_h~2017 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   3332.897   251.3836    13.26   0.000     2839.741    3826.053
       _cons |   619.6624   101.4168     6.11   0.000     420.7063    818.6184
------------------------------------------------------------------------------

. predict sentinel_2017, xb 
(193 missing values generated)

. replace sentinel_2017 = 0 if sentinel_2017 < 0 
(0 real changes made)

. 
. regress yield_hectare_2018 max_re705_2018 

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(1, 1289)      =    520.16
       Model |   287348822         1   287348822   Prob > F        =    0.0000
    Residual |   712068216     1,289  552419.097   R-squared       =    0.2875
-------------+----------------------------------   Adj R-squared   =    0.2870
       Total |   999417038     1,290   774741.89   Root MSE        =    743.25

------------------------------------------------------------------------------
yield_h~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2018 |   4011.132   175.8719    22.81   0.000     3666.105    4356.158
       _cons |  -277.7106   58.34909    -4.76   0.000    -392.1802    -163.241
------------------------------------------------------------------------------

. predict sentinel_2018, xb 
(190 missing values generated)

. replace sentinel_2018 = 0 if sentinel_2018 < 0 
(0 real changes made)

. 
. cumul sentinel_2018 if treatment==0, gen(cdf_sentinel_2018_control)

. cumul sentinel_2018 if treatment==1, gen(cdf_sentinel_2018_treatment)

. 
. line cdf_sentinel_2018_control sentinel_2018, sort lcolor(red) fcolor(red%50)
>  recast(area) || ///
> line cdf_sentinel_2018_treatment sentinel_2018, sort lcolor(blue) fcolor(blue
> %50) recast(area) ///
> ytitle("Cumulative Density") xtitle("Satellite-measured productivity (kg/hect
> are)") ///
> plotregion(margin(b = 0)) ///
> legend(order(1 2) region(lwidth(none)) label(1 "Control") label(2 "Treatment"
> ) place(11) /// 
> bmargin(small) bplacement(11)  rows(2) ring(0) symysize(tiny) symxsize(small)
>  size(small) ) ///
> graphregion(color(white)) xlabel(, format(%12.1fc))

. 
. gexport, file("figures/f4/yields_satellite.png") 
(file /tmp/graph.svg written in SVG format)

. 
. 
end of do-file

. 
. //Figure 5 - Rainfall 
. do do/figure5.do 

. use "$rainfall_data", clear 

. 
. merge 1:1 uid using "$merged_data", keepusing(sowed_cotton) keep(3) nogenerat
> e
(note: variable uid was str11, now str14 to accommodate using data's values)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                             1,389  
    -----------------------------------------

. 
. // Create a f5 folder to store outputs if it doesn't exist 
. capture confirm file "figures/f5/"

. if _rc mkdir "figures/f5/"

. 
. // Create a folder to store the reshaped data (but not sync to Overleaf) if i
> t doesn't exist
. // This is to speed up execution on future runs
. capture confirm file "data/nosync/"

. if _rc mkdir "data/nosync/"

. 
. keep if sowed_cotton == 1
(77 observations deleted)

. 
. drop sowed_cotton

. 
. *****************************************************************************
> *****************
. *Daily 
. *****************************************************************************
> *****************
. 
. preserve 

. 
. // The reshaping takes a very long time, so save the file (but add it to giti
> gnore so it's not saved online), and then try loading it instead of recreatin
> g it on future runs
. capture confirm file "data/nosync/rainfall_1.dta"

. if _rc {
. 
. reshape long rain_daily_, i(uid) j(date_str) string 
. 
. gen date = date(date_str, "YMD")
. format date %td
. 
. drop date_str 
. 
. rename rain_daily_ rain 
. 
. collapse (mean) rain, by(date)
. 
. label var rain "Rainfall (mm)"
. 
. generate day = day(date)
. generate month = month(date)
. generate year = year(date)
. 
. drop date 
. 
. reshape wide rain, i(day month) j(year)
. 
. generate year_dummy = 2017 //We will create a new date variable where the yea
> r is listed as 2017 regardless of what it actually is so that overlaying the 
> plots is easier
. 
. generate date = mdy(month, day, year_dummy)
. format date %tdMonth_dd
. 
. drop year_dummy day month 
. 
. tsset date 
. 
. //Rename 2018 and 2019 (the post-treatment years) so that we can emphasize th
> em
. 
. rename rain2018 rain_2018
. 
. rename rain2019 rain_2019
. label var rain_2019 "2019"
. 
. // We rename this because there are too many years to plot, or the graph cann
> ot be interpreted 
. 
. rename rain2017 rainfall_2017
. label var rainfall_2017 "2017"
. rename rain2016 rainfall_2016 
. label var rainfall_2016 "2016"
. 
. foreach x of varlist rain2* { 
  2. local year = substr("`x'",5,4)
  3. label var `x' "`year'"
  4. }
. 
. save "data/nosync/rainfall_1.dta", replace 
. 
. }

. 
. else {
.         use "data/nosync/rainfall_1.dta", clear 
. }

. 
. label var rain_2018 "2018 (Intervention year)"

. 
. set scheme plotplain

. *https://www.stata-journal.com/sjpdf.html?articlenum=gr0002
. 
. tsline rainfall* || ///
> tsline rain_2018, lcolor(red) connect(direct) lpattern(solid) ///
> legend(position(2) bmargin(tiny) ring(0)) ytitle("Rainfall (mm/day)") xtitle(
> "")

. 
. gexport, file("figures/f5/rain_daily.png") 
(file /tmp/graph.svg written in SVG format)

. 
. capture graph close 

.  
. restore 

. 
. *****************************************************************************
> *****************
. *Monthly
. *****************************************************************************
> *****************
. 
. // The reshaping takes a very long time, so save the file (but add it to giti
> gnore so it's not saved online), and then try loading it instead of recreatin
> g it on future runs
. capture confirm file "data/nosync/rainfall_2.dta"

. if _rc {
. 
. reshape long rain_daily_, i(uid) j(date_str) string 
. 
. rename rain_daily_ rain 
. 
. gen date = date(date_str, "YMD")
. drop date_str 
. 
. replace date = mdy(month(date), 1, year(date))  // Converts to month and year
>  only since we are producing monthly figures
. 
. collapse (mean) rain, by(date)
. 
. label var rain "Rainfall (mm/day)"
. 
. label var date "Date"
. 
. gen year = year(date)
. label var year "Year" 
. 
. gen month = month(date)
. label var month "Month"
. 
. bysort month: egen average_rain = mean(rain)
. 
. drop date 
. 
. reshape wide rain average_rain, i(month) j(year)
. 
. capture label drop month 
. label define month 6 "June" 7 "July" 8 "August" 9 "September" 10 "October"
. 
. label val month month 
. rename average_rain2010 average_rain 
. label var average_rain "Average rainfall: 2010-2019 (mm/day)"
. 
. drop average_rain2* 
. rename rain2018 rain_2018
. rename rain2019 rain_2019
. 
. local labels 
. 
. foreach x of varlist rain2* { 
  2. local year = substr("`x'",5,4)
  3. label var `x' "`year'"
  4. }
. 
. label var rain_2019 "2019"
. 
. label var average_rain "Average"
. 
. save "data/nosync/rainfall_2.dta", replace 
. 
. }

. 
. else {
.         use "data/nosync/rainfall_2.dta", clear 
. }

. 
. label var rain_2018 "2018 (Intervention year)"

. 
. graph twoway line rain20* month || ///
> line average_rain month, lcolor(gs7) connect(direct) lpattern(solid) lwidth(t
> hick) || ///
> line rain_2018 month, lcolor(red) connect(direct) lpattern(solid) ///
> legend(position(2) cols(2) bmargin(tiny) ring(0)) xlabel(6 7 8 9 10, valuelab
> el) ///
> xtitle("") ytitle("Rainfall (mm/day)")

. 
. gexport, file("figures/f5/rain_monthly.png") 
(file /tmp/graph.svg written in SVG format)

. 
. capture graph close 

. 
end of do-file

. 
. //Figure 6 - Farmer-reported yields vs satellite vegetation indices 
. do do/figure6.do 

. use "$final_data", clear

. 
. // Create a f6 folder to store outputs if it doesn't exist 
. capture confirm file "figures/f6/"

. if _rc mkdir "figures/f6/"

. 
. 
. set scheme plotplain

. 
. scatter yield_hectare_2018 max_ndvi_2018, xtitle("NDVI")

. gexport, file("figures/f6/NDVI.png")
(file /tmp/graph.svg written in SVG format)

. 
. scatter yield_hectare_2018 max_gcvi_2018, xtitle("GCVI")

. gexport, file("figures/f6/GCVI.png")
(file /tmp/graph.svg written in SVG format)

. 
. scatter yield_hectare_2018 max_re705_2018, xtitle("reNDVI")

. gexport, file("figures/f6/reNDVI.png")
(file /tmp/graph.svg written in SVG format)

. 
. scatter yield_hectare_2018 max_mtci_2018, xtitle("MTCI")

. gexport, file("figures/f6/MTCI.png")
(file /tmp/graph.svg written in SVG format)

. 
. scatter yield_hectare_2018 max_lai_2018, xtitle("LAI")

. gexport, file("figures/f6/LAI.png")
(file /tmp/graph.svg written in SVG format)

. 
end of do-file

. 
. //Figure 7 - Confidence intervals with farmer-reported and satellite data 
. do do/figure7.do 

. use "$final_data", clear

. 
. // Create a f7 folder to store outputs if it doesn't exist 
. capture confirm file "figures/f7/"

. if _rc mkdir "figures/f7/"

. 
. eststo clear 

. 
. generate productivity_2017 = . //We will replace this variable in each regres
> sion so all 2017 values of the dependent variable appear in one row 
(1,516 missing values generated)

. label var productivity_2017 "2017 yield"

. 
. 
. *****************************************************************************
. * Convert raw vegetation index values to yield estimates 
. *****************************************************************************
. 
. regress yield_hectare_2017 max_re705_2017 

      Source |       SS           df       MS      Number of obs   =     1,319
-------------+----------------------------------   F(1, 1317)      =    175.78
       Model |   207443992         1   207443992   Prob > F        =    0.0000
    Residual |  1.5542e+09     1,317  1180133.02   R-squared       =    0.1178
-------------+----------------------------------   Adj R-squared   =    0.1171
       Total |  1.7617e+09     1,318  1336630.63   Root MSE        =    1086.3

------------------------------------------------------------------------------
yield_h~2017 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2017 |   3332.897   251.3836    13.26   0.000     2839.741    3826.053
       _cons |   619.6624   101.4168     6.11   0.000     420.7063    818.6184
------------------------------------------------------------------------------

. predict sentinel_2017, xb 
(193 missing values generated)

. replace sentinel_2017 = 0 if sentinel_2017 < 0 
(0 real changes made)

. 
. regress yield_hectare_2018 max_re705_2018 

      Source |       SS           df       MS      Number of obs   =     1,291
-------------+----------------------------------   F(1, 1289)      =    520.16
       Model |   287348822         1   287348822   Prob > F        =    0.0000
    Residual |   712068216     1,289  552419.097   R-squared       =    0.2875
-------------+----------------------------------   Adj R-squared   =    0.2870
       Total |   999417038     1,290   774741.89   Root MSE        =    743.25

------------------------------------------------------------------------------
yield_h~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
max_re7~2018 |   4011.132   175.8719    22.81   0.000     3666.105    4356.158
       _cons |  -277.7106   58.34909    -4.76   0.000    -392.1802    -163.241
------------------------------------------------------------------------------

. predict sentinel_2018, xb 
(190 missing values generated)

. replace sentinel_2018 = 0 if sentinel_2018 < 0 
(0 real changes made)

. 
. //////////////////////////////////////////////////////
> //Regression 1 - farmer-reported yield and plot size: full sample and Lee Bou
> nds
. //////////////////////////////////////////////////////
> 
. replace productivity_2017 = yield_hectare_2017_alt
(1,511 real changes made)

. eststo: regress yield_hectare_2018_alt i.treatment productivity_2017 i.block_
> id, robust

Linear regression                               Number of obs     =      1,336
                                                F(7, 1328)        =      69.20
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2490
                                                Root MSE          =      689.6

------------------------------------------------------------------------------
             |               Robust
yield_~8_alt |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |   1.718241   37.72989     0.05   0.964    -72.29845    75.73493
product~2017 |   .2600048   .0236474    11.00   0.000     .2136146    .3063951
             |
    block_id |
     halvad  |    534.119   78.37394     6.82   0.000     380.3687    687.8692
     jasdan  |  -136.0637   73.69957    -1.85   0.065    -280.6439    8.516609
      morbi  |   -602.722   57.57664   -10.47   0.000    -715.6731   -489.7709
       muli  |   -4.06593   67.80741    -0.06   0.952    -137.0872    128.9554
  vinchhiya  |  -406.1756   59.73625    -6.80   0.000    -523.3633   -288.9879
             |
       _cons |   540.4518   65.35765     8.27   0.000     412.2363    668.6673
------------------------------------------------------------------------------
(est1 stored)

. 
. //////////////////////////////////////////////////////
> //Regression 2 - satellite, 2016 control (full sample)
. //////////////////////////////////////////////////////
> 
. replace productivity_2017 = sentinel_2017
(1,516 real changes made, 193 to missing)

. eststo: regress sentinel_2018 i.treatment productivity_2017 max_re705_2016 i.
> block_id, robust

Linear regression                               Number of obs     =      1,323
                                                F(8, 1314)        =     114.35
                                                Prob > F          =     0.0000
                                                R-squared         =     0.3817
                                                Root MSE          =     375.95

------------------------------------------------------------------------------
             |               Robust
sentine~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -10.00006   20.71741    -0.48   0.629    -50.64288    30.64276
product~2017 |   .1981247    .032333     6.13   0.000     .1346949    .2615546
max_re7~2016 |   1381.861   115.6186    11.95   0.000     1155.043    1608.678
             |
    block_id |
     halvad  |   184.2622   38.62995     4.77   0.000     108.4791    260.0453
     jasdan  |    398.504   41.55486     9.59   0.000     316.9829    480.0251
      morbi  |  -380.1089   33.24905   -11.43   0.000    -445.3359   -314.8819
       muli  |  -60.47666   34.20571    -1.77   0.077    -127.5804    6.627111
  vinchhiya  |   58.28598   36.26222     1.61   0.108     -12.8522    129.4241
             |
       _cons |   71.05276   69.78647     1.02   0.309    -65.85231    207.9578
------------------------------------------------------------------------------
(est2 stored)

. 
. //////////////////////////////////////////////////////
> //Regression 3 - farmer-reported yield and plot size 
. //////////////////////////////////////////////////////
> 
. preserve

. 
. // We want to examine the effect of data source on power, so we only keep obs
> ervations that are non-missing for each data type 
. drop if missing(sentinel_2018, sentinel_2017, yield_hectare_2018_alt, yield_h
> ectare_2017_alt)
(255 observations deleted)

. 
. replace productivity_2017 = yield_hectare_2017_alt
(1,261 real changes made)

. eststo: regress yield_hectare_2018_alt i.treatment productivity_2017 i.block_
> id, robust

Linear regression                               Number of obs     =      1,261
                                                F(7, 1253)        =      68.34
                                                Prob > F          =     0.0000
                                                R-squared         =     0.2525
                                                Root MSE          =     686.88

------------------------------------------------------------------------------
             |               Robust
yield_~8_alt |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -4.850357   38.65527    -0.13   0.900    -80.68654    70.98583
product~2017 |   .2605382   .0240762    10.82   0.000     .2133041    .3077724
             |
    block_id |
     halvad  |    549.701   80.77387     6.81   0.000     391.2341     708.168
     jasdan  |  -110.3465   76.45211    -1.44   0.149    -260.3348    39.64178
      morbi  |  -593.3612   60.29794    -9.84   0.000    -711.6572   -475.0651
       muli  |    21.5682   70.72878     0.30   0.760    -117.1917    160.3281
  vinchhiya  |  -389.5717   62.61592    -6.22   0.000    -512.4153   -266.7281
             |
       _cons |   526.3167   67.75009     7.77   0.000     393.4006    659.2328
------------------------------------------------------------------------------
(est3 stored)

. 
. //////////////////////////////////////////////////////
> //Regression 4 - satellite, no 2016 control
. //////////////////////////////////////////////////////
> 
. replace productivity_2017 = sentinel_2017
(1,261 real changes made)

. eststo: regress sentinel_2018 i.treatment productivity_2017 i.block_id, robus
> t 

Linear regression                               Number of obs     =      1,261
                                                F(7, 1253)        =      97.37
                                                Prob > F          =     0.0000
                                                R-squared         =     0.3066
                                                Root MSE          =     395.09

------------------------------------------------------------------------------
             |               Robust
sentine~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |   5.958828   22.24936     0.27   0.789    -37.69128    49.60894
product~2017 |   .3069561   .0331787     9.25   0.000     .2418643     .372048
             |
    block_id |
     halvad  |   214.5089   41.26926     5.20   0.000     133.5444    295.4733
     jasdan  |   469.6612   44.77639    10.49   0.000     381.8162    557.5061
      morbi  |  -361.5765   37.11093    -9.74   0.000    -434.3829   -288.7701
       muli  |  -85.96964   39.29563    -2.19   0.029    -163.0621   -8.877145
  vinchhiya  |   56.29046   39.36647     1.43   0.153    -20.94101    133.5219
             |
       _cons |   336.4763   74.48777     4.52   0.000     190.3418    482.6108
------------------------------------------------------------------------------
(est4 stored)

. 
. //////////////////////////////////////////////////////
> //Regression 5 - satellite, 2016 control
. //////////////////////////////////////////////////////
> 
. replace productivity_2017 = sentinel_2017
(0 real changes made)

. eststo: regress sentinel_2018 i.treatment productivity_2017 max_re705_2016 i.
> block_id, robust

Linear regression                               Number of obs     =      1,261
                                                F(8, 1252)        =     121.06
                                                Prob > F          =     0.0000
                                                R-squared         =     0.3936
                                                Root MSE          =     369.63

------------------------------------------------------------------------------
             |               Robust
sentine~2018 |      Coef.   Std. Err.      t    P>|t|     [95% Conf. Interval]
-------------+----------------------------------------------------------------
   treatment |
  Treatment  |  -2.979352   20.87019    -0.14   0.887    -43.92375    37.96505
product~2017 |   .1988823   .0323287     6.15   0.000      .135458    .2623067
max_re7~2016 |    1423.96   115.8528    12.29   0.000     1196.673    1651.247
             |
    block_id |
     halvad  |   206.3252   38.39251     5.37   0.000     131.0044    281.6459
     jasdan  |   401.9464   42.62851     9.43   0.000     318.3152    485.5776
      morbi  |  -396.0197    32.3008   -12.26   0.000    -459.3893     -332.65
       muli  |  -57.62563   34.35527    -1.68   0.094    -125.0259     9.77462
  vinchhiya  |   58.25894   36.63405     1.59   0.112    -13.61196    130.1298
             |
       _cons |   52.60443   70.14086     0.75   0.453    -85.00216     190.211
------------------------------------------------------------------------------
(est5 stored)

. 
. restore

. 
. set scheme s2color //Default scheme 

. 
. coefplot est1 || est2 || est3 || est4 || est5, keep(1.treatment) bycoefs byla
> bels("FR" "Satellite" "FR" `""Satellite" "(exc. 2016)""' "Satellite") xline(0
> ) ///
> msymbol(d) mcolor(white) levels(99 95 90 80 70) ciopts(lwidth(3 ..) lcolor(*.
> 2 *.4 *.6 *.8 *1)) ///
> legend(order(1 "99" 2 "95" 3 "90" 4 "80" 5 "70") rows(1)) groups(1 2="All dat
> a" 3 4 5="Intersecting sample") ///
> graphregion(color(white)) plotregion(margin(b = 0))

. 
. gexport, file("figures/f7/confidence_intervals.png")
(file /tmp/graph.svg written in SVG format)

. 
. 
end of do-file

. 
end of do-file
